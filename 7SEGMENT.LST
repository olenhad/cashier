8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:26:27  10/25/;2  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE TIMER
OBJECT MODULE PLACED IN 7SEGMENT.OBJ
ASSEMBLER INVOKED BY:  F:\CASHIER\ASM86.EXE 7SEGMENT.ASM


LOC  OBJ                  LINE     SOURCE

                             1 +1  $MOD186
                             2 +1  $EP
                             3     NAME TIMER
                             4     ; Main program for uPD70208 microcomputer system
                             5     ;
                             6     ; Author:       Dr Tay Teng Tiow
                             7     ; Address:      Department of Electrical Engineering 
                             8     ;               National University of Singapore
                             9     ;               10, Kent Ridge Crescent
                            10     ;               Singapore 0511. 
                            11     ; Date:         6th September 1991
                            12     ;
                            13     ; This file contains proprietory information and cannot be copied 
                            14     ; or distributed without prior permission from the author.
                            15     ; =========================================================================
                            16     
                            17     public  serial_rec_action, timer2_action
                            18     extrn   print_char:far, print_2hex:far, iodefine:far
                            19     extrn   set_timer2:far
  0100                      20     LED_SELECT      EQU     0100H
  0180                      21     LED_OUTPUT      EQU     0180H 
  FFA4                      22              PCSBA   EQU    0FFA4H ; Peripheral Chip Select Base Address
  FFA8                      23              MPCS    EQU    0FFA8H ; MMCS and PCS Alter Control Register
----                        24     STACK_SEG       SEGMENT
0000 (256                   25                     DB      256 DUP(?)
     ??
     )
0100                        26             TOS     LABEL   WORD
----                        27     STACK_SEG       ENDS
                            28     
----                        29     DATA_SEG        SEGMENT
0000 0A                     30             TIMER0_MESS     DB      10,13,'TIMER2 INTERRUPT    '
0001 0D
0002 54494D45523220
     494E5445525255
     505420202020
0016 2F                     31             T_COUNT         DB      2FH
0017 2F                     32             T_COUNT_SET     DB      2FH
0018 0A                     33             REC_MESS        DB      10,13,'Period of timer0 =     '
0019 0D
001A 506572696F6420
     6F662074696D65
     7230203D202020
     2020
                            34             ;BCD            DB      7EH,30H,6DH,79H,33H,5BH,5FH,70H,7FH,7BH
0031 3F                     35             BCD         DB  3FH,06H,5BH,4FH,66H,6DH,7DH,07H,7FH,06FH
0032 06
0033 5B
0034 4F
0035 66
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:26:27  10/25/;2  PAGE    2


LOC  OBJ                  LINE     SOURCE

0036 6D
0037 7D
0038 07
0039 7F
003A 6F
003B 3412                   36             DISPLAY_NUM     DW      1234H
----                        37     DATA_SEG        ENDS
                            38     
                            39     
----                        40     CODE_SEG        SEGMENT
                            41     
                            42             PUBLIC          START
                            43     
                            44     ASSUME  CS:CODE_SEG, SS:STACK_SEG
                            45     
0000                        46     START:
                            47     ;initialize stack area
                            48                     ; Initialize MPCS to MAP peripheral to IO address
0000 BAA8FF                 49              MOV DX, MPCS
0003 B88300                 50              MOV AX, 0083H
0006 EE                     51              OUT DX, AL
                            52     ; PCSBA initial, set the serial port start from 00H
0007 BAA4FF                 53              MOV DX, PCSBA
000A B80300                 54              MOV AX, 0003H ; Peripheral starting address 00H no READY, No Waits
000D EE                     55              OUT DX, AL
                            56                      
000E B8----         R       57                     MOV     AX,STACK_SEG            
0011 8ED0                   58                     MOV     SS,AX
0013 368B260001             59                     MOV     SP,TOS
                            60     
                            61     ; Initialize the on-chip pheripherals
0018 9A0000----     E       62                     CALL    FAR PTR IODEFINE
                            63                     
                            64     
                            65     
                            66     ; ^^^^^^^^^^^^^^^^^  Start of User Main Routine  ^^^^^^^^^^^^^^^^^^
001D 9A0000----     E       67         call set_timer2
0022 FB                     68                      STI
                            69     
0023                        70     INIT:
0023 BB----         R       71             MOV BX, DATA_SEG
0026 8EDB                   72             MOV DS,BX
                            73             
                            74     
0028                        75     NEXT:
0028 A13B00                 76                     MOV AX,DS:DISPLAY_NUM
002B 9A3200----     R       77                     CALL FAR PTR DISPLAY_BCD        
                            78     
                            79     
0030 EBF6                   80             JMP NEXT
                            81     
                            82     ; ^^^^^^^^^^^^^^^ End of User main routine ^^^^^^^^^^^^^^^^^^^^^^^^^
                            83     
                            84     ;; EXPECTS 16 BIT BCD ENCODED NUMBER IN AX.  
0032                        85     DISPLAY_BCD     PROC    FAR
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:26:27  10/25/;2  PAGE    3


LOC  OBJ                  LINE     SOURCE

0032 50                     86             PUSH AX
0033 53                     87             PUSH BX
0034 51                     88             PUSH CX
0035 52                     89             PUSH DX
                            90             ;; NUMBER STORED IN CX
0036 8BC8                   91             MOV CX, AX
0038 B7FE                   92             MOV BH, 0FEH;1111 1110
003A B304                   93             MOV BL, 04H
003C                        94     LOOP_START:
                            95             ;; SET LCD_SELECT
003C 8AC7                   96             MOV AL, BH
003E BA0001                 97             MOV DX, LED_SELECT
0041 EE                     98             OUT DX, AL
                            99             
0042 D0C7                  100             ROL BH,01 ;1111 1101 -> 1111 1011 -> 1111 0111
                           101             
0044 8BC1                  102             MOV AX, CX
                           103             
0046 240F                  104             AND AL, 0FH
                           105             ;5557 : 0101 0101 0101 0111 ->000 0111
0048 9A7200----     R      106             CALL FAR PTR BCD_TO_7SEG
                           107             
                           108             ;RESULT IN AL
004D BA8001                109             MOV DX, LED_OUTPUT
0050 EE                    110             OUT DX,AL
0051 B000                  111             MOV AL,0H
0053 EE                    112             OUT DX,AL
                           113             
0054 FECB                  114             DEC BL
0056 C1E904                115             SHR CX,04H
                           116             ;0000 0101 0101 0101
                           117             ; 0000 0000 0101 0101
                           118             ;BL IS NOW 2
                           119             ;0000 0000 0000 0101
                           120             
0059 80FB00                121             CMP BL, 0
005C 75DE                  122             JNZ LOOP_START
                           123     
                           124             
005E 5A                    125             POP DX
005F 59                    126             POP CX
0060 5B                    127             POP BX
0061 58                    128             POP AX
0062 CB                    129             RET
                           130     DISPLAY_BCD     ENDP
                           131     ;; EXPECTS A 16 BIT NUMBER IN AX. DISPLAYS IT ON THE 7 SEGMENT 
                           132     ;; NOTE: 16 BITS MEANS 4 BCD DIGITS. THIS THIS ROUTINE ONLY USES 4 LEDS. 
                           133     
0063                       134     CONVERT_TO_BCD  PROC    FAR
                           135     
                           136     
0063 53                    137             PUSH BX
0064 8AD8                  138             MOV BL,AL
0066 80FB0A                139             CMP BL,10
0069 7D03                  140             JGE GREATER_THAN_10
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:26:27  10/25/;2  PAGE    4


LOC  OBJ                  LINE     SOURCE

006B EB0390                141             JMP RETURN_BCD
                           142     ;; IF BL(AL) > = 10 WE ADD 6. AH -> 10H 
006E                       143     GREATER_THAN_10:
006E 0406                  144             ADD AL,06
                           145             
0070                       146     RETURN_BCD:
                           147             
0070 5B                    148             POP BX
0071 CB                    149             RET
                           150     CONVERT_TO_BCD  ENDP
                           151     ;; 
                           152     ;EXPECTS A 4BIT BCD DIGIT IN AL. RETURNS THE 7SEG CODE IN AL FOR THAT DIGIT     
0072                       153     BCD_TO_7SEG     PROC    FAR
0072 53                    154             PUSH BX
                           155     
                           156             ;; STORE AL TEMPORARILY IN BL
0073 8AD8                  157             MOV BL,AL
                           158             
0075 32FF                  159             XOR BH,BH
                           160             ;; GET THE BLTH INDEX OF THE BCD ARRAY IN DATA_SEG
0077 8A4731                161             MOV AL,DS:BCD[BX]
007A 5B                    162             POP BX
007B CB                    163             RET
                           164     BCD_TO_7SEG     ENDP    
                           165     
                           166     
007C                       167     SERIAL_REC_ACTION       PROC    FAR
007C 51                    168                     PUSH    CX
007D 53                    169                     PUSH    BX
007E 1E                    170                     PUSH    DS
                           171     
007F BB----         R      172                     MOV     BX,DATA_SEG             ;initialize data segment register
0082 8EDB                  173                     MOV     DS,BX
                           174     
0084 3C3C                  175                     CMP     AL,'<'
0086 750B                  176                     JNE     S_FAST
                           177     
0088 FE061700              178                     INC     DS:T_COUNT_SET
008C FE061700              179                     INC     DS:T_COUNT_SET
                           180     
0090 EB0D90                181                     JMP     S_NEXT0
0093                       182     S_FAST:
0093 3C3E                  183                     CMP     AL,'>'
0095 7521                  184                     JNE     S_RET
                           185     
0097 FE0E1700              186                     DEC     DS:T_COUNT_SET
009B FE0E1700              187                     DEC     DS:T_COUNT_SET
                           188     
009F                       189     S_NEXT0:
009F B91600                190                     MOV     CX,22                   ;initialize counter for message
00A2 BB0000                191                     MOV     BX,0
                           192     
00A5 8A4718                193     S_NEXT1:        MOV     AL,DS:REC_MESS[BX]      ;print message
00A8 9A0000----     E      194                     call    FAR ptr print_char
00AD 43                    195                     INC     BX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    21:26:27  10/25/;2  PAGE    5


LOC  OBJ                  LINE     SOURCE

00AE E2F5                  196                     LOOP    S_NEXT1
                           197     
00B0 A01700                198                     MOV     AL,DS:T_COUNT_SET       ;print current period of timer0
00B3 9A0000----     E      199                     CALL    FAR PTR PRINT_2HEX
00B8                       200     S_RET:
00B8 1F                    201                     POP     DS
00B9 5B                    202                     POP     BX
00BA 59                    203                     POP     CX
00BB CB                    204                     RET
                           205     SERIAL_REC_ACTION       ENDP
                           206     
                           207     
                           208     
00BC                       209     TIMER2_ACTION   PROC    FAR
00BC 50                    210                     PUSH    AX
00BD 1E                    211                     PUSH    DS
00BE 53                    212                     PUSH    BX
00BF 51                    213                     PUSH    CX
                           214     
00C0 B8----         R      215                     MOV     AX,DATA_SEG
00C3 8ED8                  216                     MOV     DS,AX
                           217             
00C5 FE0E1600              218                     DEC     DS:T_COUNT
00C9 7516                  219                     JNZ     T_NEXT1
00CB A01700                220                     MOV     AL,DS:T_COUNT_SET
00CE A21600                221                     MOV     DS:T_COUNT,AL
                           222     
00D1 B91400                223                     MOV     CX,20
00D4 BB0000                224                     MOV     BX,0H
00D7                       225     T_NEXT0:
00D7 8A07                  226                     MOV     AL,DS:TIMER0_MESS[BX]
00D9 43                    227                     INC     BX
00DA 9A0000----     E      228                     CALL    FAR PTR PRINT_CHAR
00DF E2F6                  229                     LOOP    T_NEXT0
                           230     
00E1                       231     T_NEXT1:
                           232     
00E1 59                    233                     POP     CX
00E2 5B                    234                     POP     BX
00E3 1F                    235                     POP     DS
00E4 58                    236                     POP     AX
00E5 CB                    237                     RET
                           238     TIMER2_ACTION   ENDP
                           239     
                           240     
----                       241     CODE_SEG        ENDS
                           242     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
