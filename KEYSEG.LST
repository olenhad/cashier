8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    15:11:08  11/16/;2  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE TIMER
OBJECT MODULE PLACED IN KEYSEG.OBJ
ASSEMBLER INVOKED BY:  G:\CASHIER\ASM86.EXE KEYSEG.ASM


LOC  OBJ                  LINE     SOURCE

                             1 +1  $MOD186
                             2 +1  $EP
                             3     NAME TIMER
                             4     ; Main program for uPD70208 microcomputer system
                             5     ;
                             6     ; Author:       Dr Tay Teng Tiow
                             7     ; Address:      Department of Electrical Engineering 
                             8     ;               National University of Singapore
                             9     ;               10, Kent Ridge Crescent
                            10     ;               Singapore 0511. 
                            11     ; Date:         6th September 1991
                            12     ;
                            13     ; This file contains proprietory information and cannot be copied 
                            14     ; or distributed without prior permission from the author.
                            15     ; =========================================================================
                            16     ; 1 KEYBOARD VERSION (TESTING ONLY)
                            17     public  serial_rec_action, timer2_action
                            18     extrn   print_char:far, print_2hex:far, iodefine:far
                            19     extrn   set_timer2:far
  0080                      20     PORTA           equ 080h
  0081                      21     PORTB           EQU 081H
  0082                      22     PORTC           EQU 082H
  0083                      23     CWR             EQU 083H
  0100                      24     LED_SELECT      EQU     0100H
  0180                      25     LED_OUTPUT      EQU     0180H 
  FFA4                      26     PCSBA           EQU    0FFA4H ; Peripheral Chip Select Base Address
  FFA8                      27     MPCS            EQU    0FFA8H ; MMCS and PCS Alter Control Register
  0008                      28     KBD_BUFFER_LEN  EQU             08
----                        29     STACK_SEG       SEGMENT
0000 (256                   30                     DB      256 DUP(?)
     ??
     )
0100                        31             TOS     LABEL   WORD
----                        32     STACK_SEG       ENDS
                            33     
                            34     
----                        35     DATA_SEG        SEGMENT
                            36             
0000 0A                     37             TIMER0_MESS     DB      10,13,'TIMER2 INTERRUPT    '
0001 0D
0002 54494D45523220
     494E5445525255
     505420202020
0016 2F                     38             T_COUNT         DB      2FH
0017 2F                     39             T_COUNT_SET     DB      2FH
0018 0A                     40             REC_MESS        DB      10,13,'Period of timer0 = '  
0019 0D
001A 506572696F6420
     6F662074696D65
     7230203D20
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    15:11:08  11/16/;2  PAGE    2


LOC  OBJ                  LINE     SOURCE

002D 31                     41             array       DB      '1','2','3','4','5','6','7','8','9','*','0','#'
002E 32
002F 33
0030 34
0031 35
0032 36
0033 37
0034 38
0035 39
0036 2A
0037 30
0038 23
0039 3F                     42             BCD         DB  3FH,06H,5BH,4FH,66H,6DH,7DH,07H,7FH,06FH
003A 06
003B 5B
003C 4F
003D 66
003E 6D
003F 7D
0040 07
0041 7F
0042 6F
0043 3F                     43             LED_BUFFER      DB      3fh,06h,5bh,4fh,66h,6dh
0044 06
0045 5B
0046 4F
0047 66
0048 6D
0049 00                     44             CUR_LED         DB      0H
004A 3412                   45             DISPLAY_NUM     DW      1234H
004C (10                    46             KBD_BUFFER      DB      10 DUP(?)
     ??
     )
0056 00                     47             KBD_BUFFER_SEEK DB      0H
0057 00                     48             KBD_ROW_COUNTER DB      0H
0058 00                     49             KBD_OUTPUT      DB      0H
                            50     ;=========================================================================
                            51     ;Port B of the 8255 is used as the input port for the keybad
                            52     ;Port C is used as the output and grounds the rows one by one
                            53     ;=========================================================================
                            54     
----                        55     DATA_SEG        ENDS
                            56     
                            57     
----                        58     CODE_SEG        SEGMENT
                            59     
                            60             PUBLIC          START
                            61     
                            62     ASSUME  CS:CODE_SEG, SS:STACK_SEG, DS:DATA_SEG
                            63     
0000                        64     START:
                            65      ; Initialize MPCS to MAP peripheral to IO address
0000 BAA8FF                 66              MOV DX, MPCS
0003 B88300                 67              MOV AX, 0083H
0006 EE                     68              OUT DX, AL
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    15:11:08  11/16/;2  PAGE    3


LOC  OBJ                  LINE     SOURCE

                            69     ; PCSBA initial, set the serial port start from 00H
0007 BAA4FF                 70              MOV DX, PCSBA
000A B80300                 71              MOV AX, 0003H ; Peripheral starting address 00H no READY, No Waits
000D EE                     72              OUT DX, AL
                            73     
                            74     ;initialize stack area
000E B8----         R       75                     MOV     AX,STACK_SEG            
0011 8ED0                   76                     MOV     SS,AX
0013 368B260001             77                     MOV     SP,TOS
                            78     ;Initialise data segment
0018 B8----         R       79                     MOV AX,DATA_SEG
001B 8ED8                   80                     MOV DS,AX
                            81     
                            82     ; Initialize the on-chip pheripherals
001D 9A0000----     E       83                     CALL FAR PTR IODEFINE
                            84                     
                            85     
                            86     
                            87     ; ^^^^^^^^^^^^^^^^^  Start of User Main Routine  ^^^^^^^^^^^^^^^^^^
                            88        
0022 B082                   89     MOV AL, 82H       ;mode 0, A - out, B-in ;changed value of CW from 82H
0024 BA8300                 90                     MOV DX, CWR
0027 EE                     91                     OUT DX, AL      ;send the control word
0028 B300                   92                     MOV BL, 00H     ;initialize BL for key code
002A 33C0                   93                     XOR AX, AX      ;clear ax flags
002C BA8200                 94                     MOV DX, PORTC  ;port C address to DX
002F EE                     95                     OUT DX, AL      ;ground all rows
                            96                     
                            97     
                            98     
                            99        
                           100     ;code
0030 9A0000----     E      101      call set_timer2
0035 FB                    102                     STI
                           103     
0036                       104     NEXT:
                           105            ; MOV AX,DS:DISPLAY_NUM
                           106             
                           107             ;INC DS:CUR_LED
0036 9A7D00----     R      108             CALL FAR PTR KEYBOARD
                           109             ;CALL FAR PTR DISPLAY_LED
003B EBF9                  110      JMP NEXT
                           111     
                           112     ; ^^^^^^^^^^^^^^^ End of User main routine ^^^^^^^^^^^^^^^^^^^^^^^^^
                           113     
                           114     
003D                       115     SERIAL_REC_ACTION       PROC    FAR
003D 51                    116                     PUSH    CX
003E 53                    117                     PUSH    BX
003F 1E                    118                     PUSH    DS
                           119     
0040 BB----         R      120                     MOV     BX,DATA_SEG             ;initialize data segment register
0043 8EDB                  121                     MOV     DS,BX
                           122     
0045 3C3C                  123                     CMP     AL,'<'
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    15:11:08  11/16/;2  PAGE    4


LOC  OBJ                  LINE     SOURCE

0047 750B                  124                     JNE     S_FAST
                           125     
0049 FE061700              126                     INC     DS:T_COUNT_SET
004D FE061700              127                     INC     DS:T_COUNT_SET
                           128     
0051 EB0D90                129                     JMP     S_NEXT0
0054                       130     S_FAST:
0054 3C3E                  131                     CMP     AL,'>'
0056 7521                  132                     JNE     S_RET
                           133     
0058 FE0E1700              134                     DEC     DS:T_COUNT_SET
005C FE0E1700              135                     DEC     DS:T_COUNT_SET
                           136     
0060                       137     S_NEXT0:
0060 B91600                138                     MOV     CX,22                   ;initialize counter for message
0063 BB0000                139                     MOV     BX,0
                           140     
0066 8A4718                141     S_NEXT1:        MOV     AL,DS:REC_MESS[BX]      ;print message
0069 9A0000----     E      142                     call    FAR ptr print_char
006E 43                    143                     INC     BX
006F E2F5                  144                     LOOP    S_NEXT1
                           145     
0071 A01700                146                     MOV     AL,DS:T_COUNT_SET       ;print current period of timer0
0074 9A0000----     E      147                     CALL    FAR PTR PRINT_2HEX
0079                       148     S_RET:
0079 1F                    149                     POP     DS
007A 5B                    150                     POP     BX
007B 59                    151                     POP     CX
007C CB                    152                     RET
                           153     SERIAL_REC_ACTION       ENDP
                           154     
007D                       155     KEYBOARD PROC FAR
                           156     
007D 52                    157                     PUSH    DX
007E 51                    158                     PUSH    CX
007F 53                    159                     PUSH    BX
0080 50                    160                     PUSH    AX
                           161                     
                           162     
0081                       163     INIT:           
                           164                     
                           165                     
0081 B17F                  166                     MOV CL, 07FH    ;STORES OUTPUT FOR ROW COUNTER;
                           167                     ;MOV AL,0FEH ; 1111 1110
0083 B500                  168                     MOV CH, 0H      ;set row counter
0085 882E5700              169                     MOV DS:KBD_ROW_COUNTER,CH
0089 880E5800              170                     MOV DS:KBD_OUTPUT, CL
                           171     
                           172                     
008D                       173     NEXT_ROW:
008D A05700                174                     MOV AL,DS:KBD_ROW_COUNTER
                           175             
0090 3C04                  176                     CMP AL,04
0092 7DED                  177                     JGE INIT
0094 8A0E5800              178                     MOV CL,DS:KBD_OUTPUT 
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    15:11:08  11/16/;2  PAGE    5


LOC  OBJ                  LINE     SOURCE

0098 D0C1                  179                     ROL CL, 01H       ;rotate AL to ground next row/ al HAS 8 BITS. so mu
                                   st JMP BACK TO WAIT
                           180     
                           181                     ;MOV CH, AL     ;save data byte to ground next row ;WAT?
009A 8AC1                  182                     MOV AL,CL
009C BA8200                183                     MOV DX, PORTC   ;port C address to DX; 
009F EE                    184                     OUT DX, AL      ;give positive logic to one of the rows
00A0 A25800                185                     MOV DS:KBD_OUTPUT, AL   
                           186             
00A3 BA8100                187                     MOV DX, PORTB   ;port B address to DX  
00A6 EC                    188                     IN  AL,DX       ;read input port for key closure
                           189                     
                           190                     
                           191                     ;mov al,101b; change later
00A7 2407                  192                     AND AL, 07H     ;Mask D4-D7
00A9 3C07                  193                     CMP AL,07H
00AB 745B                  194                     JE RETPOINT
                           195                     ;ERROR CHECK
00AD 3C06                  196                     CMP AL,0110B
00AF 740B                  197                     JE VALIDATED
00B1 3C05                  198                     CMP AL,0101B
00B3 7407                  199                     JE VALIDATED
00B5 3C03                  200                     CMP AL,011B
00B7 7403                  201                     JE VALIDATED
00B9 EB4D90                202                     JMP RETPOINT
                           203                     
00BC                       204     VALIDATED:              
00BC 9A1401----     R      205                     CALL FAR PTR KBD_PROCESS
                           206                     ;Bl CONTAINS iNDEX OF ARRAY WITH CURRENT KEY
                           207             ;; | SEEK==0 = ADD_TO_BUFFER
                           208             ;; | BUFFER[SEEK]== BL = ADD_TO_BUFFER
                           209             ;; | ELSE = (ADD_TO_BUFFER) & (SEEK 0) AKA RESET
                           210                     ;JMP NUMBERS
                           211     
00C1                       212     NUMBERS:
00C1 32FF                  213                     XOR BH, BH
00C3 8A472D                214                     MOV AL,DS:array[BX] ; Stores character in AL (?)
00C6 32E4                  215                     XOR AH,AH
                           216                     ;CALL   FAR PTR PRINT_CHAR
                           217                     
00C8 8A0E5600              218             MOV CL, DS:KBD_BUFFER_SEEK
00CC 80F900                219             CMP CL,0H
00CF 7412                  220             JZ ADD_TO_BUFFER
                           221                                     
00D1 32ED                  222                     XOR CH,CH
00D3 8BF1                  223             MOV SI, CX
00D5 8A0E4C00              224             MOV CL, KBD_BUFFER
                           225                     ;COMPARE WITH VALUE AT SEEK
00D9 3AC8                  226             CMP CL,AL
00DB 7406                  227                     JZ  ADD_TO_BUFFER
                           228                     
00DD 32C9                  229                     XOR CL,CL
00DF 880E5600              230                     MOV DS:KBD_BUFFER_SEEK, CL
                           231                                     
                           232     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    15:11:08  11/16/;2  PAGE    6


LOC  OBJ                  LINE     SOURCE

00E3                       233     ADD_TO_BUFFER:
                           234             ;;PUT AL INTO SI SO WE CAN PUT CURRENT CHAR IN THE BUFFER 
00E3 32ED                  235                     XOR CH,CH
00E5 8BF1                  236                     MOV SI,CX
00E7 88444C                237                     MOV DS:KBD_BUFFER[SI],AL
00EA FE065600              238                     INC DS:KBD_BUFFER_SEEK
                           239     
00EE B98813                240                     mov cx, 5000
00F1                       241     Debounce:
00F1 90                    242                     nop
00F2 E2FD                  243                     loop debounce
00F4                       244     CHECKER_SEEK:
00F4 8A0E5600              245                     MOV CL, DS:KBD_BUFFER_SEEK
00F8 80F908                246                     CMP CL,KBD_BUFFER_LEN
                           247                     ;ADD CL,48
                           248                     ;MOV AL,CL
                           249                     ;CALL FAR PTR PRINT_CHAR
                           250                     
00FB 750B                  251                     JNE RETPOINT
                           252                     ;RESET KBD_BUFFER_SEEK
                           253                     ;AL CONTAINS CHAR
00FD 9A0000----     E      254                     CALL    FAR PTR PRINT_CHAR
                           255             
0102 32C9                  256                     XOR CL,CL
                           257                     ;BUFFER_SEEK IS RESET
0104 880E5600              258                     MOV DS:KBD_BUFFER_SEEK, CL
0108                       259     RETPOINT:       
0108 FE065700              260             INC DS:KBD_ROW_COUNTER
                           261             
010C E97EFF                262             JMP NEXT_ROW
                           263                     
                           264             
010F 58                    265             POP AX
0110 5B                    266             POP BX
0111 59                    267             POP CX
0112 5A                    268             POP DX
0113 CB                    269             RET
                           270     KEYBOARD ENDP
                           271     
0114                       272     KBD_PROCESS             PROC    FAR
                           273                     ;0000 0101 => 1111 1010 => 0000 0010  => 0 , 1, 10   
0114 F6D0                  274                     NOT AL
0116 2407                  275                     AND AL, 07H; MASK OTHER BLOODY BITS OMGOMGOMG
0118 D0E8                  276                     SHR AL,01 ; DIVIDE AL BY 2. TO GET COL NUMBER
011A 8AD0                  277                     MOV DL,AL ; TEMP STORE AL IE PORTB INPUT AKA COL NUMBER
                           278                     
011C A05700                279                     mov Al,DS:KBD_ROW_COUNTER ; ROW COUNT MOVED TO AL
011F B603                  280                     MOV DH,03 ; TO MULTIPLY BY 3
                           281                     ;MULTIPLY THE FUCKER
0121 F6E6                  282                     MUL DH
                           283                     ; RESULT IN AX
                           284                     
                           285                     
                           286                     ; NUMBER  <= 9 
0123 02C2                  287                     ADD AL, DL ;ADD row*3 NO TO COL NUMBER
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    15:11:08  11/16/;2  PAGE    7


LOC  OBJ                  LINE     SOURCE

0125 8AD8                  288                     MOV BL,AL
0127 32FF                  289                     XOR BH,BH
                           290                     ;Bl CONTAINS iNDEX OF ARRAY WITH CURRENT KEY
                           291             ;; | SEEK==0 = ADD_TO_BUFFER
                           292             ;; | BUFFER[SEEK]== BL = ADD_TO_BUFFER
                           293             ;; | ELSE = (ADD_TO_BUFFER) & (SEEK 0) AKA RESET
                           294     
                           295             
0129 CB                    296     RET
                           297     KBD_PROCESS             ENDP
012A                       298     TIMER2_ACTION   PROC    FAR
012A 50                    299                     PUSH    AX
012B 1E                    300                     PUSH    DS
012C 53                    301                     PUSH    BX
012D 51                    302                     PUSH    CX
                           303     
                           304                     
                           305     ;CALL FAR PTR DISPLAY_BCD
                           306     ;CALL FAR PTR KEYBOARD  
012E 9A5401----     R      307     CALL FAR PTR DISPLAY_LED
0133 FE0E1600              308     DEC     DS:T_COUNT
0137 7516                  309                     JNZ     T_NEXT1
0139 A01700                310                     MOV     AL,DS:T_COUNT_SET
013C A21600                311                     MOV     DS:T_COUNT,AL
                           312     
013F B91400                313                     MOV     CX,20
0142 BB0000                314                     MOV     BX,0H
0145                       315     T_NEXT0:
0145 8A07                  316                     MOV     AL,DS:TIMER0_MESS[BX]
0147 43                    317                     INC     BX
0148 9A0000----     E      318                     CALL    FAR PTR PRINT_CHAR
014D E2F6                  319                     LOOP    T_NEXT0
                           320     ;       kanmy@comp.nus.edu.sg
014F                       321     T_NEXT1:
                           322     
                           323     
014F 59                    324                     POP     CX
0150 5B                    325                     POP     BX
0151 1F                    326                     POP     DS
0152 58                    327                     POP     AX
0153 CB                    328                     RET
                           329     TIMER2_ACTION   ENDP
                           330     
0154                       331     DISPLAY_LED     PROC    FAR
0154 50                    332             PUSH AX
0155 53                    333             PUSH BX
0156 51                    334             PUSH CX
0157 52                    335             PUSH DX
                           336             ; CONVERTS CUR_LED TO SIGNAL
0158 8A1E4900              337             MOV BL, DS:CUR_LED
015C B0FE                  338             MOV AL,0FEH
015E 8ACB                  339             MOV CL, BL
0160 D2C0                  340             ROL AL,CL
                           341             
0162 BA0001                342             MOV DX, LED_SELECT
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    15:11:08  11/16/;2  PAGE    8


LOC  OBJ                  LINE     SOURCE

0165 EE                    343             OUT DX, AL
                           344             
0166 32FF                  345             XOR BH,BH
0168 8A4743                346             MOV AL, DS:LED_BUFFER[BX]
016B BA8001                347             MOV DX, LED_OUTPUT
016E EE                    348             OUT DX,AL
                           349     
016F B99001                350             MOV CX, 400
0172                       351     SUSTAIN:        
                           352             
0172 90                    353             NOP
0173 E2FD                  354             LOOP SUSTAIN
                           355             
                           356     ; CLEAR THE FUCKER
0175 B000                  357             MOV AL, 0H
0177 BA8001                358             MOV DX, LED_OUTPUT
017A EE                    359             OUT DX, AL
                           360             
017B A04900                361             MOV AL, DS:CUR_LED
017E 3C05                  362             CMP AL, 5
0180 7D07                  363             JGE RESTORE
0182 FE064900              364             INC DS:CUR_LED
0186 EB0690                365             JMP EXIT
0189                       366     RESTORE:
0189 32C0                  367             XOR AL,AL
018B A24900                368             MOV DS:CUR_LED, AL
                           369             
018E                       370     EXIT:
018E 5A                    371             POP DX
018F 59                    372             POP CX
0190 5B                    373             POP BX
0191 58                    374             POP AX
0192 CB                    375             RET
                           376     
                           377     DISPLAY_LED ENDP
                           378     
0193                       379     CONVERT_TO_BCD  PROC    FAR
                           380     
                           381     
0193 53                    382             PUSH BX
0194 8AD8                  383             MOV BL,AL
0196 80FB0A                384             CMP BL,10
0199 7D03                  385             JGE GREATER_THAN_10
019B EB0390                386             JMP RETURN_BCD
                           387     ;; IF BL(AL) > = 10 WE ADD 6. AH -> 10H 
019E                       388     GREATER_THAN_10:
019E 0406                  389             ADD AL,06
                           390             
01A0                       391     RETURN_BCD:
                           392             
01A0 5B                    393             POP BX
01A1 CB                    394             RET
                           395     CONVERT_TO_BCD  ENDP
                           396     ;; 
                           397     ;EXPECTS A 4BIT BCD DIGIT IN AL. RETURNS THE 7SEG CODE IN AL FOR THAT DIGIT     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    15:11:08  11/16/;2  PAGE    9


LOC  OBJ                  LINE     SOURCE

01A2                       398     BCD_TO_7SEG     PROC    FAR
01A2 53                    399             PUSH BX
                           400     
                           401             ;; STORE AL TEMPORARILY IN BL
01A3 8AD8                  402             MOV BL,AL
                           403             
01A5 32FF                  404             XOR BH,BH
                           405             ;; GET THE BLTH INDEX OF THE BCD ARRAY IN DATA_SEG
01A7 8A4739                406             MOV AL,DS:BCD[BX]
01AA 5B                    407             POP BX
01AB CB                    408             RET
                           409     BCD_TO_7SEG     ENDP    
                           410     
                           411     
----                       412     CODE_SEG        ENDS
                           413     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
