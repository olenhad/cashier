kbd bug log
removed Sound callback -no result, less sensitive

increasing sensitivity

Works fine for 2nd kbd
works fine for 1st kbd

placing sound callback again
removed the sound_state_disable after one iter

kbd input completely fails

ADDED A RESTORE DS TO DATA_SEG IN THE END OF SOUND CALLBACK

no result

hypothesis: main loop never gets enough cycles to complete. keeps getting interrupted by sound

idea: put kbd in timer, similar implementation as led. larger counter.

problem: Make the kbd routine lighter, by iterating through ONE row in each call, instead of all

FOR BOTH KBD AND KBD, GOT RID OF THE LOOP. ONLY PROCESSES ONE ROW IN EACH CALL

disabled timer to check kbd alone

decreased sensitivity

initialized kbd_outputs properly

kbds working fine

renabled timer

kbd inputs read fine, at unpredictable timings

hacky idea: decrease debounce value in kbd

DECREASED KBD DEBOUNCE

cHANGED TIMER ROUTINE TO ACCOMODATE KBD
EXPECT: KBD INPUT, LED WORKING, SOUND PLAYING CONT


removed the debouncing in the two keyboard processes
added a print_char 

kbd is NOT being intercepted

testinng state_m

expect: barcode,, quantuty, price, sound


YAY

to do:

check the network only transmit when ready NOT

clear the leds after barcode and quantity DONE

clean first led bug DONE    

end of transaction state   done

generate bill       done


expect:
only SELECTED after q, else 'N'


net state restoration is buggy


display price led is cleared too fast

fails on 2nd interation

sound plays after quantity is confirmed in 2nd iter

Note: make leds different for ready and eot

make_packet doesn't update the packet with new data

discovered: barcode buffer not updated

new bug: writing ```ab does not get a response in 2nd iter












