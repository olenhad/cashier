8086/87/88/186 MACRO ASSEMBLER    MISC                                                     04:04:38  11/29/;2  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE MISC
OBJECT MODULE PLACED IN MISC.OBJ
ASSEMBLER INVOKED BY:  F:\ASM86.EXE MISC.ASM


LOC  OBJ                  LINE     SOURCE

                             1 +1  $mod186
                             2     NAME MISC
                             3     ; Interrupt and misc routines for uPD70208 microcomputer system
                             4     ;
                             5     ; Filename:     MISC.ASM
                             6     ;
                             7     ; Author:       Dr Tay Teng Tiow
                             8     ; Address:      Department of Electrical Engineering 
                             9     ;               National University of Singapore
                            10     ;               10, Kent Ridge Crescent
                            11     ;               Singapore 0511. 
                            12     ; Date:         3rd November 1991
                            13     ;
                            14     ; This file contains proprietory information and cannot be copied 
                            15     ; or distributed without prior permission from the author.
                            16     ;---------------------------------------------------------------------------
                            17     
                            18     public  print_char, print_2hex, iodefine, set_timer2
                            19     extrn   serial_rec_action:far, timer2_action:far
                            20     
----                        21     INT_VEC_SEG     SEGMENT         AT      0H
                            22     ; Define the interrupt vector locations
                            23     ; System reserved interrupts
0000                        24                     ORG     0000H
0000 ????????               25             DIV_ZERO        DD      ?       ;not defined yet
0004 ????????               26             SINGLE_STEP     DD      ?       ;not defined yet
0008 ????????               27             NMI_INPUT       DD      ?       ;start of downloaded program
000C ????????               28             BRK_3_VEC       DD      ?       ;not defined yet
0010 ????????               29             OVERFLOW        DD      ?       ;not defined yet
0014 ????????               30             ARRAY_BND       DD      ?       ;Array Bounds
0020                        31                     ORG     020H
0020 ????????               32             TIMER0_VEC      DD      ? ;route for timer 0
                            33     ; Interrupt control unit
0030                        34                     ORG     030H
0030 AE00----       R       35             INTP0           DD      SERIAL_INTR
0034 ????????               36             INTP1           DD      ?       ;external, not used yet  
0038 ????????               37             INTP2           DD      ?       ;external, not used yet
003C ????????               38             INTP3           DD      ?       ;external, not used yet
0040 ????????               39             NUMERICS        DD      ?       ;
0044 ????????               40             RSVED           DD      ?       ;system reserved 
0048 ????????               41             TIMER1_VEC      DD      ?       ;route for timer 1
004C 2901----       R       42             TIMER2_VEC      DD      TIMER2_INTR       ;Timer2 Route
                            43                ;Reserved from 050H to 080H     
0080                        44                    ORG     080H
                            45     ;Interrupt Vector addrerss from 080h (type 32) to 3fCH (type 255)
                            46     ;are avaiable for user software interrupt           
                            47     ; Software interrupts
0080 ????????               48             SOFT0           DD      ? ;TYPE 32
0084 ????????               49             SOFT1           DD      ? ;TYPE 33
0088 ????????               50             SOFT2           DD      ?
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     04:04:38  11/29/;2  PAGE    2


LOC  OBJ                  LINE     SOURCE

008C ????????               51             SOFT3           DD      ?
0090 ????????               52             SOFT4           DD      ?
0094 ????????               53             SOFT5           DD      ?
0098 ????????               54             SOFT6           DD      ?
009C ????????               55             SOFT7           DD      ?
----                        56     INT_VEC_SEG     ENDS
                            57     
                            58     
                            59     
----                        60     INT_RAM_AREA    SEGMENT
  0080                      61             QUEUE_LEN       EQU     128
                            62     
0000 (128                   63             QUEUE_TRANS     DB      QUEUE_LEN DUP(?)
     ??
     )
0080 0000                   64             QUEUE_HEAD      DW      0H
0082 0000                   65             QUEUE_TAIL      DW      0H
----                        66     INT_RAM_AREA    ENDS
                            67     
                            68     
                            69 +1  $include(80188.inc)
                      =1    70     ;IO Setup for 80C188XL 
                      =1    71     ;By Zhu Shunyu
                      =1    72     
  FFA0                =1    73              UMCR    EQU    0FFA0H ; Upper Memory Control Register
  FFA2                =1    74              LMCR    EQU    0FFA2H ; Lower Memory control Register         
  FFA4                =1    75              PCSBA   EQU    0FFA4H ; Peripheral Chip Select Base Address
  FFA8                =1    76              MPCS    EQU    0FFA8H ; MMCS and PCS Alter Control Register
                      =1    77     
                      =1    78     
                      =1    79     ; Initial 80C188XL UCS Pin
                      =1    80     ; |start address|block size| value for No waits, No Ready   
                      =1    81     ;   FE000H            8K                 3E04H
                      =1    82     ;   FC000H           16K                 3C04H
                      =1    83     ;   F8000H           32K                 3804H
                      =1    84      
                      =1    85              
                      =1    86     ; Initialize Upper Chip Select pin with 8K ROM 
                      =1    87     ;         MOV DX, UMCR
                      =1    88     ;         MOV AX, 03E04H
                      =1    89     ;         OUT DX, AX
                      =1    90     
                      =1    91     ; Initialize Lower Chip Select pin with 8k RAM
                      =1    92     ;         MOV DX, LMCR
                      =1    93     ;         MOV AX, 01C4H  ; Starting address 1FFFH, 8K, No waits, last shoud be 5H for
                                    1 waits      
                      =1    94     ;         OUT DX, AL
                      =1    95     ; Initialize MPCS to MAP peripheral to IO address
0000 BAA8FF           =1    96              MOV DX, MPCS
0003 B88300           =1    97              MOV AX, 0083H
0006 EE               =1    98              OUT DX, AL
                      =1    99     ; PCSBA initial, set the serial port start from 00H
0007 BAA4FF           =1   100              MOV DX, PCSBA
000A B80300           =1   101              MOV AX, 0003H ; Peripheral starting address 00H no READY, No Waits
000D EE               =1   102              OUT DX, AL
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     04:04:38  11/29/;2  PAGE    3


LOC  OBJ                  LINE     SOURCE

                      =1   103     
                      =1   104     ;Serial port definition and initialize 
  0000                =1   105              SRB     EQU       00H ; Serial Receiver Buffer Register (R)
  0000                =1   106              STB     EQU       00H ; Serial Transmitter Holding Register(W)  
  0001                =1   107              SIER    EQU       01H ; Serial Interrupte Enable Register (w)
  0002                =1   108              IIR     EQU       02H ; Interrupt Identification Register (R)
  0003                =1   109              SMD     EQU       03H ; Serial Line Control Register
  0005                =1   110              SST     EQU       05H ; Serial Line Status Register
  0000                =1   111              DLL     EQU       00H ; Divisor Latch Least Significant BYTE
  0001                =1   112              DLM     EQU       01H ; Divisor Latch most  Significant BYTE
                      =1   113     
                      =1   114     ;Definition of content of SST register
                      =1   115     ;|Not Use|TE|THRE|BI|FE|PE|OE|DR|
                      =1   116     ;TE Transmitter empty
                      =1   117     ;THRE Transmittor Holding Register Empty
                      =1   118     ;BI Breakr Interrupt
                      =1   119     ;FE Framing Error
                      =1   120     ;PE Parity Error
                      =1   121     ;OE Overrun Error 
                      =1   122     ;DR Data Ready
  0001                =1   123               REC_RDY    EQU   00000001B
  0020                =1   124               TRAN_RDY   EQU   00100000B
  000E                =1   125               ERR_DET    EQU   00001110B
  0010                =1   126               BREAK_DET  EQU   00010000B
                      =1   127     ; Serial Line Control Data
  0007                =1   128             SMD_DATA     EQU    00000111B
  0003                =1   129             S_INT_ENA    EQU    00000011B
  0000                =1   130             S_INT_DIS    EQU    00000000B
                      =1   131        
                      =1   132     ;1st bit set 1 to access the Divisor latch 
                      =1   133     ;2 stop bits, 8 data bits, no parity check
  0087                =1   134             SMD_DATA_DIV EQU    10000111B
                      =1   135     ; Set divisor value        
000E BA0300           =1   136             MOV DX, SMD
0011 B087             =1   137             MOV AL, SMD_DATA_DIV
0013 EE               =1   138             OUT DX, AL
0014 BA0000           =1   139             MOV DX, DLL
0017 B034             =1   140             MOV AL, 52
0019 EE               =1   141             OUT DX, AL
001A BA0100           =1   142             MOV DX, DLM
001D B000             =1   143             MOV AL, 0
001F EE               =1   144             OUT DX, AL
                      =1   145     ;SET SERIAL PORT WORKING MODE
0020 BA0300           =1   146              MOV DX, SMD
0023 B007             =1   147              MOV AL, SMD_DATA
0025 EE               =1   148              OUT DX, AL
                      =1   149     ;DISABLE SERIAL PORT INT
0026 BA0100           =1   150              MOV DX, SIER
0029 B000             =1   151              MOV AL, 0
002B EE               =1   152              OUT DX, AL
                      =1   153     
                      =1   154     
                      =1   155     
                      =1   156     ; Timer control Unit
                      =1   157       
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     04:04:38  11/29/;2  PAGE    4


LOC  OBJ                  LINE     SOURCE

  FF66                =1   158              T2_CON    EQU      0FF66H ; Timer 2 Control Register
  FF62                =1   159              T2_CA     EQU      0FF62H ; Timer 2 compare register
  FF60                =1   160              T2_CNT    EQU      0FF60H ;
                      =1   161     
  FF5E                =1   162              T1_CON    EQU      0FF5EH ;
  FF5C                =1   163              T1_CB     EQU      0FF5CH ;
  FF5A                =1   164              T1_CA     EQU      0FF5AH ;
  FF58                =1   165              T1_CNT    EQU      0FF58H
                      =1   166              
  FF56                =1   167              T0_CON    EQU      0FF56H ;
  FF54                =1   168              T0_CB     EQU      0FF54H ;
  FF52                =1   169              T0_CA     EQU      0FF52H ;
  FF50                =1   170              TO_CNT    EQU      0FF50H   
                      =1   171              
                      =1   172     ; Timer Control Data
                      =1   173     
                      =1   174     
                      =1   175     ;Interrupt Control Registers
                      =1   176           
                      =1   177     
  FF3E                =1   178             INT3_CTRL       EQU 0FF3EH ;Interrupt 3 Control Register
  FF3C                =1   179             INT2_CTRL       EQU 0FF3CH
  FF3A                =1   180             INT1_CTRL       EQU 0FF3AH
  FF38                =1   181             INT0_CTRL       EQU 0FF38H
  FF32                =1   182             TIMER_CTRL      EQU 0FF32H ;Timer Interrupt Control Register
  FF30                =1   183             ISR             EQU 0FF30H ; Interrupt Status Register
  FF22                =1   184             EOI             EQU 0FF22H ; END OF INTERRUPT REGISTER
                      =1   185             
  FF28                =1   186             IMKW            EQU 0FF28H ; Interrupt Mask 
  FF2A                =1   187             IPMK            EQU 0FF2Ah ; Interrupt Priority Mask 
                      =1   188     
                      =1   189     ;| - | - | - | - |MSK|PM2|PM1|PM0| For TCU INT
                      =1   190     
                      =1   191     ;| - |SFNM|CAS|LVL|MSK|PM2|PM1|PM0| For TCU INT0,1
                      =1   192     
                      =1   193     ;MSK 1-enable, 0-mask int 
                      =1   194     ;pm0-pm1 Priority
                      =1   195     
                      =1   196         
                           197     
                           198     
----                       199     MISC_ROUTINE    SEGMENT
                           200     ASSUME CS:MISC_ROUTINE
                           201     
                           202     ; ---This procdeure initialize the system I/O area and on-chip devices-----
0000                       203     IODEFINE        PROC    FAR
0000 50                    204                     PUSH    AX
0001 52                    205                     PUSH    DX
                           206     
                           207     ; Initialize SCU for operation
0002 B007                  208                     MOV     AL,SMD_DATA
0004 E603                  209                     OUT     SMD,AL
                           210     ; Enable serial interrupts
0006 B003                  211                     MOV     AL,S_INT_ENA
0008 E601                  212                     OUT     SIER,AL
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     04:04:38  11/29/;2  PAGE    5


LOC  OBJ                  LINE     SOURCE

                           213     ; =============== INITIALIZATION OF INTERRUPT CONTROL UNIT =============
                           214     ; Initialize ICU for operation
                           215                     
                           216     ; Mask all interrupts except SCU
                           217                     ;disable TX interrupt,ENABLE RX.
000A B001                  218                     MOV     AL,1
000C E601                  219                     OUT     SIER,AL
                           220     ; SCU use INT0, enable INT0             
000E BA38FF                221                     MOV     DX, INT0_CTRL
0011 33C0                  222                     XOR     AX,AX
0013 EE                    223                     OUT     DX,AL
                           224     ; Mask other Int
0014 FA                    225                     CLI
0015 BA28FF                226                     MOV     DX,IMKW
0018 B8EE00                227                     MOV     AX,0EEH
001B EE                    228                     OUT     DX,AL   
001C 5A                    229                     POP     DX
001D 58                    230                     POP     AX
001E CB                    231                     RET
                           232     IODEFINE        ENDP
                           233     
                           234     
                           235     
                           236     
                           237     
                           238     ; ----------------Start of procedure PRINT_2HEX ------------------------
001F                       239     PRINT_2HEX      PROC    FAR
  0000                     240             QUE_BASE        EQU     OFFSET QUEUE_TRANS
                           241     ; The byte to be printed as 2 HEX number is put into AL.
                           242     ; This procedure is then called.
001F 9A6800----     R      243                     CALL    FAR PTR CHAR2HEX
                           244     ; Result is return in AX
0024 50                    245                     PUSH    AX
0025 8AC4                  246                     MOV     AL,AH
0027 9A3300----     R      247                     CALL    FAR PTR PRINT_CHAR
002C 58                    248                     POP     AX
002D 9A3300----     R      249                     CALL    FAR PTR PRINT_CHAR
0032 CB                    250                     RET
                           251     PRINT_2HEX      ENDP
                           252     
                           253     
                           254     
                           255     
                           256     ; ---------------- Start of procedure PRINT_CHAR ------------------------
0033                       257     PRINT_CHAR      PROC    FAR
                           258     ; This procedure is called to put a character into queue for transmission
                           259     ; through the serial port. 
                           260     ; The data to be transmitted is put in AL before the procedure is called.
                           261     ; Data is put at the tail. Queue_tail is then inc to point to next loc.
                           262     ; Data is taken from the head. Queue_head is then inc to point to next data.
                           263             
0033 53                    264                     PUSH    BX                      ;Save BX        
0034 06                    265                     PUSH    ES
                           266     
0035 50                    267                     PUSH    AX
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     04:04:38  11/29/;2  PAGE    6


LOC  OBJ                  LINE     SOURCE

                           268     
0036 BB----         R      269                     MOV     BX,SEG QUEUE_TAIL       ;Init segment register.
0039 8EC3                  270                     MOV     ES,BX                   ;ES now contains seg of INT_RAM_AREA
                           271     
003B E401                  272                     IN      AL,SIER                 ;disable TX interrupt.
003D 24FD                  273                     AND     AL,11111101B
003F E601                  274                     OUT     SIER,AL
                           275     
0041 58                    276                     POP     AX
0042 268B1E8200            277                     MOV     BX,ES:QUEUE_TAIL                
0047 268807                278                     MOV     ES:QUE_BASE[BX],AL      ;Put data to queue_tail.
004A 26FF068200            279                     INC     ES:QUEUE_TAIL           ;Increment queue_tail
004F 26813E82008000        280                     CMP     ES:QUEUE_TAIL,QUEUE_LEN ;and wrap around
0056 7C07                  281                     JL      L_PRINT1                ;to zero if needed.
0058 26C70682000000        282                     MOV     ES:QUEUE_TAIL,0
005F                       283     L_PRINT1:       
005F E401                  284                     IN      AL,SIER                 ;enable TX interrupt
0061 0C02                  285                     OR      AL,00000010B
0063 E601                  286                     OUT     SIER,AL
                           287     
0065 07                    288                     POP     ES
0066 5B                    289                     POP     BX
0067 CB                    290                     RET
                           291     PRINT_CHAR      ENDP
                           292     
                           293     
                           294     
                           295     
                           296     ;------------------Start of Procedure CHAR2HEX ----------------------------
0068                       297     CHAR2HEX        PROC    FAR
                           298     ; Char to be converted to HEX is put in AL before calling this procedure.
                           299     ; HEX version is return in AX.
0068 8AE0                  300                     MOV     AH,AL
006A 240F                  301                     AND     AL,00001111B
006C 3C09                  302                     CMP     AL,9
006E 7F05                  303                     JG      GT9_1
0070 0C30                  304                     OR      AL,00110000B
0072 EB0590                305                     JMP     DIGIT2
0075 2C09                  306     GT9_1:          SUB     AL,9
0077 0C40                  307                     OR      AL,01000000B
0079                       308     DIGIT2:
0079 C0EC04                309                     SHR     AH,4
007C 80FC09                310                     CMP     AH,9
007F 7F06                  311                     JG      GT9_2
0081 80CC30                312                     OR      AH,00110000B
0084 EB0790                313                     JMP     DONE
0087 80EC09                314     GT9_2:          SUB     AH,9
008A 80CC40                315                     OR      AH,01000000B
008D                       316     DONE:
008D CB                    317                     RET
                           318     CHAR2HEX        ENDP
                           319     
008E                       320     Set_timer2      proc Far
008E 50                    321             push ax
008F 52                    322             push dx
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     04:04:38  11/29/;2  PAGE    7


LOC  OBJ                  LINE     SOURCE

                           323             ;Initialize Timer2      
0090 B80000                324             mov ax, 0;
0093 BA60FF                325             mov dx, T2_CNT;
0096 EE                    326             OUT DX, AL
                           327     
0097 B87017                328             MOV AX, 6000;
009A BA62FF                329             MOV DX, T2_CA;
009D EE                    330             OUT DX, AL
                           331     
009E B801E0                332             MOV AX,0E001H
00A1 BA66FF                333             MOV DX, T2_CON
00A4 EE                    334             OUT DX, AL
                           335     
00A5 BA32FF                336             MOV DX, TIMER_CTRL
00A8 B001                  337             MOV AL, 01H
00AA EE                    338             OUT DX, AL
00AB 5A                    339             pop dx
00AC 58                    340             pop ax
                           341     
00AD CB                    342     ret
                           343     Set_timer2 endp
                           344     ; ************************************************************************
                           345     ;                       INTERRUPT ROUTINES                               *
                           346     ; ************************************************************************
                           347     
                           348     ; **************** Start of SERIAL_INTR service routine ******************
                           349     
                           350     ;*****************CAUTION*****************
                           351     ;At the end of interrutp routines, you must write EOI (end of Int) +
                           352     ;with the INT type (INT0-type 12) (timer-type 8)                   +    
                           353     ;comment added by Zhu Shunyu    March,2000                         +            
                                              
                           354     ;Interrupt Routines Modified accordly to fit 80C188XL
                           355     ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
00AE                       356     SERIAL_INTR:
00AE 50                    357                     PUSH    AX                      ;save registers
00AF 53                    358                     PUSH    BX
00B0 52                    359                     PUSH    DX
                           360     
                           361            
                           362     
                           363                                    
00B1 E402                  364                     IN      AL,IIR                  ;read in serial INT ID
00B3 2407                  365                     AND     AL,00000111B
00B5 3C04                  366                     CMP     AL,00000100B            ;check if rx interrupt
00B7 740F                  367                     JE      RECEIVE_INTR
                           368     
00B9 3C02                  369                     CMP     AL,00000010B            ;check if tx interrupt
00BB 741D                  370                     JE      TRANSMIT_INTR
                           371     
                           372                     
                           373     ;RESET_INT_CTL
00BD BA22FF                374                     MOV DX, EOI
00C0 B80C00                375                     MOV AX, 12
00C3 EE                    376                     OUT DX, AL
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     04:04:38  11/29/;2  PAGE    8


LOC  OBJ                  LINE     SOURCE

                           377     
00C4 5A                    378                     POP     DX
00C5 5B                    379                     POP     BX                      ;false serial interrupt
00C6 58                    380                     POP     AX
00C7 CF                    381                     IRET                            ;return
                           382     
00C8                       383     RECEIVE_INTR:   
                           384                   
00C8 E400                  385                     IN      AL,SRB                  
                           386     ; Information received will be used by user routine
                           387     ; Action to be taken will be contained in SERIAL_REC_ACTION
00CA 9A0000----     E      388                     CALL    FAR PTR SERIAL_REC_ACTION
                           389                     
00CF BA22FF                390                     MOV DX, EOI
00D2 B80C00                391                     MOV AX, 12
00D5 EE                    392                     OUT DX, AL
00D6 5A                    393                     POP     DX
00D7 5B                    394                     POP     BX                      ;false serial interrupt
00D8 58                    395                     POP     AX
00D9 CF                    396                     IRET
                           397     
00DA                       398     TRANSMIT_INTR:
                           399                    
00DA 06                    400                     PUSH    ES                      ;save ES
00DB BB----         R      401                     MOV     BX,SEG QUEUE_TAIL       ;set ES to SERIAL_Q_SEG
00DE 8EC3                  402                     MOV     ES,BX
00E0 268B1E8200            403                     MOV     BX,ES:QUEUE_TAIL
00E5 263B1E8000            404                     CMP     BX,ES:QUEUE_HEAD        ;more data to be transmitted?
00EA 742B                  405                     JE      L_TX2
00EC 268B1E8000            406                     MOV     BX,ES:QUEUE_HEAD        ;get data from queue
00F1 268A07                407                     MOV     AL,ES:QUE_BASE[BX]
00F4 E600                  408                     OUT     STB,AL                  ;tx data
00F6 26FF068000            409                     INC     ES:QUEUE_HEAD           ;point to next data
00FB 26813E80008000        410                     CMP     ES:QUEUE_HEAD,QUEUE_LEN ;wrap around if necessary
0102 7C07                  411                     JL      L_TX1
0104 26C70680000000        412                     MOV     ES:QUEUE_HEAD,0
010B                       413     L_TX1:          
010B 268B1E8200            414                     MOV     BX,ES:QUEUE_TAIL
0110 263B1E8000            415                     CMP     BX,ES:QUEUE_HEAD        ;more data to be transmitted?
0115 7506                  416                     JNE     L_TX3
0117                       417     L_TX2:
0117 E401                  418                     IN      AL,SIER                 ;no more, disable TX interrupt.
0119 24FD                  419                     AND     AL,11111101B
011B E601                  420                     OUT     SIER,AL
011D                       421     L_TX3:
                           422                     
                           423     ;RESET_INT_CTL
011D BA22FF                424                     MOV DX, EOI
0120 B80C00                425                     MOV AX, 12
0123 EE                    426                     OUT DX, AL
0124 07                    427                     POP     ES                      ;restore original ES(transmit)
                           428                     
0125 5A                    429                     POP     DX 
0126 5B                    430                     POP     BX                      ;return serial interrupt
0127 58                    431                     POP     AX
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     04:04:38  11/29/;2  PAGE    9


LOC  OBJ                  LINE     SOURCE

0128 CF                    432                     IRET
                           433     ; **************** End of SERIAL_INTR service routine ************************
                           434     
                           435     
                           436     
                           437     ; **************** Start of TIMER0_INTR service routine ******************
0129                       438     TIMER2_INTR:
0129 50                    439                     PUSH    AX
012A 52                    440                     PUSH DX
                           441     ; Action to be taken on timer0 interrupt to be written by user
012B 9A0000----     E      442                     CALL    FAR PTR TIMER2_ACTION
                           443                   
                           444                                     ;return interrupt
                           445                     ;RESET_INT_CTL
0130 BA22FF                446                     MOV DX, EOI
0133 B80800                447                     MOV AX, 8
0136 EE                    448                     OUT DX, AL
0137 5A                    449                     POP DX
0138 58                    450                     POP AX
0139 CF                    451                     IRET
                           452     ; **************** End of TIMER2_INTR service routine ************************
                           453     
----                       454     MISC_ROUTINE    ENDS
                           455     
                           456     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
