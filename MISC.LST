8086/87/88/186 MACRO ASSEMBLER    MISC                                                     02:26:25  12/01/;2  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE MISC
OBJECT MODULE PLACED IN MISC.OBJ
ASSEMBLER INVOKED BY:  G:\ASM86.EXE MISC.ASM


LOC  OBJ                  LINE     SOURCE

                             1 +1  $mod186
                             2     NAME MISC
                             3     ; YO
                             4     ;---------------------------------------------------------------------------
                             5     
                             6     public  print_char, print_2hex, iodefine, set_timer2
                             7     extrn   serial_rec_action:far, timer2_action:far
                             8     
----                         9     INT_VEC_SEG     SEGMENT         AT      0H
                            10     ; Define the interrupt vector locations
                            11     ; System reserved interrupts
0000                        12                     ORG     0000H
0000 ????????               13             DIV_ZERO        DD      ?       ;not defined yet
0004 ????????               14             SINGLE_STEP     DD      ?       ;not defined yet
0008 ????????               15             NMI_INPUT       DD      ?       ;start of downloaded program
000C ????????               16             BRK_3_VEC       DD      ?       ;not defined yet
0010 ????????               17             OVERFLOW        DD      ?       ;not defined yet
0014 ????????               18             ARRAY_BND       DD      ?       ;Array Bounds
0020                        19                     ORG     020H
0020 ????????               20             TIMER0_VEC      DD      ? ;route for timer 0
                            21     ; Interrupt control unit
0030                        22                     ORG     030H
0030 AE00----       R       23             INTP0           DD      SERIAL_INTR
0034 ????????               24             INTP1           DD      ?       ;external, not used yet  
0038 ????????               25             INTP2           DD      ?       ;external, not used yet
003C ????????               26             INTP3           DD      ?       ;external, not used yet
0040 ????????               27             NUMERICS        DD      ?       ;
0044 ????????               28             RSVED           DD      ?       ;system reserved 
0048 ????????               29             TIMER1_VEC      DD      ?       ;route for timer 1
004C 2901----       R       30             TIMER2_VEC      DD      TIMER2_INTR       ;Timer2 Route
                            31                ;Reserved from 050H to 080H     
0080                        32                    ORG     080H
                            33     ;Interrupt Vector addrerss from 080h (type 32) to 3fCH (type 255)
                            34     ;are avaiable for user software interrupt           
                            35     ; Software interrupts
0080 ????????               36             SOFT0           DD      ? ;TYPE 32
0084 ????????               37             SOFT1           DD      ? ;TYPE 33
0088 ????????               38             SOFT2           DD      ?
008C ????????               39             SOFT3           DD      ?
0090 ????????               40             SOFT4           DD      ?
0094 ????????               41             SOFT5           DD      ?
0098 ????????               42             SOFT6           DD      ?
009C ????????               43             SOFT7           DD      ?
----                        44     INT_VEC_SEG     ENDS
                            45     
                            46     
                            47     
----                        48     INT_RAM_AREA    SEGMENT
  0080                      49             QUEUE_LEN       EQU     128
                            50     
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     02:26:25  12/01/;2  PAGE    2


LOC  OBJ                  LINE     SOURCE

0000 (128                   51             QUEUE_TRANS     DB      QUEUE_LEN DUP(?)
     ??
     )
0080 0000                   52             QUEUE_HEAD      DW      0H
0082 0000                   53             QUEUE_TAIL      DW      0H
----                        54     INT_RAM_AREA    ENDS
                            55     
                            56     
                            57 +1  $include(80188.inc)
                      =1    58     ;IO Setup for 80C188XL 
                      =1    59     ;By Zhu Shunyu
                      =1    60     
  FFA0                =1    61              UMCR    EQU    0FFA0H ; Upper Memory Control Register
  FFA2                =1    62              LMCR    EQU    0FFA2H ; Lower Memory control Register         
  FFA4                =1    63              PCSBA   EQU    0FFA4H ; Peripheral Chip Select Base Address
  FFA8                =1    64              MPCS    EQU    0FFA8H ; MMCS and PCS Alter Control Register
                      =1    65     
                      =1    66     
                      =1    67     ; Initial 80C188XL UCS Pin
                      =1    68     ; |start address|block size| value for No waits, No Ready   
                      =1    69     ;   FE000H            8K                 3E04H
                      =1    70     ;   FC000H           16K                 3C04H
                      =1    71     ;   F8000H           32K                 3804H
                      =1    72      
                      =1    73              
                      =1    74     ; Initialize Upper Chip Select pin with 8K ROM 
                      =1    75     ;         MOV DX, UMCR
                      =1    76     ;         MOV AX, 03E04H
                      =1    77     ;         OUT DX, AX
                      =1    78     
                      =1    79     ; Initialize Lower Chip Select pin with 8k RAM
                      =1    80     ;         MOV DX, LMCR
                      =1    81     ;         MOV AX, 01C4H  ; Starting address 1FFFH, 8K, No waits, last shoud be 5H for
                                    1 waits      
                      =1    82     ;         OUT DX, AL
                      =1    83     ; Initialize MPCS to MAP peripheral to IO address
0000 BAA8FF           =1    84              MOV DX, MPCS
0003 B88300           =1    85              MOV AX, 0083H
0006 EE               =1    86              OUT DX, AL
                      =1    87     ; PCSBA initial, set the serial port start from 00H
0007 BAA4FF           =1    88              MOV DX, PCSBA
000A B80300           =1    89              MOV AX, 0003H ; Peripheral starting address 00H no READY, No Waits
000D EE               =1    90              OUT DX, AL
                      =1    91     
                      =1    92     ;Serial port definition and initialize 
  0000                =1    93              SRB     EQU       00H ; Serial Receiver Buffer Register (R)
  0000                =1    94              STB     EQU       00H ; Serial Transmitter Holding Register(W)  
  0001                =1    95              SIER    EQU       01H ; Serial Interrupte Enable Register (w)
  0002                =1    96              IIR     EQU       02H ; Interrupt Identification Register (R)
  0003                =1    97              SMD     EQU       03H ; Serial Line Control Register
  0005                =1    98              SST     EQU       05H ; Serial Line Status Register
  0000                =1    99              DLL     EQU       00H ; Divisor Latch Least Significant BYTE
  0001                =1   100              DLM     EQU       01H ; Divisor Latch most  Significant BYTE
                      =1   101     
                      =1   102     ;Definition of content of SST register
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     02:26:25  12/01/;2  PAGE    3


LOC  OBJ                  LINE     SOURCE

                      =1   103     ;|Not Use|TE|THRE|BI|FE|PE|OE|DR|
                      =1   104     ;TE Transmitter empty
                      =1   105     ;THRE Transmittor Holding Register Empty
                      =1   106     ;BI Breakr Interrupt
                      =1   107     ;FE Framing Error
                      =1   108     ;PE Parity Error
                      =1   109     ;OE Overrun Error 
                      =1   110     ;DR Data Ready
  0001                =1   111               REC_RDY    EQU   00000001B
  0020                =1   112               TRAN_RDY   EQU   00100000B
  000E                =1   113               ERR_DET    EQU   00001110B
  0010                =1   114               BREAK_DET  EQU   00010000B
                      =1   115     ; Serial Line Control Data
  0007                =1   116             SMD_DATA     EQU    00000111B
  0003                =1   117             S_INT_ENA    EQU    00000011B
  0000                =1   118             S_INT_DIS    EQU    00000000B
                      =1   119        
                      =1   120     ;1st bit set 1 to access the Divisor latch 
                      =1   121     ;2 stop bits, 8 data bits, no parity check
  0087                =1   122             SMD_DATA_DIV EQU    10000111B
                      =1   123     ; Set divisor value        
000E BA0300           =1   124             MOV DX, SMD
0011 B087             =1   125             MOV AL, SMD_DATA_DIV
0013 EE               =1   126             OUT DX, AL
0014 BA0000           =1   127             MOV DX, DLL
0017 B034             =1   128             MOV AL, 52
0019 EE               =1   129             OUT DX, AL
001A BA0100           =1   130             MOV DX, DLM
001D B000             =1   131             MOV AL, 0
001F EE               =1   132             OUT DX, AL
                      =1   133     ;SET SERIAL PORT WORKING MODE
0020 BA0300           =1   134              MOV DX, SMD
0023 B007             =1   135              MOV AL, SMD_DATA
0025 EE               =1   136              OUT DX, AL
                      =1   137     ;DISABLE SERIAL PORT INT
0026 BA0100           =1   138              MOV DX, SIER
0029 B000             =1   139              MOV AL, 0
002B EE               =1   140              OUT DX, AL
                      =1   141     
                      =1   142     
                      =1   143     
                      =1   144     ; Timer control Unit
                      =1   145       
  FF66                =1   146              T2_CON    EQU      0FF66H ; Timer 2 Control Register
  FF62                =1   147              T2_CA     EQU      0FF62H ; Timer 2 compare register
  FF60                =1   148              T2_CNT    EQU      0FF60H ;
                      =1   149     
  FF5E                =1   150              T1_CON    EQU      0FF5EH ;
  FF5C                =1   151              T1_CB     EQU      0FF5CH ;
  FF5A                =1   152              T1_CA     EQU      0FF5AH ;
  FF58                =1   153              T1_CNT    EQU      0FF58H
                      =1   154              
  FF56                =1   155              T0_CON    EQU      0FF56H ;
  FF54                =1   156              T0_CB     EQU      0FF54H ;
  FF52                =1   157              T0_CA     EQU      0FF52H ;
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     02:26:25  12/01/;2  PAGE    4


LOC  OBJ                  LINE     SOURCE

  FF50                =1   158              TO_CNT    EQU      0FF50H   
                      =1   159              
                      =1   160     ; Timer Control Data
                      =1   161     
                      =1   162     
                      =1   163     ;Interrupt Control Registers
                      =1   164           
                      =1   165     
  FF3E                =1   166             INT3_CTRL       EQU 0FF3EH ;Interrupt 3 Control Register
  FF3C                =1   167             INT2_CTRL       EQU 0FF3CH
  FF3A                =1   168             INT1_CTRL       EQU 0FF3AH
  FF38                =1   169             INT0_CTRL       EQU 0FF38H
  FF32                =1   170             TIMER_CTRL      EQU 0FF32H ;Timer Interrupt Control Register
  FF30                =1   171             ISR             EQU 0FF30H ; Interrupt Status Register
  FF22                =1   172             EOI             EQU 0FF22H ; END OF INTERRUPT REGISTER
                      =1   173             
  FF28                =1   174             IMKW            EQU 0FF28H ; Interrupt Mask 
  FF2A                =1   175             IPMK            EQU 0FF2Ah ; Interrupt Priority Mask 
                      =1   176     
                      =1   177     ;| - | - | - | - |MSK|PM2|PM1|PM0| For TCU INT
                      =1   178     
                      =1   179     ;| - |SFNM|CAS|LVL|MSK|PM2|PM1|PM0| For TCU INT0,1
                      =1   180     
                      =1   181     ;MSK 1-enable, 0-mask int 
                      =1   182     ;pm0-pm1 Priority
                      =1   183     
                      =1   184         
                           185     
                           186     
----                       187     MISC_ROUTINE    SEGMENT
                           188     ASSUME CS:MISC_ROUTINE
                           189     
                           190     ; ---This procdeure initialize the system I/O area and on-chip devices-----
0000                       191     IODEFINE        PROC    FAR
0000 50                    192                     PUSH    AX
0001 52                    193                     PUSH    DX
                           194     
                           195     ; Initialize SCU for operation
0002 B007                  196                     MOV     AL,SMD_DATA
0004 E603                  197                     OUT     SMD,AL
                           198     ; Enable serial interrupts
0006 B003                  199                     MOV     AL,S_INT_ENA
0008 E601                  200                     OUT     SIER,AL
                           201     ; =============== INITIALIZATION OF INTERRUPT CONTROL UNIT =============
                           202     ; Initialize ICU for operation
                           203                     
                           204     ; Mask all interrupts except SCU
                           205                     ;disable TX interrupt,ENABLE RX.
000A B001                  206                     MOV     AL,1
000C E601                  207                     OUT     SIER,AL
                           208     ; SCU use INT0, enable INT0             
000E BA38FF                209                     MOV     DX, INT0_CTRL
0011 33C0                  210                     XOR     AX,AX
0013 EE                    211                     OUT     DX,AL
                           212     ; Mask other Int
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     02:26:25  12/01/;2  PAGE    5


LOC  OBJ                  LINE     SOURCE

0014 FA                    213                     CLI
0015 BA28FF                214                     MOV     DX,IMKW
0018 B8EE00                215                     MOV     AX,0EEH
001B EE                    216                     OUT     DX,AL   
001C 5A                    217                     POP     DX
001D 58                    218                     POP     AX
001E CB                    219                     RET
                           220     IODEFINE        ENDP
                           221     
                           222     
                           223     
                           224     
                           225     
                           226     ; ----------------Start of procedure PRINT_2HEX ------------------------
001F                       227     PRINT_2HEX      PROC    FAR
  0000                     228             QUE_BASE        EQU     OFFSET QUEUE_TRANS
                           229     ; The byte to be printed as 2 HEX number is put into AL.
                           230     ; This procedure is then called.
001F 9A6800----     R      231                     CALL    FAR PTR CHAR2HEX
                           232     ; Result is return in AX
0024 50                    233                     PUSH    AX
0025 8AC4                  234                     MOV     AL,AH
0027 9A3300----     R      235                     CALL    FAR PTR PRINT_CHAR
002C 58                    236                     POP     AX
002D 9A3300----     R      237                     CALL    FAR PTR PRINT_CHAR
0032 CB                    238                     RET
                           239     PRINT_2HEX      ENDP
                           240     
                           241     
                           242     
                           243     
                           244     ; ---------------- Start of procedure PRINT_CHAR ------------------------
0033                       245     PRINT_CHAR      PROC    FAR
                           246     ; This procedure is called to put a character into queue for transmission
                           247     ; through the serial port. 
                           248     ; The data to be transmitted is put in AL before the procedure is called.
                           249     ; Data is put at the tail. Queue_tail is then inc to point to next loc.
                           250     ; Data is taken from the head. Queue_head is then inc to point to next data.
                           251             
0033 53                    252                     PUSH    BX                      ;Save BX        
0034 06                    253                     PUSH    ES
                           254     
0035 50                    255                     PUSH    AX
                           256     
0036 BB----         R      257                     MOV     BX,SEG QUEUE_TAIL       ;Init segment register.
0039 8EC3                  258                     MOV     ES,BX                   ;ES now contains seg of INT_RAM_AREA
                           259     
003B E401                  260                     IN      AL,SIER                 ;disable TX interrupt.
003D 24FD                  261                     AND     AL,11111101B
003F E601                  262                     OUT     SIER,AL
                           263     
0041 58                    264                     POP     AX
0042 268B1E8200            265                     MOV     BX,ES:QUEUE_TAIL                
0047 268807                266                     MOV     ES:QUE_BASE[BX],AL      ;Put data to queue_tail.
004A 26FF068200            267                     INC     ES:QUEUE_TAIL           ;Increment queue_tail
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     02:26:25  12/01/;2  PAGE    6


LOC  OBJ                  LINE     SOURCE

004F 26813E82008000        268                     CMP     ES:QUEUE_TAIL,QUEUE_LEN ;and wrap around
0056 7C07                  269                     JL      L_PRINT1                ;to zero if needed.
0058 26C70682000000        270                     MOV     ES:QUEUE_TAIL,0
005F                       271     L_PRINT1:       
005F E401                  272                     IN      AL,SIER                 ;enable TX interrupt
0061 0C02                  273                     OR      AL,00000010B
0063 E601                  274                     OUT     SIER,AL
                           275     
0065 07                    276                     POP     ES
0066 5B                    277                     POP     BX
0067 CB                    278                     RET
                           279     PRINT_CHAR      ENDP
                           280     
                           281     
                           282     
                           283     
                           284     ;------------------Start of Procedure CHAR2HEX ----------------------------
0068                       285     CHAR2HEX        PROC    FAR
                           286     ; Char to be converted to HEX is put in AL before calling this procedure.
                           287     ; HEX version is return in AX.
0068 8AE0                  288                     MOV     AH,AL
006A 240F                  289                     AND     AL,00001111B
006C 3C09                  290                     CMP     AL,9
006E 7F05                  291                     JG      GT9_1
0070 0C30                  292                     OR      AL,00110000B
0072 EB0590                293                     JMP     DIGIT2
0075 2C09                  294     GT9_1:          SUB     AL,9
0077 0C40                  295                     OR      AL,01000000B
0079                       296     DIGIT2:
0079 C0EC04                297                     SHR     AH,4
007C 80FC09                298                     CMP     AH,9
007F 7F06                  299                     JG      GT9_2
0081 80CC30                300                     OR      AH,00110000B
0084 EB0790                301                     JMP     DONE
0087 80EC09                302     GT9_2:          SUB     AH,9
008A 80CC40                303                     OR      AH,01000000B
008D                       304     DONE:
008D CB                    305                     RET
                           306     CHAR2HEX        ENDP
                           307     
008E                       308     Set_timer2      proc Far
008E 50                    309             push ax
008F 52                    310             push dx
                           311             ;Initialize Timer2      
0090 B80000                312             mov ax, 0;
0093 BA60FF                313             mov dx, T2_CNT;
0096 EE                    314             OUT DX, AL
                           315     
                           316     ;       MOV AX, 6000;
0097 B8FA00                317             MOV AX, 250
009A BA62FF                318             MOV DX, T2_CA;
009D EE                    319             OUT DX, AL
                           320     
009E B801E0                321             MOV AX,0E001H
00A1 BA66FF                322             MOV DX, T2_CON
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     02:26:25  12/01/;2  PAGE    7


LOC  OBJ                  LINE     SOURCE

00A4 EE                    323             OUT DX, AL
                           324     
00A5 BA32FF                325             MOV DX, TIMER_CTRL
00A8 B001                  326             MOV AL, 01H
00AA EE                    327             OUT DX, AL
00AB 5A                    328             pop dx
00AC 58                    329             pop ax
                           330     
00AD CB                    331     ret
                           332     Set_timer2 endp
                           333     ; ************************************************************************
                           334     ;                       INTERRUPT ROUTINES                               *
                           335     ; ************************************************************************
                           336     
                           337     ; **************** Start of SERIAL_INTR service routine ******************
                           338     
                           339     ;*****************CAUTION*****************
                           340     ;At the end of interrutp routines, you must write EOI (end of Int) +
                           341     ;with the INT type (INT0-type 12) (timer-type 8)                   +    
                           342     ;comment added by Zhu Shunyu    March,2000                         +            
                                              
                           343     ;Interrupt Routines Modified accordly to fit 80C188XL
                           344     ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
00AE                       345     SERIAL_INTR:
00AE 50                    346                     PUSH    AX                      ;save registers
00AF 53                    347                     PUSH    BX
00B0 52                    348                     PUSH    DX
                           349     
                           350            
                           351     
                           352                                    
00B1 E402                  353                     IN      AL,IIR                  ;read in serial INT ID
00B3 2407                  354                     AND     AL,00000111B
00B5 3C04                  355                     CMP     AL,00000100B            ;check if rx interrupt
00B7 740F                  356                     JE      RECEIVE_INTR
                           357     
00B9 3C02                  358                     CMP     AL,00000010B            ;check if tx interrupt
00BB 741D                  359                     JE      TRANSMIT_INTR
                           360     
                           361                     
                           362     ;RESET_INT_CTL
00BD BA22FF                363                     MOV DX, EOI
00C0 B80C00                364                     MOV AX, 12
00C3 EE                    365                     OUT DX, AL
                           366     
00C4 5A                    367                     POP     DX
00C5 5B                    368                     POP     BX                      ;false serial interrupt
00C6 58                    369                     POP     AX
00C7 CF                    370                     IRET                            ;return
                           371     
00C8                       372     RECEIVE_INTR:   
                           373                   
00C8 E400                  374                     IN      AL,SRB                  
                           375     ; Information received will be used by user routine
                           376     ; Action to be taken will be contained in SERIAL_REC_ACTION
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     02:26:25  12/01/;2  PAGE    8


LOC  OBJ                  LINE     SOURCE

00CA 9A0000----     E      377                     CALL    FAR PTR SERIAL_REC_ACTION
                           378                     
00CF BA22FF                379                     MOV DX, EOI
00D2 B80C00                380                     MOV AX, 12
00D5 EE                    381                     OUT DX, AL
00D6 5A                    382                     POP     DX
00D7 5B                    383                     POP     BX                      ;false serial interrupt
00D8 58                    384                     POP     AX
00D9 CF                    385                     IRET
                           386     
00DA                       387     TRANSMIT_INTR:
                           388                    
00DA 06                    389                     PUSH    ES                      ;save ES
00DB BB----         R      390                     MOV     BX,SEG QUEUE_TAIL       ;set ES to SERIAL_Q_SEG
00DE 8EC3                  391                     MOV     ES,BX
00E0 268B1E8200            392                     MOV     BX,ES:QUEUE_TAIL
00E5 263B1E8000            393                     CMP     BX,ES:QUEUE_HEAD        ;more data to be transmitted?
00EA 742B                  394                     JE      L_TX2
00EC 268B1E8000            395                     MOV     BX,ES:QUEUE_HEAD        ;get data from queue
00F1 268A07                396                     MOV     AL,ES:QUE_BASE[BX]
00F4 E600                  397                     OUT     STB,AL                  ;tx data
00F6 26FF068000            398                     INC     ES:QUEUE_HEAD           ;point to next data
00FB 26813E80008000        399                     CMP     ES:QUEUE_HEAD,QUEUE_LEN ;wrap around if necessary
0102 7C07                  400                     JL      L_TX1
0104 26C70680000000        401                     MOV     ES:QUEUE_HEAD,0
010B                       402     L_TX1:          
010B 268B1E8200            403                     MOV     BX,ES:QUEUE_TAIL
0110 263B1E8000            404                     CMP     BX,ES:QUEUE_HEAD        ;more data to be transmitted?
0115 7506                  405                     JNE     L_TX3
0117                       406     L_TX2:
0117 E401                  407                     IN      AL,SIER                 ;no more, disable TX interrupt.
0119 24FD                  408                     AND     AL,11111101B
011B E601                  409                     OUT     SIER,AL
011D                       410     L_TX3:
                           411                     
                           412     ;RESET_INT_CTL
011D BA22FF                413                     MOV DX, EOI
0120 B80C00                414                     MOV AX, 12
0123 EE                    415                     OUT DX, AL
0124 07                    416                     POP     ES                      ;restore original ES(transmit)
                           417                     
0125 5A                    418                     POP     DX 
0126 5B                    419                     POP     BX                      ;return serial interrupt
0127 58                    420                     POP     AX
0128 CF                    421                     IRET
                           422     ; **************** End of SERIAL_INTR service routine ************************
                           423     
                           424     
                           425     
                           426     ; **************** Start of TIMER0_INTR service routine ******************
0129                       427     TIMER2_INTR:
0129 50                    428                     PUSH    AX
012A 52                    429                     PUSH DX
                           430     ; Action to be taken on timer0 interrupt to be written by user
012B 9A0000----     E      431                     CALL    FAR PTR TIMER2_ACTION
8086/87/88/186 MACRO ASSEMBLER    MISC                                                     02:26:25  12/01/;2  PAGE    9


LOC  OBJ                  LINE     SOURCE

                           432                   
                           433                                     ;return interrupt
                           434                     ;RESET_INT_CTL
0130 BA22FF                435                     MOV DX, EOI
0133 B80800                436                     MOV AX, 8
0136 EE                    437                     OUT DX, AL
0137 5A                    438                     POP DX
0138 58                    439                     POP AX
0139 CF                    440                     IRET
                           441     ; **************** End of TIMER2_INTR service routine ************************
                           442     
----                       443     MISC_ROUTINE    ENDS
                           444     
                           445     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
