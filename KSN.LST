8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE TIMER
OBJECT MODULE PLACED IN KSN.OBJ
ASSEMBLER INVOKED BY:  G:\ASM86.EXE KSN.ASM


LOC  OBJ                  LINE     SOURCE

                             1 +1  $MOD186
                             2 +1  $EP
                             3     NAME TIMER
                             4     ; Main program for uPD70208 microcomputer system
                             5     ;
                             6     ; US, WE WROTE IT BITCHES! hey Colin, TTT, and uncle! ;)
                             7     ; =========================================================================
                             8     ; 1 KEYBOARD VERSION (TESTING ONLY)
                             9     public  serial_rec_action, timer2_action
                            10     extrn   print_char:far, print_2hex:far, iodefine:far
                            11     extrn   set_timer2:far
  0080                      12     PORTA           equ 080h
  0081                      13     PORTB           EQU 081H
  0082                      14     PORTC           EQU 082H
  0083                      15     CWR             EQU 083H
  0100                      16     LED_SELECT      EQU     0100H
  0180                      17     LED_OUTPUT      EQU     0180H 
  FFA4                      18     PCSBA           EQU    0FFA4H ; Peripheral Chip Select Base Address
  FFA8                      19     MPCS            EQU    0FFA8H ; MMCS and PCS Alter Control Register
  FFA6                      20     MMCS EQU 0FFA6H
  0200                      21     PCS4 EQU 200H
  000B                      22     KBD_BUFFER_LEN  EQU             11
  0009                      23     KBD_BUFFER_LEN2 EQU             9
  0001                      24     KBD_NEW EQU 01H
  0002                      25     KBD_STALE       EQU     02H
                            26     
  0008                      27     BARCODE_LEN     EQU     08
  0004                      28     QUANTITY_LEN    EQU     04
  0000                      29     NET_READY EQU 0
  0001                      30     NET_PREADDR_BUFFERING EQU 1
  0002                      31     NET_ADDR_RECIEVING EQU 2
  0003                      32     NET_SELECTED EQU 3
  0004                      33     NET_BUFFERING EQU 4
  0002                      34     ADDR_LEN EQU 2
  004E                      35     NACK    EQU     'N'
  0060                      36     NET_PREADDR_CHAR EQU '`'
  0003                      37     NET_PREADDR_LEN  EQU 3
  000F                      38     NET_PAYLOAD_LEN  EQU 15
                            39             ;; PRICE_LEN NEEDS TO TAKE ACCOUNT OF . 
  0006                      40     PRICE_LEN EQU 6
  0001                      41     PRICE_NEW EQU 01
  0002                      42     PRICE_STALE EQU 02
  0000                      43     CASHIER_READY EQU 0
  0001                      44     CASHIER_START_TRANSACTION EQU 1
  0002                      45     CASHIER_RECV_BARCODE EQU 2
  0004                      46     CASHIER_RECV_QUANTITY  EQU 4
  0005                      47     CASHIER_GET_PRICE       EQU 5
  0006                      48     CASHIER_DISPLAY_PRICE   EQU 6
  0007                      49     CASHIER_EOT_PROMPT      EQU 7
  0008                      50     CASHIER_EOT     EQU     8
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE    2


LOC  OBJ                  LINE     SOURCE

  0024                      51     SOUND_INPUT_LEN EQU 36
  0018                      52     TIMER_COUNTER_LEN   EQU 24
                            53     
----                        54     STACK_SEG       SEGMENT
0000 (256                   55                     DB      256 DUP(?)
     ??
     )
0100                        56             TOS     LABEL   WORD
----                        57     STACK_SEG       ENDS
                            58     
                            59     
----                        60     DATA_SEG        SEGMENT
                            61     
0000 00                     62             CASHIER_STATE   DB      CASHIER_READY
0001 0A                     63             TIMER0_MESS     DB      10,13,'TIMER2 INTERRUPT    '
0002 0D
0003 54494D45523220
     494E5445525255
     505420202020
0017 2F                     64             T_COUNT         DB      2FH
0018 2F                     65             T_COUNT_SET     DB      2FH
0019 0A                     66             REC_MESS        DB      10,13,'Period of timer0 = '  
001A 0D
001B 506572696F6420
     6F662074696D65
     7230203D20
002E 31                     67             array       DB      '1','2','3','4','5','6','7','8','9','*','0','#'
002F 32
0030 33
0031 34
0032 35
0033 36
0034 37
0035 38
0036 39
0037 2A
0038 30
0039 23
003A 41                     68             ARRAY2      DB      'A','B','C','D','E','F','G','H','I','J','K','L' 
003B 42
003C 43
003D 44
003E 45
003F 46
0040 47
0041 48
0042 49
0043 4A
0044 4B
0045 4C
0046 3F                     69             BCD         DB  3FH,06H,5BH,4FH,66H,6DH,7DH,07H,7FH,06FH
0047 06
0048 5B
0049 4F
004A 66
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE    3


LOC  OBJ                  LINE     SOURCE

004B 6D
004C 7D
004D 07
004E 7F
004F 6F
0050 3F                     70             LED_BUFFER      DB      3fh,06h,5bh,4fh,66h,6dh
0051 06
0052 5B
0053 4F
0054 66
0055 6D
0056 00                     71             CUR_LED         DB      0H
0057 3412                   72             DISPLAY_NUM     DW      1234H
                            73                     
0059 00                     74             KBD_ROW_COUNTER DB      0H
                            75             ;USED TO OUTPUT TO KBD
005A 00                     76             KBD_OUTPUT      DB      0H
                            77             
                            78             ; CONTAINS KEYBOARD INPUT ASCII CHARS
005B 00                     79             KBD_INPUT       DB      0H
005C 02                     80             KBD_LATCH       DB      KBD_STALE
005D 00                     81             LED_CURSOR      DB      0H
005E 00                     82             KBD_ROW_COUNTER2 DB     0H
005F 00                     83             KBD_OUTPUT2      DB     0H
0060 00                     84             KBD_INPUT2      DB      0H
0061 00                     85         TIMER_COUNTER   DB  0H
                            86             
                            87     ;=========================================================================
                            88     ;Port B of the 8255 is used as the input port for the keybad
                            89     ;Port C is used as the output and grounds the rows one by one
                            90     ;=========================================================================
                            91             ;; THIS IS  THE PACKET TRANSMITTED. SET LENGTH IN NET_PAYLOAD_LEN
0062 21313832343333         92             BARCODE     DB  '!18243337:0012#'
     33373A30303132
     23
                            93             
0071 0A                     94             RECV_MESS       DB      10,13,'PRICE RECV'
0072 0D
0073 50524943452052
     454356
007D (8                     95             CUR_PRICE       DB      8 DUP(?)
     ??
     )
0085 02                     96             CUR_PRICE_LATCH DB      PRICE_STALE
0086 00                     97             CUR_INDEX       DB      0
0087 00                     98             NET_STATE       DB      0
0088 6261                   99             ADDRESS         DW      'ab'
008A 00                    100             ADDR_INCOM_COUNT      DB      0
008B 00                    101             ADDR_COUNT      DB      0
008C (4                    102             ADDR_BUFFER     DB      4 DUP(?)
     ??
     )
0090 0080                  103                 SOUND_SEGNUM DW 8000H
0092 0000                  104         SOUND_OFFSET DW 0
0094 00                    105         SOUND_DATA DB 0
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE    4


LOC  OBJ                  LINE     SOURCE

0095 0000                  106             SOUND_BASE_ADDR     DW  0, 4713,8481,11945,15315,18317,21614,26120,30013,3180
                                   9,36107,39110,43768,47646,51847,56124
0097 6912
0099 2121
009B A92E
009D D33B
009F 8D47
00A1 6E54
00A3 0866
00A5 3D75
00A7 417C
00A9 0B8D
00AB C698
00AD F8AA
00AF 1EBA
00B1 87CA
00B3 3CDB
00B5 6812                  107             endsize         DW  4712,8480,11944,15314,18316,21613,26119,30012,31808,36106
                                   ,39109,43767,47645,51846,56123,60774
00B7 2021
00B9 A82E
00BB D23B
00BD 8C47
00BF 6D54
00C1 0766
00C3 3C75
00C5 407C
00C7 0A8D
00C9 C598
00CB F7AA
00CD 1DBA
00CF 86CA
00D1 3BDB
00D3 66ED
00D5 0000                  108         SOUND_INPUT DW  0,1,8,3,0,1,2,3,7,8,9,7,8,9,2,3,5,6
00D7 0100
00D9 0800
00DB 0300
00DD 0000
00DF 0100
00E1 0200
00E3 0300
00E5 0700
00E7 0800
00E9 0900
00EB 0700
00ED 0800
00EF 0900
00F1 0200
00F3 0300
00F5 0500
00F7 0600
00F9 00                    109         SOUND_INPUT_SEEK    DB 0
                           110             
                           111             ;; network state machine:
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE    5


LOC  OBJ                  LINE     SOURCE

                           112             ;; READY
                           113             ;;  |
                           114             ;; ` -> NET_PREADDR_BUFFERING
                           115             ;; ``` -> NET_ADDR_RECIEVING (A)
                           116             ;; 0023H
                           117             ;;      |
                           118             ;;     /  \
                           119             ;; myaddr?  return READY + NACK
                           120             ;;   |
                           121             ;;  NET_SELECTED (transmit BARCODE+ Quantity)
                           122             ;;   |
                           123             ;;  NET_BUFFERING -> '1'*PRICE_LEN -> CUR_PRICE UPDATED ->ACK CUR_PRICE
                           124             ;; return READY
00FA (50                   125             BARCODE_BUFFER  DB      50 DUP(?)
     ??
     )
012C 00                    126             BARCODE_SEEK    DB      0H
012D (10                   127             QUANTITY_BUFFER DB      10 DUP(?)
     ??
     )
0137 00                    128             QUANTITY_SEEK   DB      0H
0138 00                    129             KBD_BUFFER_SEEK DB      0H
0139 00                    130             KBD_BUFFER_SEEK2  DB      0H
013A (30                   131             KBD_BUFFER2     DB      30 DUP(?)
     ??
     )
0158 (30                   132             KBD_BUFFER      DB      30 DUP(?)
     ??
     )
                           133     
                           134             
                           135             
----                       136     DATA_SEG        ENDS
                           137     
                           138     
----                       139     CODE_SEG        SEGMENT
                           140     
                           141             PUBLIC          START
                           142     
                           143     ASSUME  CS:CODE_SEG, SS:STACK_SEG, DS:DATA_SEG
                           144     
0000                       145     START:
                           146     ; initialize the ROM addr range
0000 BAA6FF                147     MOV DX, MMCS
0003 B80380                148     MOV AX, 8003H
0006 EF                    149     OUT DX, AX
                           150      ; Initialize MPCS to MAP peripheral to IO address
0007 BAA8FF                151              MOV DX, MPCS
000A B88340                152              MOV AX, 4083H
000D EE                    153              OUT DX, AL
                           154     ; PCSBA initial, set the serial port start from 00H
000E BAA4FF                155              MOV DX, PCSBA
0011 B80300                156              MOV AX, 0003H ; Peripheral starting address 00H no READY, No Waits
0014 EE                    157              OUT DX, AL
                           158     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE    6


LOC  OBJ                  LINE     SOURCE

                           159     ;initialize stack area
0015 B8----         R      160                     MOV     AX,STACK_SEG            
0018 8ED0                  161                     MOV     SS,AX
001A 368B260001            162                     MOV     SP,TOS
                           163     ;Initialise data segment
001F B8----         R      164                     MOV AX,DATA_SEG
0022 8ED8                  165                     MOV DS,AX
                           166     
                           167     ; Initialize the on-chip pheripherals
0024 9A0000----     E      168                     CALL FAR PTR IODEFINE
                           169                     
                           170     
                           171     
                           172     ; ^^^^^^^^^^^^^^^^^  Start of User Main Routine  ^^^^^^^^^^^^^^^^^^
                           173        
0029 B082                  174     MOV AL, 82H       ;mode 0, A - out, B-in ;changed value of CW from 82H
002B BA8300                175                     MOV DX, CWR
002E EE                    176                     OUT DX, AL      ;send the control word
002F B300                  177                     MOV BL, 00H     ;initialize BL for key code
0031 33C0                  178                     XOR AX, AX      ;clear ax flags
0033 BA8200                179                     MOV DX, PORTC  ;port C address to DX
0036 EE                    180                     OUT DX, AL      ;ground all rows
                           181                     
                           182     
                           183     
                           184        
                           185     ;code
0037 9A0000----     E      186      call set_timer2
003C FB                    187                     STI
                           188     
003D                       189     NEXT:
                           190     
003D 9A2D02----     R      191             CALL FAR PTR KEYBOARD
0042 9AF202----     R      192             call far ptr keyboard2
                           193           ; CALL FAR PTR CASHIER_STATE_M 
                           194             
                           195             
0047 EBF4                  196      JMP NEXT
                           197     
                           198     ; ^^^^^^^^^^^^^^^ End of User main routine ^^^^^^^^^^^^^^^^^^^^^^^^^
                           199     
  0041                     200     TRIGGER_START_T EQU     'A'
  0044                     201     TRIGGER_BARCODE EQU 'D'
  0045                     202     TRIGGER_QUANTITY EQU    'E'
0049                       203     CASHIER_STATE_M         PROC    FAR
0049 50                    204             PUSH AX
004A 53                    205             PUSH BX
004B 51                    206             PUSH CX
004C 52                    207             PUSH DX
004D A00000                208             MOV AL, DS:CASHIER_STATE
0050 3C00                  209             CMP AL, CASHIER_READY
0052 7420                  210             JE C_READY_HANDLE
                           211             
0054 3C01                  212             CMP AL, CASHIER_START_TRANSACTION
0056 742E                  213                     JE C_START_T_HANDLE
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE    7


LOC  OBJ                  LINE     SOURCE

                           214             
0058 3C02                  215             CMP AL, CASHIER_RECV_BARCODE
005A 7443                  216                     JE C_RECV_BARCODE
                           217     
005C 3C04                  218             CMP AL, CASHIER_RECV_QUANTITY
005E 7411                  219                      JE HACKY_RECV_QUANTITY      
                           220     
0060 3C05                  221             CMP AL, CASHIER_GET_PRICE
0062 7407                  222                      JE HACKY_GET_PRICE
                           223     
0064 3C06                  224             CMP AL, CASHIER_DISPLAY_PRICE
0066 7406                  225             JE HACKY_DISP_PRICE
                           226             
0068 E9C200                227             JMP EXIT_CASHIER_STATE
006B                       228     HACKY_GET_PRICE:
006B E9AB00                229             JMP C_GET_PRICE
006E                       230     HACKY_DISP_PRICE:
006E E9B700                231             JMP C_DISP_PRICE
0071                       232     HACKY_RECV_QUANTITY:
0071 EB6990                233             JMP C_RECV_QUANTITY
0074                       234     C_READY_HANDLE:
                           235             ;;      mov bl, ds:kbd_latch
                           236             ;;         cmp bl, kbd_new
                           237             ;;         jne hacky_ready
                           238     
                           239             ;;         mov ds:kbd_latch, kbd_stale 
0074 A06000                240             mov al, ds:kbd_input2
0077 3C41                  241             CMP AL, 'A'
0079 7508                  242             JNE HACKY_READY
007B B001                  243             MOV AL, CASHIER_START_TRANSACTION
007D A20000                244             MOV DS:CASHIER_STATE, AL
                           245            
                           246            
0080 E9AA00                247             JMP EXIT_CASHIER_STATE
                           248     
0083                       249     HACKY_READY:
                           250             
0083 E9A700                251             JMP EXIT_CASHIER_STATE
0086                       252     C_START_T_HANDLE:
0086 9A6104----     R      253             CALL FAR PTR CLEAR_LED
008B B002                  254             MOV AL, CASHIER_RECV_BARCODE
008D A20000                255             MOV DS:CASHIER_STATE, AL
                           256             
0090 C6065D0000            257             MOV DS:LED_CURSOR, 0H
0095 B073                  258             MOV AL,'s'
0097 9A0000----     E      259             CALL FAR PTR PRINT_CHAR
                           260             
009C E98E00                261             JMP EXIT_CASHIER_STATE
                           262                     
009F                       263     C_RECV_BARCODE:
                           264             
009F A06000                265              MOV AL, DS:KBD_INPUT2
00A2 3C44                  266             CMP AL, TRIGGER_BARCODE
00A4 7429                  267             JE UPDATE_B_STATE
                           268     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE    8


LOC  OBJ                  LINE     SOURCE

00A6 A05C00                269             MOV AL, DS:KBD_LATCH
                           270       
00A9 3C01                  271             CMP AL, KBD_NEW
00AB 752C                  272             JNE EXIT_RECV_BARCODE
                           273             
00AD B063                  274             mov al, 'c'
00AF 9A0000----     E      275             call far ptr print_char
                           276             
                           277             ;; ======== ADD TO BARCODE_BUFFER
00B4 A05B00                278             MOV AL, DS:KBD_INPUT
00B7 8A1E2C01              279             MOV BL, DS:BARCODE_SEEK
00BB 32FF                  280             XOR BH, BH
00BD 8887FA00              281             MOV DS:BARCODE_BUFFER[BX],AL
00C1 FEC3                  282             INC BL
                           283     
                           284     
                           285          
00C3 881E2C01              286             MOV DS:BARCODE_SEEK, BL
00C7 C6065C0002            287             MOV DS:KBD_LATCH, KBD_STALE
                           288     
                           289             
                           290             
00CC EB0B90                291             JMP EXIT_RECV_BARCODE
                           292             
                           293             
00CF                       294     UPDATE_B_STATE:
00CF C606000004            295             MOV DS:CASHIER_STATE, CASHIER_RECV_QUANTITY
00D4 9AB104----     R      296                call far ptr PRINT_BARCODE_BUFFER 
                           297             
00D9                       298     EXIT_RECV_BARCODE:
00D9 EB5290                299             JMP EXIT_CASHIER_STATE
                           300     
00DC                       301     C_RECV_QUANTITY:
00DC A06000                302             MOV AL,DS:KBD_INPUT2
                           303             ;; HERE TRIGGER_BARCODE IS BEING USED FOR THE QUANTITY
00DF 3C45                  304             CMP AL,TRIGGER_QUANTITY
00E1 7429                  305             JE UPDATE_C_STATE
                           306     
00E3 A05C00                307             MOV  AL,DS:KBD_LATCH
00E6 3C01                  308             CMP AL,KBD_NEW
00E8 752C                  309             JNE EXIT_RECV_QUANTITY
00EA B071                  310             mov al, 'q'
00EC 9A0000----     E      311             call far ptr print_char
                           312             
00F1 A05B00                313             MOV AL,DS:KBD_INPUT
00F4 8A1E3701              314             MOV BL,DS:QUANTITY_SEEK
00F8 32FF                  315             XOR BH,BH
00FA 88872D01              316             MOV DS:QUANTITY_BUFFER[BX],AL
00FE FEC3                  317             INC BL
0100 881E3701              318             MOV DS:QUANTITY_SEEK,BL
0104 C6065C0002            319             MOV DS:KBD_LATCH,KBD_STALE
0109 EB0B90                320             JMP EXIT_RECV_QUANTITY
                           321             
010C                       322     UPDATE_C_STATE:
                           323     ;;; REMEMBER TO MAKE INTO A PACKET
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE    9


LOC  OBJ                  LINE     SOURCE

010C 9A7504----     R      324                      CALL FAR PTR MAKE_PACKET
0111 C606000005            325                  MOV DS:CASHIER_STATE,CASHIER_GET_PRICE
0116                       326     EXIT_RECV_QUANTITY:
0116 EB1590                327             JMP EXIT_CASHIER_STATE          
                           328             
0119                       329     C_GET_PRICE:
0119 A08500                330             MOV AL, DS:CUR_PRICE_LATCH
011C 3C01                  331             CMP AL, PRICE_NEW
011E 7505                  332             JNE EXIT_GET_PRICE
0120 C606000006            333             MOV DS:CASHIER_STATE, CASHIER_DISPLAY_PRICE
                           334     
                           335           
                           336     
0125                       337     EXIT_GET_PRICE:
0125 EB0690                338             JMP EXIT_CASHIER_STATE
                           339     
0128                       340     C_DISP_PRICE:
0128 9A1104----     R      341             CALL FAR PTR DISPLAY_PRICE_LED
                           342             ;;         MOV DS:CASHIER_STATE, CASHIER_READY
012D                       343     EXIT_CASHIER_STATE:
012D 5A                    344             POP DX
012E 59                    345             POP CX
012F 5B                    346             POP BX
0130 58                    347             POP AX
0131 CB                    348             RET
                           349             
                           350     CASHIER_STATE_M         ENDP
                           351     
0132                       352     SERIAL_REC_ACTION       PROC    FAR
0132 51                    353                     PUSH    CX
0133 53                    354                     PUSH    BX
0134 1E                    355                     PUSH    DS
                           356     
0135 BB----         R      357                     MOV     BX,DATA_SEG             ;initialize data segment register
0138 8EDB                  358                     MOV     DS,BX
013A 8A1E8700              359                     MOV BL, DS:NET_STATE
013E 80FB01                360                     CMP BL, NET_PREADDR_BUFFERING
0141 7449                  361                     JZ ADDR_BUFFERING
0143 80FB02                362                     CMP BL, NET_ADDR_RECIEVING
0146 745C                  363                     JZ ADDR_RECIEVING
0148 80FB04                364                     CMP BL, NET_BUFFERING
014B 740C                  365                     JZ CALL_BUFFERING
014D 80FB03                366                     CMP BL, NET_SELECTED
0150 740F                  367                     JZ SELECTED
                           368             ;; 
0152 3C60                  369                     CMP AL, NET_PREADDR_CHAR
0154 7436                  370                     JZ ADDR_BUFFERING
                           371     
                           372             
0156 E99100                373                     JMP     S_RET
                           374             
                           375             ;;      JNE     WRONG_ADDRESS
                           376     ;               IF POLL IS SELECTING DS:ADDRESS, TRANSMIT THE BARCODE
0159                       377     CALL_BUFFERING:
0159 9AEE01----     R      378                     CALL FAR PTR DATA_BUFFERING
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE   10


LOC  OBJ                  LINE     SOURCE

015E E98900                379                     JMP S_RET
0161                       380     SELECTED:
                           381             ;; starts sending the barcode and quantity
                           382             ;;                      MOV AL, DS:CASHIER_STATE
                           383             ;;                      CMP AL, CASHIER_GET_PRICE
                           384                     ;; dON'T TRANSMIT ANYTHING UNLESS STATE IS GET_PRICE
                           385             ;;                      JNE NOT_READY   
                           386             
0161 B90F00                387                     MOV CX, NET_PAYLOAD_LEN
0164 BB0000                388                     MOV BX, 0
0167                       389     START_TRANSMIT:         
0167 8A4762                390                     MOV AL,DS:BARCODE[BX]
016A 9A0000----     E      391                     CALL FAR PTR PRINT_CHAR
016F 43                    392                     INC BX
0170 E2F5                  393                     LOOP    START_TRANSMIT
                           394             ;; change state to recieving
0172 C606870004            395                     MOV DS:NET_STATE, NET_BUFFERING
0177 EB7190                396                     JMP     S_RET
017A                       397     NOT_READY:
017A B04E                  398                     MOV AL, NACK
017C 9A0000----     E      399                     CALL FAR PTR PRINT_CHAR
0181 EB6790                400                     JMP S_RET
0184                       401     WRONG_ADDRESS:          
0184 9A0000----     E      402                     CALL FAR PTR PRINT_CHAR
0189 EB5F90                403                     JMP S_RET
                           404      
018C                       405     ADDR_BUFFERING:
                           406             ;; buffers the incoming addr char '`' as by protocol
018C FE068A00              407                     INC DS:ADDR_INCOM_COUNT
0190 A08A00                408                     MOV AL, DS:ADDR_INCOM_COUNT
0193 3C03                  409                     CMP AL,NET_PREADDR_LEN
0195 750A                  410                     JNE SKIP_UPDATE
0197 C606870002            411                     MOV DS:NET_STATE, NET_ADDR_RECIEVING
019C B000                  412                     MOV AL, 0
019E A28A00                413                     MOV DS:ADDR_INCOM_COUNT, AL
01A1                       414     SKIP_UPDATE:    
01A1 EB4790                415                     JMP S_RET
                           416             
01A4                       417     ADDR_RECIEVING:
                           418             ;; recives the address being broadcasted. address is only 2 bytes
01A4 8A1E8B00              419                     MOV BL, DS:ADDR_COUNT
01A8 32FF                  420                     XOR BH, BH
01AA 88878C00              421                     MOV DS:ADDR_BUFFER[BX], AL
01AE FE068B00              422                     INC DS:ADDR_COUNT
01B2 A08B00                423                     MOV AL, DS:ADDR_COUNT
01B5 3C02                  424                     CMP AL,ADDR_LEN
01B7 7D03                  425                     JGE ADDR_DONE
01B9 EB2F90                426                     JMP S_RET
01BC                       427     ADDR_DONE:
01BC 8A268C00              428                     MOV AH,DS:ADDR_BUFFER
01C0 A08D00                429                     MOV AL,DS:ADDR_BUFFER[1]
01C3 3B068800              430                     CMP AX,DS:ADDRESS
01C7 7414                  431                     JE ISMYADDR
                           432             ;; FOR DEV PURPOSES ONLY
01C9 B04E                  433                     MOV AL, NACK
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE   11


LOC  OBJ                  LINE     SOURCE

01CB 9A0000----     E      434                     CALL FAR PTR PRINT_CHAR
                           435             ;; RESET STATE TO READY SINCE NOT MY ADDR
01D0 B000                  436                     MOV AL, NET_READY
01D2 A28700                437                     MOV DS:NET_STATE, AL
01D5 32C0                  438                     XOR AL,AL
01D7 A28B00                439                     MOV DS:ADDR_COUNT, AL
01DA EB0E90                440                     JMP S_RET
01DD                       441     ISMYADDR:
                           442             ;; SET STATE TO SELECTED
01DD B003                  443                     MOV AL,NET_SELECTED
01DF A28700                444                     MOV DS:NET_STATE, AL
01E2 B000                  445                     MOV AL, 0
                           446             ;; RESET ADDR_COUNT
01E4 A28B00                447                     MOV DS:ADDR_COUNT, AL
01E7 E977FF                448                     JMP SELECTED
                           449     
01EA                       450     S_RET:
01EA 1F                    451                     POP     DS
01EB 5B                    452                     POP     BX
01EC 59                    453                     POP     CX
01ED CB                    454                     RET
                           455     SERIAL_REC_ACTION       ENDP
                           456     
                           457     
01EE                       458     DATA_BUFFERING  PROC    FAR
                           459             
01EE 50                    460                     PUSH AX
01EF 53                    461                     PUSH BX
                           462             
01F0 8A1E8600              463                     MOV BL, DS:CUR_INDEX
01F4 32FF                  464                     XOR BH,BH
01F6 88477D                465                     MOV DS:CUR_PRICE[BX], AL
                           466                     
01F9 FEC3                  467                     INC BL
01FB 80FB06                468                     CMP BL, PRICE_LEN
01FE 7D07                  469                     JGE BUFFER_END
0200 881E8600              470                     MOV DS:CUR_INDEX, BL
0204 EB2490                471                     JMP ESCAPE_PROC 
0207                       472     BUFFER_END:
0207 B90600                473                     MOV CX,PRICE_LEN
020A BB0000                474                     MOV BX, 0
020D 8A477D                475                     MOV AL, DS:CUR_PRICE[BX]
0210                       476     ACK_LOOP:
0210 8A477D                477                     MOV AL, DS:CUR_PRICE[BX]
0213 9A0000----     E      478                     CALL FAR PTR PRINT_CHAR
0218 43                    479                     INC BX
0219 E2F5                  480                     LOOP    ACK_LOOP
021B C606850001            481                     MOV DS:CUR_PRICE_LATCH, PRICE_NEW
0220 C606870000            482                     MOV DS:NET_STATE, NET_READY
0225 32C0                  483                     XOR AL,AL
0227 A28600                484                     MOV DS:CUR_INDEX, AL
022A                       485     ESCAPE_PROC:    
022A 5B                    486                     POP BX
022B 58                    487                     POP AX
022C CB                    488                     RET
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE   12


LOC  OBJ                  LINE     SOURCE

                           489             
                           490     DATA_BUFFERING ENDP
                           491     
022D                       492     KEYBOARD PROC FAR
                           493     
022D 52                    494                     PUSH    DX
022E 51                    495                     PUSH    CX
022F 53                    496                     PUSH    BX
0230 50                    497                     PUSH    AX
                           498                     
                           499     
0231                       500     INIT:           
                           501                     
                           502                     
0231 B17F                  503                     MOV CL, 07FH    ;STORES OUTPUT FOR ROW COUNTER;
                           504                     ;MOV AL,0FEH ; 1111 1110
0233 B500                  505                     MOV CH, 0H      ;set row counter
0235 882E5900              506                     MOV DS:KBD_ROW_COUNTER,CH
0239 880E5A00              507                     MOV DS:KBD_OUTPUT, CL
023D EB0490                508                     jmp next_row
0240                       509     hacky_stuff:
0240 E99000                510                     jmp exit_kbd    
0243                       511     NEXT_ROW:
0243 A05900                512                     MOV AL,DS:KBD_ROW_COUNTER
                           513             
0246 3C04                  514                     CMP AL,04
0248 7DF6                  515                     JGE hacky_stuff
024A 8A0E5A00              516                     MOV CL,DS:KBD_OUTPUT 
024E D0C1                  517                     ROL CL, 01H       ;rotate AL to ground next row/ al HAS 8 BITS. so mu
                                   st JMP BACK TO WAIT
                           518     
                           519                     ;MOV CH, AL     ;save data byte to ground next row ;WAT?
0250 8AC1                  520                     MOV AL,CL
0252 BA8200                521                     MOV DX, PORTC   ;port C address to DX; 
0255 EE                    522                     OUT DX, AL      ;give positive logic to one of the rows
0256 A25A00                523                     MOV DS:KBD_OUTPUT, AL   
                           524             
0259 BA8100                525                     MOV DX, PORTB   ;port B address to DX  
025C EC                    526                     IN  AL,DX       ;read input port for key closure
                           527                     
                           528                     
                           529                     ;mov al,101b; change later
025D 2407                  530                     AND AL, 07H     ;Mask D4-D7
025F 3C07                  531                     CMP AL,07H
0261 7469                  532                     JE RETPOINT
                           533                     ;ERROR CHECK
0263 3C06                  534                     CMP AL,0110B
0265 740B                  535                     JE VALIDATED
0267 3C05                  536                     CMP AL,0101B
0269 7407                  537                     JE VALIDATED
026B 3C03                  538                     CMP AL,011B
026D 7403                  539                     JE VALIDATED
026F EB5B90                540                     JMP RETPOINT
                           541                     
0272                       542     VALIDATED:              
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE   13


LOC  OBJ                  LINE     SOURCE

0272 9AD802----     R      543                     CALL FAR PTR KBD_PROCESS
                           544                     ;Bl CONTAINS iNDEX OF ARRAY WITH CURRENT KEY
                           545             ;; | SEEK==0 = ADD_TO_BUFFER
                           546             ;; | BUFFER[0]== aL = ADD_TO_BUFFER
                           547             ;; | ELSE = (ADD_TO_BUFFER) & (SEEK 0) AKA RESET
                           548                     ;JMP NUMBERS
                           549     
0277                       550     NUMBERS:
0277 32FF                  551                     XOR BH, BH
0279 8A472E                552                     MOV AL,DS:array[BX] ; Stores character in AL (?)
027C 32E4                  553                     XOR AH,AH
                           554                     ;CALL   FAR PTR PRINT_CHAR
                           555                     ; Hack to fix the * from irritating
027E 3C2A                  556                     CMP AL, '*'
0280 7426                  557                     JE Debounce
0282 8A0E3801              558             MOV CL, DS:KBD_BUFFER_SEEK
0286 80F900                559             CMP CL,0H
0289 740E                  560             JZ ADD_TO_BUFFER
                           561     
                           562             
028B 8A0E5801              563             MOV CL, KBD_BUFFER
                           564                     ;COMPARE WITH VALUE AT first
028F 3AC8                  565             CMP CL,AL
0291 7406                  566                     JZ  ADD_TO_BUFFER
                           567                     
0293 32C9                  568                     XOR CL,CL
0295 880E3801              569                     MOV DS:KBD_BUFFER_SEEK, CL
                           570                                     
                           571     
0299                       572     ADD_TO_BUFFER:
                           573             ;;PUT AL INTO SI SO WE CAN PUT CURRENT CHAR IN THE BUFFER 
0299 32ED                  574                     XOR CH,CH
029B 8BF1                  575                     MOV SI,CX
029D 88845801              576                     MOV DS:KBD_BUFFER[SI],AL
02A1 FE063801              577                     INC DS:KBD_BUFFER_SEEK
                           578     
02A5 B98813                579                     mov cx, 5000
02A8                       580     Debounce:
02A8 90                    581                     nop
02A9 E2FD                  582                     loop debounce
02AB                       583     CHECKER_SEEK:
02AB 8A0E3801              584                     MOV CL, DS:KBD_BUFFER_SEEK
02AF 80F90B                585                     CMP CL,KBD_BUFFER_LEN
                           586                     ;ADD CL,48
                           587                     ;MOV AL,CL
                           588                     ;CALL FAR PTR PRINT_CHAR
                           589                     
02B2 7518                  590                     JNE RETPOINT
                           591                     ;RESET KBD_BUFFER_SEEK
                           592                     ;AL CONTAINS CHAR
02B4 A25B00                593                     MOV DS:KBD_INPUT, AL
02B7 C6065C0001            594                     MOV DS:KBD_LATCH, KBD_NEW
02BC 9A0000----     E      595                     CALL    FAR PTR PRINT_CHAR
02C1 9A3004----     R      596                     CALL FAR PTR ADD_LED_BUFFER
02C6 32C9                  597                     XOR CL,CL
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE   14


LOC  OBJ                  LINE     SOURCE

                           598                     ;BUFFER_SEEK IS RESET
02C8 880E3801              599                     MOV DS:KBD_BUFFER_SEEK, CL
02CC                       600     RETPOINT:       
02CC FE065900              601             INC DS:KBD_ROW_COUNTER
                           602             
02D0 E970FF                603             JMP NEXT_ROW
                           604                     
02D3                       605     exit_kbd:       
02D3 58                    606             POP AX
02D4 5B                    607             POP BX
02D5 59                    608             POP CX
02D6 5A                    609             POP DX
02D7 CB                    610             RET
                           611     KEYBOARD ENDP
                           612     
02D8                       613     KBD_PROCESS             PROC    FAR
02D8 50                    614                     push ax
02D9 52                    615                     push dx
                           616                     ;0000 0101 => 1111 1010 => 0000 0010  => 0 , 1, 10   
02DA F6D0                  617                     NOT AL
02DC 2407                  618                     AND AL, 07H; MASK OTHER BLOODY BITS OMGOMGOMG
02DE D0E8                  619                     SHR AL,01 ; DIVIDE AL BY 2. TO GET COL NUMBER
02E0 8AD0                  620                     MOV DL,AL ; TEMP STORE AL IE PORTB INPUT AKA COL NUMBER
                           621                     
02E2 A05900                622                     mov Al,DS:KBD_ROW_COUNTER ; ROW COUNT MOVED TO AL
02E5 B603                  623                     MOV DH,03 ; TO MULTIPLY BY 3
                           624                     ;MULTIPLY THE FUCKER
02E7 F6E6                  625                     MUL DH
                           626                     ; RESULT IN AX
                           627                     
                           628                     
                           629                     ; NUMBER  <= 9 
02E9 02C2                  630                     ADD AL, DL ;ADD row*3 NO TO COL NUMBER
02EB 8AD8                  631                     MOV BL,AL
02ED 32FF                  632                     XOR BH,BH
                           633                     ;Bl CONTAINS iNDEX OF ARRAY WITH CURRENT KEY
                           634             ;; | SEEK==0 = ADD_TO_BUFFER
                           635             ;; | BUFFER[SEEK]== BL = ADD_TO_BUFFER
                           636             ;; | ELSE = (ADD_TO_BUFFER) & (SEEK 0) AKA RESET
                           637     
02EF 5A                    638                     pop dx
02F0 58                    639                     pop ax
02F1 CB                    640     RET
                           641     KBD_PROCESS             ENDP
                           642     
02F2                       643     KEYBOARD2 PROC FAR
                           644     
02F2 52                    645                     PUSH    DX
02F3 51                    646                     PUSH    CX
02F4 53                    647                     PUSH    BX
02F5 50                    648                     PUSH    AX
                           649                     
                           650     
02F6                       651     INIT2:          
                           652                     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE   15


LOC  OBJ                  LINE     SOURCE

                           653                     
02F6 B1F7                  654                     MOV CL, 0F7H    ;STORES OUTPUT FOR ROW COUNTER;
                           655                     ;MOV AL,0FEH ; 1110 1111
02F8 B500                  656                     MOV CH, 0H      ;set row counter
02FA 882E5E00              657                     MOV DS:KBD_ROW_COUNTER2,CH
02FE 880E5F00              658                     MOV DS:KBD_OUTPUT2, CL
                           659             
                           660                     ;call far ptr print_char
0302 EB0490                661                     jmp next_row2
0305                       662     hacky_shit:
0305 E98500                663                     jmp exit_kbd2
                           664                     
0308                       665     NEXT_ROW2:
0308 A05E00                666                     MOV AL,DS:KBD_ROW_COUNTER2
                           667             
                           668     
030B 3C04                  669                     CMP AL,04
030D 7DF6                  670                     JGE hacky_shit
030F 8A0E5F00              671                     MOV CL,DS:KBD_OUTPUT2 
0313 D0C1                  672                     ROL CL, 01H       ;rotate AL to ground next row/ al HAS 8 BITS. so mu
                                   st JMP BACK TO WAIT
                           673     
                           674                     ;MOV CH, AL     ;save data byte to ground next row ;WAT?
0315 8AC1                  675                     MOV AL,CL
0317 BA8200                676                     MOV DX, PORTC   ;port C address to DX; 
031A EE                    677                     OUT DX, AL      ;give positive logic to one of the rows
031B A25F00                678                     MOV DS:KBD_OUTPUT2, AL  
                           679             ;add al,48
                           680                     ;call far ptr print_char
031E BA8100                681                     MOV DX, PORTB   ;port B address to DX  
0321 EC                    682                     IN  AL,DX       ;read input port for key closure
                           683                     
                           684                     
                           685                     ;mov al,101b; change later
                           686                     ;call far ptr print_char
0322 2438                  687                     AND AL, 38H     ;Mask D4-D7  00xx x000
0324 C0E803                688                     SHR AL,03
0327 3C07                  689                     CMP AL,07H
0329 745B                  690                     JE RETPOINT2
                           691                     ;ERROR CHECK
032B 3C06                  692                     CMP AL,0110B
032D 740B                  693                     JE VALIDATED2
032F 3C05                  694                     CMP AL,0101B
0331 7407                  695                     JE VALIDATED2
0333 3C03                  696                     CMP AL,011B
0335 7403                  697                     JE VALIDATED2
0337 EB4D90                698                     JMP RETPOINT2
                           699                     
033A                       700     VALIDATED2:             
033A 9A9203----     R      701                     CALL FAR PTR KBD_PROCESS2
                           702                     ;Bl CONTAINS iNDEX OF ARRAY WITH CURRENT KEY
                           703             ;; | SEEK==0 = ADD_TO_BUFFER
                           704             ;; | BUFFER[SEEK]== BL = ADD_TO_BUFFER
                           705             ;; | ELSE = (ADD_TO_BUFFER) & (SEEK 0) AKA RESET
                           706                     ;JMP NUMBERS
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE   16


LOC  OBJ                  LINE     SOURCE

                           707     
033F                       708     NUMBERS2:
033F 32FF                  709                     XOR BH, BH
0341 8A473A                710                     MOV AL,DS:array2[BX] ; Stores character in AL (?)
0344 32E4                  711                     XOR AH,AH
                           712                     ;CALL   FAR PTR PRINT_CHAR
                           713                     
0346 8A0E3901              714             MOV CL, DS:KBD_BUFFER_SEEK2
034A 80F900                715             CMP CL,0H
034D 740E                  716             JZ ADD_TO_BUFFER2
                           717                                     
034F 8A0E3A01              718             MOV CL, KBD_BUFFER2
                           719                     ;COMPARE WITH VALUE AT SEEK
0353 3AC8                  720             CMP CL,AL
0355 7406                  721                     JZ  ADD_TO_BUFFER2
                           722                     
0357 32C9                  723                     XOR CL,CL
0359 880E3901              724                     MOV DS:KBD_BUFFER_SEEK2, CL
                           725                                     
                           726     
035D                       727     ADD_TO_BUFFER2:
                           728             ;;PUT AL INTO SI SO WE CAN PUT CURRENT CHAR IN THE BUFFER 
035D 32ED                  729                     XOR CH,CH
035F 8BF1                  730                     MOV SI,CX
0361 88843A01              731                     MOV DS:KBD_BUFFER2[SI],AL
0365 FE063901              732                     INC DS:KBD_BUFFER_SEEK2
                           733     
0369 B98813                734                     mov cx, 5000
036C                       735     Debounce2:
036C 90                    736                     nop
036D E2FD                  737                     loop debounce2
036F                       738     CHECKER_SEEK2:
036F 8A0E3901              739                     MOV CL, DS:KBD_BUFFER_SEEK2
0373 80F909                740                     CMP CL,KBD_BUFFER_LEN2
                           741                     ;ADD CL,48
                           742                     ;MOV AL,CL
                           743                     ;CALL FAR PTR PRINT_CHAR
                           744                     
0376 750E                  745                     JNE RETPOINT2
                           746                     ;RESET KBD_BUFFER_SEEK
                           747                     ;AL CONTAINS CHAR
0378 A26000                748                     MOV DS:KBD_INPUT2, AL
037B 9A0000----     E      749                     CALL    FAR PTR PRINT_CHAR
                           750             ;;      CALL FAR PTR ADD_LED_BUFFER
0380 32C9                  751                     XOR CL,CL
                           752                     ;BUFFER_SEEK IS RESET
0382 880E3901              753                     MOV DS:KBD_BUFFER_SEEK2, CL
0386                       754     RETPOINT2:      
0386 FE065E00              755             INC DS:KBD_ROW_COUNTER2
                           756             
038A E97BFF                757             JMP NEXT_ROW2
                           758                     
038D                       759     exit_kbd2:      
038D 58                    760             POP AX
038E 5B                    761             POP BX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE   17


LOC  OBJ                  LINE     SOURCE

038F 59                    762             POP CX
0390 5A                    763             POP DX
0391 CB                    764             RET
                           765     KEYBOARD2 ENDP
                           766     
0392                       767     KBD_PROCESS2            PROC    FAR
0392 50                    768                     push ax
0393 52                    769                     push dx
                           770                     ;0000 0101 => 1111 1010 => 0000 0010  => 0 , 1, 10   
0394 F6D0                  771                     NOT AL
0396 2407                  772                     AND AL, 07H; MASK OTHER BLOODY BITS OMGOMGOMG
0398 D0E8                  773                     SHR AL,01 ; DIVIDE AL BY 2. TO GET COL NUMBER
039A 8AD0                  774                     MOV DL,AL ; TEMP STORE AL IE PORTB INPUT AKA COL NUMBER
                           775                     
039C A05E00                776                     mov Al,DS:KBD_ROW_COUNTER2 ; ROW COUNT MOVED TO AL
039F B603                  777                     MOV DH,03 ; TO MULTIPLY BY 3
                           778                     ;MULTIPLY THE FUCKER
03A1 F6E6                  779                     MUL DH
                           780                     ; RESULT IN AX
                           781                     
                           782                     
                           783                     ; NUMBER  <= 9 
03A3 02C2                  784                     ADD AL, DL ;ADD row*3 NO TO COL NUMBER
03A5 8AD8                  785                     MOV BL,AL
03A7 32FF                  786                     XOR BH,BH
                           787                     ;Bl CONTAINS iNDEX OF ARRAY WITH CURRENT KEY
                           788             ;; | SEEK==0 = ADD_TO_BUFFER
                           789             ;; | BUFFER[SEEK]== BL = ADD_TO_BUFFER
                           790             ;; | ELSE = (ADD_TO_BUFFER) & (SEEK 0) AKA RESET
                           791     
03A9 5A                    792                     pop dx
03AA 58                    793                     pop ax
03AB CB                    794     RET
                           795     KBD_PROCESS2            ENDP
                           796             
03AC                       797     TIMER2_ACTION   PROC    FAR
03AC 50                    798                     PUSH    AX
03AD 1E                    799                     PUSH    DS
03AE 53                    800                     PUSH    BX
03AF 51                    801                     PUSH    CX
                           802     
                           803                     
03B0 FE066100              804             INC DS:TIMER_COUNTER
03B4 803E610018            805             CMP DS:TIMER_COUNTER, TIMER_COUNTER_LEN
03B9 750D                  806             JNE SKIP_RESET
03BB C606610000            807             MOV DS:TIMER_COUNTER,0
03C0 9AD203----     R      808             CALL FAR PTR DISPLAY_LED            
03C5 EB0690                809             JMP EXIT_TIMER_ACTION
                           810     
03C8                       811     SKIP_RESET:
03C8 9AD104----     R      812             CALL FAR PTR SOUND_OUTPUT_CALLBACK
                           813     
                           814     
03CD                       815     EXIT_TIMER_ACTION:
                           816     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE   18


LOC  OBJ                  LINE     SOURCE

03CD 59                    817                     POP     CX
03CE 5B                    818                     POP     BX
03CF 1F                    819                     POP     DS
03D0 58                    820                     POP     AX
03D1 CB                    821                     RET
                           822     TIMER2_ACTION   ENDP
                           823     
03D2                       824     DISPLAY_LED     PROC    FAR
03D2 50                    825             PUSH AX
03D3 53                    826             PUSH BX
03D4 51                    827             PUSH CX
03D5 52                    828             PUSH DX
                           829             ; CONVERTS CUR_LED TO SIGNAL
03D6 8A1E5600              830             MOV BL, DS:CUR_LED
03DA B0FE                  831             MOV AL,0FEH
03DC 8ACB                  832             MOV CL, BL
03DE D2C0                  833             ROL AL,CL
                           834             
03E0 BA0001                835             MOV DX, LED_SELECT
03E3 EE                    836             OUT DX, AL
                           837             
03E4 32FF                  838             XOR BH,BH
03E6 8A4750                839             MOV AL, DS:LED_BUFFER[BX]
03E9 BA8001                840             MOV DX, LED_OUTPUT
03EC EE                    841             OUT DX,AL
                           842     
03ED B9C800                843             MOV CX, 200
03F0                       844     SUSTAIN:        
                           845             
03F0 90                    846             NOP
03F1 E2FD                  847             LOOP SUSTAIN
                           848             
                           849     ; CLEAR THE FUCKER
03F3 B000                  850             MOV AL, 0H
03F5 BA8001                851             MOV DX, LED_OUTPUT
03F8 EE                    852             OUT DX, AL
                           853             
03F9 A05600                854             MOV AL, DS:CUR_LED
03FC 3C05                  855             CMP AL, 5
03FE 7D07                  856             JGE RESTORE
0400 FE065600              857             INC DS:CUR_LED
0404 EB0690                858             JMP EXIT
0407                       859     RESTORE:
0407 32C0                  860             XOR AL,AL
0409 A25600                861             MOV DS:CUR_LED, AL
                           862             
040C                       863     EXIT:
040C 5A                    864             POP DX
040D 59                    865             POP CX
040E 5B                    866             POP BX
040F 58                    867             POP AX
0410 CB                    868             RET
                           869     
                           870     DISPLAY_LED ENDP
                           871     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE   19


LOC  OBJ                  LINE     SOURCE

0411                       872     DISPLAY_PRICE_LED PROC FAR
0411 50                    873             PUSH AX
0412 53                    874             PUSH BX
0413 51                    875             PUSH CX
0414 52                    876             PUSH DX
0415 B90600                877             MOV CX, PRICE_LEN
0418 BB0000                878             MOV BX,0
                           879      
041B                       880     LOOP_DISP_LED:
041B 8A477D                881             MOV AL, DS:CUR_PRICE[BX]
041E 2C30                  882             SUB AL,48
0420 9AA704----     R      883             CALL FAR PTR BCD_TO_7SEG
0425 884750                884             MOV DS:LED_BUFFER[BX], AL
0428 43                    885             INC BX
0429 E2F0                  886             LOOP LOOP_DISP_LED
                           887             
                           888             
042B 5A                    889             POP DX
042C 59                    890             POP CX
042D 5B                    891             POP BX
042E 58                    892             POP AX
042F CB                    893             RET
                           894     DISPLAY_PRICE_LED ENDP
0430                       895     ADD_LED_BUFFER  PROC    FAR
0430 50                    896             PUSH AX
0431 53                    897             PUSH BX
0432 51                    898             PUSH CX
0433 52                    899             PUSH DX
0434 A05D00                900             MOV AL, DS:LED_CURSOR
0437 3C06                  901             CMP AL, 06
0439 7C08                  902             JL INCREMENT
043B 32C0                  903             XOR AL, AL
043D A25D00                904             MOV DS:LED_CURSOR,AL
0440 EB0590                905             JMP DONE_INC
0443                       906     INCREMENT:
                           907             ;MOV AL, DS:KBD_INPUT
                           908             ;CMP AL, '*'
                           909             ;JNE DONE_INC
0443 FE065D00              910             INC DS:LED_CURSOR
                           911             ;JMP ENDING
0447                       912     DONE_INC:       
0447 8A1E5B00              913             MOV BL, DS:KBD_INPUT
                           914             ;CONVERT ASCII TO NUMBER
                           915             
044B 80EB30                916             SUB BL, 48
044E 32FF                  917             XOR BH, BH
0450 8A4746                918             MOV AL, DS:BCD[BX]
0453 8A1E5D00              919             MOV BL, DS:LED_CURSOR
0457 32FF                  920             XOR BH,BH
0459 884750                921             MOV DS:LED_BUFFER[BX],AL
045C                       922     ENDING: 
045C 5A                    923             POP DX
045D 59                    924             POP CX
045E 5B                    925             POP BX
045F 58                    926             POP AX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE   20


LOC  OBJ                  LINE     SOURCE

0460 CB                    927             RET
                           928     ADD_LED_BUFFER  ENDP
                           929     
0461                       930     CLEAR_LED       PROC    FAR
0461 50                    931             PUSH AX
0462 53                    932             PUSH BX
0463 51                    933             PUSH CX
                           934             ;; LEDS DISPLAY -
0464 B07F                  935             MOV AL, 07fH
0466 33DB                  936             XOR BX, BX
0468 B90600                937             MOV CX, 06
046B                       938     CLEAR_START:
046B 884750                939             MOV DS:LED_BUFFER[BX], AL
046E 43                    940             INC BX
046F E2FA                  941             LOOP CLEAR_START
                           942     
0471 59                    943             POP CX
0472 5B                    944             POP BX
0473 58                    945             POP AX
0474 CB                    946             RET
                           947     CLEAR_LED       ENDP
                           948     
0475                       949     MAKE_PACKET     PROC    FAR
0475 50                    950             PUSH AX
0476 53                    951             PUSH BX
0477 51                    952             PUSH CX
0478 52                    953             PUSH DX
0479 56                    954             PUSH SI
047A B90800                955             MOV CX,BARCODE_LEN
047D 32FF                  956             XOR BH,BH
047F B301                  957             MOV BL, 01
0481 BE0000                958             MOV SI,0
0484                       959     BARCODE_LOOP:
0484 8A84FA00              960             MOV AL, DS:BARCODE_BUFFER[SI]
0488 884762                961             MOV DS:BARCODE[BX],AL
048B 43                    962             INC BX
048C 46                    963             INC SI
048D E2F5                  964             LOOP BARCODE_LOOP
                           965             
048F 43                    966             INC BX
                           967             ; FOR : BETWEEN BARCODE & PRICE
                           968             
0490 B90400                969             MOV CX, QUANTITY_LEN
0493 BE0000                970             MOV SI,0
0496                       971     QUANTITY_LOOP:
0496 8A842D01              972             MOV AL, DS:QUANTITY_BUFFER[SI]
049A 884762                973             MOV DS:BARCODE[BX],AL
049D 43                    974             INC BX
049E 46                    975             INC SI
049F E2F5                  976             LOOP QUANTITY_LOOP
                           977     
04A1 5E                    978             POP SI
04A2 5A                    979             POP DX
04A3 59                    980             POP CX
04A4 5B                    981             POP BX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE   21


LOC  OBJ                  LINE     SOURCE

04A5 58                    982             POP AX
04A6 CB                    983             RET
                           984     MAKE_PACKET     ENDP
                           985             
                           986     
                           987     ;EXPECTS A 4BIT BCD DIGIT IN AL. RETURNS THE 7SEG CODE IN AL FOR THAT DIGIT     
04A7                       988     BCD_TO_7SEG     PROC    FAR
04A7 53                    989             PUSH BX
                           990     
                           991             ;; STORE AL TEMPORARILY IN BL
04A8 8AD8                  992             MOV BL,AL
                           993             
04AA 32FF                  994             XOR BH,BH
                           995             ;; GET THE BLTH INDEX OF THE BCD ARRAY IN DATA_SEG
04AC 8A4746                996             MOV AL,DS:BCD[BX]
04AF 5B                    997             POP BX
04B0 CB                    998             RET
                           999     BCD_TO_7SEG     ENDP    
                          1000     
04B1                      1001     PRINT_BARCODE_BUFFER PROC FAR
04B1 50                   1002             PUSH AX
04B2 53                   1003             PUSH BX
04B3 51                   1004             PUSH CX
04B4 B055                 1005             MOV AL, 'U'
04B6 9A0000----     E     1006             CALL FAR PTR PRINT_CHAR
04BB B90800               1007             MOV CX, BARCODE_LEN
04BE BB0000               1008             MOV BX,0
04C1                      1009     LOOP_BB:
04C1 8A87FA00             1010             MOV AL, DS:BARCODE_BUFFER[BX]
04C5 9A0000----     E     1011             CALL FAR PTR PRINT_CHAR
04CA 43                   1012             INC BX
04CB E2F4                 1013             LOOP LOOP_BB
                          1014     
04CD 59                   1015             POP CX
04CE 5B                   1016             POP BX
04CF 58                   1017             POP AX
04D0 CB                   1018             RET
                          1019     PRINT_BARCODE_BUFFER ENDP
                          1020     
04D1                      1021     SOUND_OUTPUT_CALLBACK   PROC FAR
04D1 50                   1022             PUSH    AX
04D2 1E                   1023             PUSH    DS
04D3 53                   1024             PUSH    BX
04D4 51                   1025             PUSH    CX
04D5 52                   1026             PUSH    DX
04D6 56                   1027             PUSH    SI
04D7 57                   1028             PUSH    DI
04D8 B8----         R     1029                     MOV AX, DATA_SEG
04DB 8ED8                 1030                     MOV DS, AX
                          1031     
                          1032             ;T_NEXT1:
04DD 833E920000           1033                     CMP SOUND_OFFSET, 0
04E2 7514                 1034                     JNE PLAY
04E4 A0F900               1035                     MOV AL, DS:SOUND_INPUT_SEEK
04E7 32E4                 1036                     XOR AH,AH
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE   22


LOC  OBJ                  LINE     SOURCE

04E9 8BF0                 1037                     MOV SI, AX      
04EB 8B9CD500             1038                     MOV BX, SOUND_INPUT[SI]
                          1039                     ;SUB BX,48
                          1040                     ;mov bx,18
04EF 03DB                 1041                     ADD BX, BX
                          1042                     
04F1 8B879500             1043                     MOV AX,DS:SOUND_BASE_ADDR[BX]
04F5 A39200               1044                     MOV DS:SOUND_OFFSET,AX
                          1045                     
                          1046                     
                          1047                     
04F8                      1048             PLAY:   
                          1049     
                          1050                     
04F8 8A1EF900             1051                     MOV BL, DS:SOUND_INPUT_SEEK
04FC 32FF                 1052                     XOR BH, BH
04FE 8B9FD500             1053                     MOV BX, DS:SOUND_INPUT[BX]
0502 03DB                 1054                     ADD BX, BX
                          1055                     
0504 8B8FB500             1056                     mov cx, endsize[bx]
                          1057                     
0508 8306920001           1058                     ADD SOUND_OFFSET, 1
050D 390E9200             1059                     CMP SOUND_OFFSET, cx
0511 7527                 1060                     JNE SKIP
                          1061                     
0513 FE06F900             1062                     INC DS:SOUND_INPUT_SEEK
0517 FE06F900             1063                     INC DS:SOUND_INPUT_SEEK
051B A0F900               1064                     MOV AL, SOUND_INPUT_SEEK
051E 3C24                 1065                     CMP AL, SOUND_INPUT_LEN
0520 7C05                 1066                     JL RESET_BASE_ADDR
0522 C606F90000           1067                     MOV DS:SOUND_INPUT_SEEK, 0
0527                      1068             RESET_BASE_ADDR:        
                          1069                     
0527 8A1EF900             1070                     MOV BL, DS:SOUND_INPUT_SEEK
052B 32FF                 1071                     XOR BH,BH
                          1072                     ; SOUND i BLOODY WNAT TO PLAY
052D 8B9FD500             1073                     MOV BX, SOUND_INPUT[BX]
0531 03DB                 1074                     ADD BX,BX
                          1075                     ; THE BLOODY OFFSET ADDR OF THAT SOUND
0533 8B879500             1076                     MOV AX, DS:SOUND_BASE_ADDR[BX]
0537 A39200               1077                     MOV DS:SOUND_OFFSET, AX
                          1078                     ;ADD SOUND_SEGNUM, 1
053A                      1079             SKIP:
053A 8B369200             1080                     MOV SI, SOUND_OFFSET
                          1081                     
                          1082                     ;MOV AX, SOUND_SEGNUM
053E B80080               1083                     MOV AX, 8000H
0541 8ED8                 1084                     MOV DS, AX
                          1085                     
                          1086                     ;MOV AX, SI
0543 8A04                 1087                     MOV AL, DS:[SI]
0545 BA0002               1088                     MOV DX, PCS4
0548 EE                   1089                     OUT DX, AL
                          1090                     
                          1091                     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    02:26:25  12/01/;2  PAGE   23


LOC  OBJ                  LINE     SOURCE

                          1092     
                          1093                     
0549                      1094             EXIT_SOUND:     
0549 5F                   1095             POP DI
054A 5E                   1096             POP SI
054B 5A                   1097             POP DX
054C 59                   1098             POP CX
054D 5B                   1099             POP BX
054E 1F                   1100             POP DS
054F 58                   1101             POP AX
0550 CB                   1102             RET
                          1103     
                          1104     SOUND_OUTPUT_CALLBACK ENDP
----                      1105     CODE_SEG        ENDS
                          1106     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
