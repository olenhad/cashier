8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE TIMER
OBJECT MODULE PLACED IN KSN.OBJ
ASSEMBLER INVOKED BY:  F:\ASM86.EXE KSN.ASM


LOC  OBJ                  LINE     SOURCE

                             1 +1  $MOD186
                             2 +1  $EP
                             3     NAME TIMER
                             4     ; Main program for uPD70208 microcomputer system
                             5     ;
                             6     ; US, WE WROTE IT BITCHES! hey Colin, TTT, and uncle! ;)
                             7     ; =========================================================================
                             8     ; 1 KEYBOARD VERSION (TESTING ONLY)
                             9     public  serial_rec_action, timer2_action
                            10     extrn   print_char:far, print_2hex:far, iodefine:far
                            11     extrn   set_timer2:far
  0080                      12     PORTA           equ 080h
  0081                      13     PORTB           EQU 081H
  0082                      14     PORTC           EQU 082H
  0083                      15     CWR             EQU 083H
  0100                      16     LED_SELECT      EQU     0100H
  0180                      17     LED_OUTPUT      EQU     0180H 
  FFA4                      18     PCSBA           EQU    0FFA4H ; Peripheral Chip Select Base Address
  FFA8                      19     MPCS            EQU    0FFA8H ; MMCS and PCS Alter Control Register
  000B                      20     KBD_BUFFER_LEN  EQU             11
  0009                      21     KBD_BUFFER_LEN2 EQU             9
  0001                      22     KBD_NEW EQU 01H
  0002                      23     KBD_STALE       EQU     02H
                            24     
  0008                      25     BARCODE_LEN     EQU     08
  0004                      26     QUANTITY_LEN    EQU     04
  0000                      27     NET_READY EQU 0
  0001                      28     NET_PREADDR_BUFFERING EQU 1
  0002                      29     NET_ADDR_RECIEVING EQU 2
  0003                      30     NET_SELECTED EQU 3
  0004                      31     NET_BUFFERING EQU 4
  0002                      32     ADDR_LEN EQU 2
  004E                      33     NACK    EQU     'N'
  0060                      34     NET_PREADDR_CHAR EQU '`'
  0003                      35     NET_PREADDR_LEN  EQU 3
  000F                      36     NET_PAYLOAD_LEN  EQU 15
                            37             ;; PRICE_LEN NEEDS TO TAKE ACCOUNT OF . 
  0006                      38     PRICE_LEN EQU 6
  0001                      39     PRICE_NEW EQU 01
  0002                      40     PRICE_STALE EQU 02
  0000                      41     CASHIER_READY EQU 0
  0001                      42     CASHIER_START_TRANSACTION EQU 1
  0002                      43     CASHIER_RECV_BARCODE EQU 2
  0004                      44     CASHIER_RECV_QUANTITY  EQU 4
  0005                      45     CASHIER_GET_PRICE       EQU 5
  0006                      46     CASHIER_DISPLAY_PRICE   EQU 6
  0007                      47     CASHIER_EOT_PROMPT      EQU 7
  0008                      48     CASHIER_EOT     EQU     8
                            49     
----                        50     STACK_SEG       SEGMENT
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE    2


LOC  OBJ                  LINE     SOURCE

0000 (256                   51                     DB      256 DUP(?)
     ??
     )
0100                        52             TOS     LABEL   WORD
----                        53     STACK_SEG       ENDS
                            54     
                            55     
----                        56     DATA_SEG        SEGMENT
                            57     
0000 00                     58             CASHIER_STATE   DB      CASHIER_READY
0001 0A                     59             TIMER0_MESS     DB      10,13,'TIMER2 INTERRUPT    '
0002 0D
0003 54494D45523220
     494E5445525255
     505420202020
0017 2F                     60             T_COUNT         DB      2FH
0018 2F                     61             T_COUNT_SET     DB      2FH
0019 0A                     62             REC_MESS        DB      10,13,'Period of timer0 = '  
001A 0D
001B 506572696F6420
     6F662074696D65
     7230203D20
002E 31                     63             array       DB      '1','2','3','4','5','6','7','8','9','*','0','#'
002F 32
0030 33
0031 34
0032 35
0033 36
0034 37
0035 38
0036 39
0037 2A
0038 30
0039 23
003A 41                     64             ARRAY2      DB      'A','B','C','D','E','F','G','H','I','J','K','L' 
003B 42
003C 43
003D 44
003E 45
003F 46
0040 47
0041 48
0042 49
0043 4A
0044 4B
0045 4C
0046 3F                     65             BCD         DB  3FH,06H,5BH,4FH,66H,6DH,7DH,07H,7FH,06FH
0047 06
0048 5B
0049 4F
004A 66
004B 6D
004C 7D
004D 07
004E 7F
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE    3


LOC  OBJ                  LINE     SOURCE

004F 6F
0050 3F                     66             LED_BUFFER      DB      3fh,06h,5bh,4fh,66h,6dh
0051 06
0052 5B
0053 4F
0054 66
0055 6D
0056 00                     67             CUR_LED         DB      0H
0057 3412                   68             DISPLAY_NUM     DW      1234H
                            69                     
0059 00                     70             KBD_ROW_COUNTER DB      0H
                            71             ;USED TO OUTPUT TO KBD
005A 00                     72             KBD_OUTPUT      DB      0H
                            73             
                            74             ; CONTAINS KEYBOARD INPUT ASCII CHARS
005B 00                     75             KBD_INPUT       DB      0H
005C 02                     76             KBD_LATCH       DB      KBD_STALE
005D 00                     77             LED_CURSOR      DB      0H
005E 00                     78             KBD_ROW_COUNTER2 DB     0H
005F 00                     79             KBD_OUTPUT2      DB     0H
0060 00                     80             KBD_INPUT2      DB      0H
                            81         
                            82             
                            83     ;=========================================================================
                            84     ;Port B of the 8255 is used as the input port for the keybad
                            85     ;Port C is used as the output and grounds the rows one by one
                            86     ;=========================================================================
                            87             ;; THIS IS  THE PACKET TRANSMITTED. SET LENGTH IN NET_PAYLOAD_LEN
0061 21313832343333         88             BARCODE     DB  '!18243337:0012#'
     33373A30303132
     23
                            89             
0070 0A                     90             RECV_MESS       DB      10,13,'PRICE RECV'
0071 0D
0072 50524943452052
     454356
007C (8                     91             CUR_PRICE       DB      8 DUP(?)
     ??
     )
0084 02                     92             CUR_PRICE_LATCH DB      PRICE_STALE
0085 00                     93             CUR_INDEX       DB      0
0086 00                     94             NET_STATE       DB      0
0087 6261                   95             ADDRESS         DW      'ab'
0089 00                     96             ADDR_INCOM_COUNT      DB      0
008A 00                     97             ADDR_COUNT      DB      0
008B (4                     98             ADDR_BUFFER     DB      4 DUP(?)
     ??
     )
                            99             
                           100             ;; network state machine:
                           101             ;; READY
                           102             ;;  |
                           103             ;; ` -> NET_PREADDR_BUFFERING
                           104             ;; ``` -> NET_ADDR_RECIEVING (A)
                           105             ;; 0023H
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE    4


LOC  OBJ                  LINE     SOURCE

                           106             ;;      |
                           107             ;;     /  \
                           108             ;; myaddr?  return READY + NACK
                           109             ;;   |
                           110             ;;  NET_SELECTED (transmit BARCODE+ Quantity)
                           111             ;;   |
                           112             ;;  NET_BUFFERING -> '1'*PRICE_LEN -> CUR_PRICE UPDATED ->ACK CUR_PRICE
                           113             ;; return READY
008F (50                   114             BARCODE_BUFFER  DB      50 DUP(?)
     ??
     )
00C1 00                    115             BARCODE_SEEK    DB      0H
00C2 (10                   116             QUANTITY_BUFFER DB      10 DUP(?)
     ??
     )
00CC 00                    117             QUANTITY_SEEK   DB      0H
00CD 00                    118             KBD_BUFFER_SEEK DB      0H
00CE 00                    119             KBD_BUFFER_SEEK2  DB      0H
00CF (30                   120             KBD_BUFFER2     DB      30 DUP(?)
     ??
     )
00ED (30                   121             KBD_BUFFER      DB      30 DUP(?)
     ??
     )
                           122     
                           123             
                           124             
----                       125     DATA_SEG        ENDS
                           126     
                           127     
----                       128     CODE_SEG        SEGMENT
                           129     
                           130             PUBLIC          START
                           131     
                           132     ASSUME  CS:CODE_SEG, SS:STACK_SEG, DS:DATA_SEG
                           133     
0000                       134     START:
                           135      ; Initialize MPCS to MAP peripheral to IO address
0000 BAA8FF                136              MOV DX, MPCS
0003 B88300                137              MOV AX, 0083H
0006 EE                    138              OUT DX, AL
                           139     ; PCSBA initial, set the serial port start from 00H
0007 BAA4FF                140              MOV DX, PCSBA
000A B80300                141              MOV AX, 0003H ; Peripheral starting address 00H no READY, No Waits
000D EE                    142              OUT DX, AL
                           143     
                           144     ;initialize stack area
000E B8----         R      145                     MOV     AX,STACK_SEG            
0011 8ED0                  146                     MOV     SS,AX
0013 368B260001            147                     MOV     SP,TOS
                           148     ;Initialise data segment
0018 B8----         R      149                     MOV AX,DATA_SEG
001B 8ED8                  150                     MOV DS,AX
                           151     
                           152     ; Initialize the on-chip pheripherals
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE    5


LOC  OBJ                  LINE     SOURCE

001D 9A0000----     E      153                     CALL FAR PTR IODEFINE
                           154                     
                           155     
                           156     
                           157     ; ^^^^^^^^^^^^^^^^^  Start of User Main Routine  ^^^^^^^^^^^^^^^^^^
                           158        
0022 B082                  159     MOV AL, 82H       ;mode 0, A - out, B-in ;changed value of CW from 82H
0024 BA8300                160                     MOV DX, CWR
0027 EE                    161                     OUT DX, AL      ;send the control word
0028 B300                  162                     MOV BL, 00H     ;initialize BL for key code
002A 33C0                  163                     XOR AX, AX      ;clear ax flags
002C BA8200                164                     MOV DX, PORTC  ;port C address to DX
002F EE                    165                     OUT DX, AL      ;ground all rows
                           166                     
                           167     
                           168     
                           169        
                           170     ;code
0030 9A0000----     E      171      call set_timer2
0035 FB                    172                     STI
                           173     
0036                       174     NEXT:
                           175            ; MOV AX,DS:DISPLAY_NUM
                           176             
                           177             ;INC DS:CUR_LED
                           178             ;CALL FAR PTR KEYBOARD2
0036 9A2B02----     R      179             CALL FAR PTR KEYBOARD
003B 9AF002----     R      180             call far ptr keyboard2
0040 9A4700----     R      181             CALL FAR PTR CASHIER_STATE_M 
                           182             
                           183             
0045 EBEF                  184      JMP NEXT
                           185     
                           186     ; ^^^^^^^^^^^^^^^ End of User main routine ^^^^^^^^^^^^^^^^^^^^^^^^^
                           187     
  0041                     188     TRIGGER_START_T EQU     'A'
  0044                     189     TRIGGER_BARCODE EQU 'D'
  0045                     190     TRIGGER_QUANTITY EQU    'E'
0047                       191     CASHIER_STATE_M         PROC    FAR
0047 50                    192             PUSH AX
0048 53                    193             PUSH BX
0049 51                    194             PUSH CX
004A 52                    195             PUSH DX
004B A00000                196             MOV AL, DS:CASHIER_STATE
004E 3C00                  197             CMP AL, CASHIER_READY
0050 7420                  198             JE C_READY_HANDLE
                           199             
0052 3C01                  200             CMP AL, CASHIER_START_TRANSACTION
0054 742E                  201                     JE C_START_T_HANDLE
                           202             
0056 3C02                  203             CMP AL, CASHIER_RECV_BARCODE
0058 7443                  204                     JE C_RECV_BARCODE
                           205     
005A 3C04                  206             CMP AL, CASHIER_RECV_QUANTITY
005C 7411                  207                      JE HACKY_RECV_QUANTITY      
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE    6


LOC  OBJ                  LINE     SOURCE

                           208     
005E 3C05                  209             CMP AL, CASHIER_GET_PRICE
0060 7407                  210                      JE HACKY_GET_PRICE
                           211     
0062 3C06                  212             CMP AL, CASHIER_DISPLAY_PRICE
0064 7406                  213             JE HACKY_DISP_PRICE
                           214             
0066 E9C200                215             JMP EXIT_CASHIER_STATE
0069                       216     HACKY_GET_PRICE:
0069 E9AB00                217             JMP C_GET_PRICE
006C                       218     HACKY_DISP_PRICE:
006C E9B700                219             JMP C_DISP_PRICE
006F                       220     HACKY_RECV_QUANTITY:
006F EB6990                221             JMP C_RECV_QUANTITY
0072                       222     C_READY_HANDLE:
                           223             ;;      mov bl, ds:kbd_latch
                           224             ;;         cmp bl, kbd_new
                           225             ;;         jne hacky_ready
                           226     
                           227             ;;         mov ds:kbd_latch, kbd_stale 
0072 A06000                228             mov al, ds:kbd_input2
0075 3C41                  229             CMP AL, 'A'
0077 7508                  230             JNE HACKY_READY
0079 B001                  231             MOV AL, CASHIER_START_TRANSACTION
007B A20000                232             MOV DS:CASHIER_STATE, AL
                           233            
                           234            
007E E9AA00                235             JMP EXIT_CASHIER_STATE
                           236     
0081                       237     HACKY_READY:
                           238             
0081 E9A700                239             JMP EXIT_CASHIER_STATE
0084                       240     C_START_T_HANDLE:
0084 9A5F04----     R      241             CALL FAR PTR CLEAR_LED
0089 B002                  242             MOV AL, CASHIER_RECV_BARCODE
008B A20000                243             MOV DS:CASHIER_STATE, AL
                           244             
008E C6065D0000            245             MOV DS:LED_CURSOR, 0H
0093 B073                  246             MOV AL,'s'
0095 9A0000----     E      247             CALL FAR PTR PRINT_CHAR
                           248             
009A E98E00                249             JMP EXIT_CASHIER_STATE
                           250                     
009D                       251     C_RECV_BARCODE:
                           252             
009D A06000                253              MOV AL, DS:KBD_INPUT2
00A0 3C44                  254             CMP AL, TRIGGER_BARCODE
00A2 7429                  255             JE UPDATE_B_STATE
                           256     
00A4 A05C00                257             MOV AL, DS:KBD_LATCH
                           258       
00A7 3C01                  259             CMP AL, KBD_NEW
00A9 752C                  260             JNE EXIT_RECV_BARCODE
                           261             
00AB B063                  262             mov al, 'c'
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE    7


LOC  OBJ                  LINE     SOURCE

00AD 9A0000----     E      263             call far ptr print_char
                           264             
                           265             ;; ======== ADD TO BARCODE_BUFFER
00B2 A05B00                266             MOV AL, DS:KBD_INPUT
00B5 8A1EC100              267             MOV BL, DS:BARCODE_SEEK
00B9 32FF                  268             XOR BH, BH
00BB 88878F00              269             MOV DS:BARCODE_BUFFER[BX],AL
00BF FEC3                  270             INC BL
                           271     
                           272     
                           273          
00C1 881EC100              274             MOV DS:BARCODE_SEEK, BL
00C5 C6065C0002            275             MOV DS:KBD_LATCH, KBD_STALE
                           276     
                           277             
                           278             
00CA EB0B90                279             JMP EXIT_RECV_BARCODE
                           280             
                           281             
00CD                       282     UPDATE_B_STATE:
00CD C606000004            283             MOV DS:CASHIER_STATE, CASHIER_RECV_QUANTITY
00D2 9AAF04----     R      284                call far ptr PRINT_BARCODE_BUFFER 
                           285             
00D7                       286     EXIT_RECV_BARCODE:
00D7 EB5290                287             JMP EXIT_CASHIER_STATE
                           288     
00DA                       289     C_RECV_QUANTITY:
00DA A06000                290             MOV AL,DS:KBD_INPUT2
                           291             ;; HERE TRIGGER_BARCODE IS BEING USED FOR THE QUANTITY
00DD 3C45                  292             CMP AL,TRIGGER_QUANTITY
00DF 7429                  293             JE UPDATE_C_STATE
                           294     
00E1 A05C00                295             MOV  AL,DS:KBD_LATCH
00E4 3C01                  296             CMP AL,KBD_NEW
00E6 752C                  297             JNE EXIT_RECV_QUANTITY
00E8 B071                  298             mov al, 'q'
00EA 9A0000----     E      299             call far ptr print_char
                           300             
00EF A05B00                301             MOV AL,DS:KBD_INPUT
00F2 8A1ECC00              302             MOV BL,DS:QUANTITY_SEEK
00F6 32FF                  303             XOR BH,BH
00F8 8887C200              304             MOV DS:QUANTITY_BUFFER[BX],AL
00FC FEC3                  305             INC BL
00FE 881ECC00              306             MOV DS:QUANTITY_SEEK,BL
0102 C6065C0002            307             MOV DS:KBD_LATCH,KBD_STALE
0107 EB0B90                308             JMP EXIT_RECV_QUANTITY
                           309             
010A                       310     UPDATE_C_STATE:
                           311     ;;; REMEMBER TO MAKE INTO A PACKET
010A 9A7304----     R      312                      CALL FAR PTR MAKE_PACKET
010F C606000005            313                  MOV DS:CASHIER_STATE,CASHIER_GET_PRICE
0114                       314     EXIT_RECV_QUANTITY:
0114 EB1590                315             JMP EXIT_CASHIER_STATE          
                           316             
0117                       317     C_GET_PRICE:
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE    8


LOC  OBJ                  LINE     SOURCE

0117 A08400                318             MOV AL, DS:CUR_PRICE_LATCH
011A 3C01                  319             CMP AL, PRICE_NEW
011C 7505                  320             JNE EXIT_GET_PRICE
011E C606000006            321             MOV DS:CASHIER_STATE, CASHIER_DISPLAY_PRICE
                           322     
                           323           
                           324     
0123                       325     EXIT_GET_PRICE:
0123 EB0690                326             JMP EXIT_CASHIER_STATE
                           327     
0126                       328     C_DISP_PRICE:
0126 9A0F04----     R      329             CALL FAR PTR DISPLAY_PRICE_LED
                           330             ;;         MOV DS:CASHIER_STATE, CASHIER_READY
012B                       331     EXIT_CASHIER_STATE:
012B 5A                    332             POP DX
012C 59                    333             POP CX
012D 5B                    334             POP BX
012E 58                    335             POP AX
012F CB                    336             RET
                           337             
                           338     CASHIER_STATE_M         ENDP
                           339     
0130                       340     SERIAL_REC_ACTION       PROC    FAR
0130 51                    341                     PUSH    CX
0131 53                    342                     PUSH    BX
0132 1E                    343                     PUSH    DS
                           344     
0133 BB----         R      345                     MOV     BX,DATA_SEG             ;initialize data segment register
0136 8EDB                  346                     MOV     DS,BX
0138 8A1E8600              347                     MOV BL, DS:NET_STATE
013C 80FB01                348                     CMP BL, NET_PREADDR_BUFFERING
013F 7449                  349                     JZ ADDR_BUFFERING
0141 80FB02                350                     CMP BL, NET_ADDR_RECIEVING
0144 745C                  351                     JZ ADDR_RECIEVING
0146 80FB04                352                     CMP BL, NET_BUFFERING
0149 740C                  353                     JZ CALL_BUFFERING
014B 80FB03                354                     CMP BL, NET_SELECTED
014E 740F                  355                     JZ SELECTED
                           356             ;; 
0150 3C60                  357                     CMP AL, NET_PREADDR_CHAR
0152 7436                  358                     JZ ADDR_BUFFERING
                           359     
                           360             
0154 E99100                361                     JMP     S_RET
                           362             
                           363             ;;      JNE     WRONG_ADDRESS
                           364     ;               IF POLL IS SELECTING DS:ADDRESS, TRANSMIT THE BARCODE
0157                       365     CALL_BUFFERING:
0157 9AEC01----     R      366                     CALL FAR PTR DATA_BUFFERING
015C E98900                367                     JMP S_RET
015F                       368     SELECTED:
                           369             ;; starts sending the barcode and quantity
                           370             ;;                      MOV AL, DS:CASHIER_STATE
                           371             ;;                      CMP AL, CASHIER_GET_PRICE
                           372                     ;; dON'T TRANSMIT ANYTHING UNLESS STATE IS GET_PRICE
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE    9


LOC  OBJ                  LINE     SOURCE

                           373             ;;                      JNE NOT_READY   
                           374             
015F B90F00                375                     MOV CX, NET_PAYLOAD_LEN
0162 BB0000                376                     MOV BX, 0
0165                       377     START_TRANSMIT:         
0165 8A4761                378                     MOV AL,DS:BARCODE[BX]
0168 9A0000----     E      379                     CALL FAR PTR PRINT_CHAR
016D 43                    380                     INC BX
016E E2F5                  381                     LOOP    START_TRANSMIT
                           382             ;; change state to recieving
0170 C606860004            383                     MOV DS:NET_STATE, NET_BUFFERING
0175 EB7190                384                     JMP     S_RET
0178                       385     NOT_READY:
0178 B04E                  386                     MOV AL, NACK
017A 9A0000----     E      387                     CALL FAR PTR PRINT_CHAR
017F EB6790                388                     JMP S_RET
0182                       389     WRONG_ADDRESS:          
0182 9A0000----     E      390                     CALL FAR PTR PRINT_CHAR
0187 EB5F90                391                     JMP S_RET
                           392      
018A                       393     ADDR_BUFFERING:
                           394             ;; buffers the incoming addr char '`' as by protocol
018A FE068900              395                     INC DS:ADDR_INCOM_COUNT
018E A08900                396                     MOV AL, DS:ADDR_INCOM_COUNT
0191 3C03                  397                     CMP AL,NET_PREADDR_LEN
0193 750A                  398                     JNE SKIP_UPDATE
0195 C606860002            399                     MOV DS:NET_STATE, NET_ADDR_RECIEVING
019A B000                  400                     MOV AL, 0
019C A28900                401                     MOV DS:ADDR_INCOM_COUNT, AL
019F                       402     SKIP_UPDATE:    
019F EB4790                403                     JMP S_RET
                           404             
01A2                       405     ADDR_RECIEVING:
                           406             ;; recives the address being broadcasted. address is only 2 bytes
01A2 8A1E8A00              407                     MOV BL, DS:ADDR_COUNT
01A6 32FF                  408                     XOR BH, BH
01A8 88878B00              409                     MOV DS:ADDR_BUFFER[BX], AL
01AC FE068A00              410                     INC DS:ADDR_COUNT
01B0 A08A00                411                     MOV AL, DS:ADDR_COUNT
01B3 3C02                  412                     CMP AL,ADDR_LEN
01B5 7D03                  413                     JGE ADDR_DONE
01B7 EB2F90                414                     JMP S_RET
01BA                       415     ADDR_DONE:
01BA 8A268B00              416                     MOV AH,DS:ADDR_BUFFER
01BE A08C00                417                     MOV AL,DS:ADDR_BUFFER[1]
01C1 3B068700              418                     CMP AX,DS:ADDRESS
01C5 7414                  419                     JE ISMYADDR
                           420             ;; FOR DEV PURPOSES ONLY
01C7 B04E                  421                     MOV AL, NACK
01C9 9A0000----     E      422                     CALL FAR PTR PRINT_CHAR
                           423             ;; RESET STATE TO READY SINCE NOT MY ADDR
01CE B000                  424                     MOV AL, NET_READY
01D0 A28600                425                     MOV DS:NET_STATE, AL
01D3 32C0                  426                     XOR AL,AL
01D5 A28A00                427                     MOV DS:ADDR_COUNT, AL
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE   10


LOC  OBJ                  LINE     SOURCE

01D8 EB0E90                428                     JMP S_RET
01DB                       429     ISMYADDR:
                           430             ;; SET STATE TO SELECTED
01DB B003                  431                     MOV AL,NET_SELECTED
01DD A28600                432                     MOV DS:NET_STATE, AL
01E0 B000                  433                     MOV AL, 0
                           434             ;; RESET ADDR_COUNT
01E2 A28A00                435                     MOV DS:ADDR_COUNT, AL
01E5 E977FF                436                     JMP SELECTED
                           437     
01E8                       438     S_RET:
01E8 1F                    439                     POP     DS
01E9 5B                    440                     POP     BX
01EA 59                    441                     POP     CX
01EB CB                    442                     RET
                           443     SERIAL_REC_ACTION       ENDP
                           444     
                           445     
01EC                       446     DATA_BUFFERING  PROC    FAR
                           447             
01EC 50                    448                     PUSH AX
01ED 53                    449                     PUSH BX
                           450             
01EE 8A1E8500              451                     MOV BL, DS:CUR_INDEX
01F2 32FF                  452                     XOR BH,BH
01F4 88477C                453                     MOV DS:CUR_PRICE[BX], AL
                           454                     
01F7 FEC3                  455                     INC BL
01F9 80FB06                456                     CMP BL, PRICE_LEN
01FC 7D07                  457                     JGE BUFFER_END
01FE 881E8500              458                     MOV DS:CUR_INDEX, BL
0202 EB2490                459                     JMP ESCAPE_PROC 
0205                       460     BUFFER_END:
0205 B90600                461                     MOV CX,PRICE_LEN
0208 BB0000                462                     MOV BX, 0
020B 8A477C                463                     MOV AL, DS:CUR_PRICE[BX]
020E                       464     ACK_LOOP:
020E 8A477C                465                     MOV AL, DS:CUR_PRICE[BX]
0211 9A0000----     E      466                     CALL FAR PTR PRINT_CHAR
0216 43                    467                     INC BX
0217 E2F5                  468                     LOOP    ACK_LOOP
0219 C606840001            469                     MOV DS:CUR_PRICE_LATCH, PRICE_NEW
021E C606860000            470                     MOV DS:NET_STATE, NET_READY
0223 32C0                  471                     XOR AL,AL
0225 A28500                472                     MOV DS:CUR_INDEX, AL
0228                       473     ESCAPE_PROC:    
0228 5B                    474                     POP BX
0229 58                    475                     POP AX
022A CB                    476                     RET
                           477             
                           478     DATA_BUFFERING ENDP
                           479     
022B                       480     KEYBOARD PROC FAR
                           481     
022B 52                    482                     PUSH    DX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE   11


LOC  OBJ                  LINE     SOURCE

022C 51                    483                     PUSH    CX
022D 53                    484                     PUSH    BX
022E 50                    485                     PUSH    AX
                           486                     
                           487     
022F                       488     INIT:           
                           489                     
                           490                     
022F B17F                  491                     MOV CL, 07FH    ;STORES OUTPUT FOR ROW COUNTER;
                           492                     ;MOV AL,0FEH ; 1111 1110
0231 B500                  493                     MOV CH, 0H      ;set row counter
0233 882E5900              494                     MOV DS:KBD_ROW_COUNTER,CH
0237 880E5A00              495                     MOV DS:KBD_OUTPUT, CL
023B EB0490                496                     jmp next_row
023E                       497     hacky_stuff:
023E E99000                498                     jmp exit_kbd    
0241                       499     NEXT_ROW:
0241 A05900                500                     MOV AL,DS:KBD_ROW_COUNTER
                           501             
0244 3C04                  502                     CMP AL,04
0246 7DF6                  503                     JGE hacky_stuff
0248 8A0E5A00              504                     MOV CL,DS:KBD_OUTPUT 
024C D0C1                  505                     ROL CL, 01H       ;rotate AL to ground next row/ al HAS 8 BITS. so mu
                                   st JMP BACK TO WAIT
                           506     
                           507                     ;MOV CH, AL     ;save data byte to ground next row ;WAT?
024E 8AC1                  508                     MOV AL,CL
0250 BA8200                509                     MOV DX, PORTC   ;port C address to DX; 
0253 EE                    510                     OUT DX, AL      ;give positive logic to one of the rows
0254 A25A00                511                     MOV DS:KBD_OUTPUT, AL   
                           512             
0257 BA8100                513                     MOV DX, PORTB   ;port B address to DX  
025A EC                    514                     IN  AL,DX       ;read input port for key closure
                           515                     
                           516                     
                           517                     ;mov al,101b; change later
025B 2407                  518                     AND AL, 07H     ;Mask D4-D7
025D 3C07                  519                     CMP AL,07H
025F 7469                  520                     JE RETPOINT
                           521                     ;ERROR CHECK
0261 3C06                  522                     CMP AL,0110B
0263 740B                  523                     JE VALIDATED
0265 3C05                  524                     CMP AL,0101B
0267 7407                  525                     JE VALIDATED
0269 3C03                  526                     CMP AL,011B
026B 7403                  527                     JE VALIDATED
026D EB5B90                528                     JMP RETPOINT
                           529                     
0270                       530     VALIDATED:              
0270 9AD602----     R      531                     CALL FAR PTR KBD_PROCESS
                           532                     ;Bl CONTAINS iNDEX OF ARRAY WITH CURRENT KEY
                           533             ;; | SEEK==0 = ADD_TO_BUFFER
                           534             ;; | BUFFER[0]== aL = ADD_TO_BUFFER
                           535             ;; | ELSE = (ADD_TO_BUFFER) & (SEEK 0) AKA RESET
                           536                     ;JMP NUMBERS
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE   12


LOC  OBJ                  LINE     SOURCE

                           537     
0275                       538     NUMBERS:
0275 32FF                  539                     XOR BH, BH
0277 8A472E                540                     MOV AL,DS:array[BX] ; Stores character in AL (?)
027A 32E4                  541                     XOR AH,AH
                           542                     ;CALL   FAR PTR PRINT_CHAR
                           543                     ; Hack to fix the * from irritating
027C 3C2A                  544                     CMP AL, '*'
027E 7426                  545                     JE Debounce
0280 8A0ECD00              546             MOV CL, DS:KBD_BUFFER_SEEK
0284 80F900                547             CMP CL,0H
0287 740E                  548             JZ ADD_TO_BUFFER
                           549     
                           550             
0289 8A0EED00              551             MOV CL, KBD_BUFFER
                           552                     ;COMPARE WITH VALUE AT first
028D 3AC8                  553             CMP CL,AL
028F 7406                  554                     JZ  ADD_TO_BUFFER
                           555                     
0291 32C9                  556                     XOR CL,CL
0293 880ECD00              557                     MOV DS:KBD_BUFFER_SEEK, CL
                           558                                     
                           559     
0297                       560     ADD_TO_BUFFER:
                           561             ;;PUT AL INTO SI SO WE CAN PUT CURRENT CHAR IN THE BUFFER 
0297 32ED                  562                     XOR CH,CH
0299 8BF1                  563                     MOV SI,CX
029B 8884ED00              564                     MOV DS:KBD_BUFFER[SI],AL
029F FE06CD00              565                     INC DS:KBD_BUFFER_SEEK
                           566     
02A3 B98813                567                     mov cx, 5000
02A6                       568     Debounce:
02A6 90                    569                     nop
02A7 E2FD                  570                     loop debounce
02A9                       571     CHECKER_SEEK:
02A9 8A0ECD00              572                     MOV CL, DS:KBD_BUFFER_SEEK
02AD 80F90B                573                     CMP CL,KBD_BUFFER_LEN
                           574                     ;ADD CL,48
                           575                     ;MOV AL,CL
                           576                     ;CALL FAR PTR PRINT_CHAR
                           577                     
02B0 7518                  578                     JNE RETPOINT
                           579                     ;RESET KBD_BUFFER_SEEK
                           580                     ;AL CONTAINS CHAR
02B2 A25B00                581                     MOV DS:KBD_INPUT, AL
02B5 C6065C0001            582                     MOV DS:KBD_LATCH, KBD_NEW
02BA 9A0000----     E      583                     CALL    FAR PTR PRINT_CHAR
02BF 9A2E04----     R      584                     CALL FAR PTR ADD_LED_BUFFER
02C4 32C9                  585                     XOR CL,CL
                           586                     ;BUFFER_SEEK IS RESET
02C6 880ECD00              587                     MOV DS:KBD_BUFFER_SEEK, CL
02CA                       588     RETPOINT:       
02CA FE065900              589             INC DS:KBD_ROW_COUNTER
                           590             
02CE E970FF                591             JMP NEXT_ROW
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE   13


LOC  OBJ                  LINE     SOURCE

                           592                     
02D1                       593     exit_kbd:       
02D1 58                    594             POP AX
02D2 5B                    595             POP BX
02D3 59                    596             POP CX
02D4 5A                    597             POP DX
02D5 CB                    598             RET
                           599     KEYBOARD ENDP
                           600     
02D6                       601     KBD_PROCESS             PROC    FAR
02D6 50                    602                     push ax
02D7 52                    603                     push dx
                           604                     ;0000 0101 => 1111 1010 => 0000 0010  => 0 , 1, 10   
02D8 F6D0                  605                     NOT AL
02DA 2407                  606                     AND AL, 07H; MASK OTHER BLOODY BITS OMGOMGOMG
02DC D0E8                  607                     SHR AL,01 ; DIVIDE AL BY 2. TO GET COL NUMBER
02DE 8AD0                  608                     MOV DL,AL ; TEMP STORE AL IE PORTB INPUT AKA COL NUMBER
                           609                     
02E0 A05900                610                     mov Al,DS:KBD_ROW_COUNTER ; ROW COUNT MOVED TO AL
02E3 B603                  611                     MOV DH,03 ; TO MULTIPLY BY 3
                           612                     ;MULTIPLY THE FUCKER
02E5 F6E6                  613                     MUL DH
                           614                     ; RESULT IN AX
                           615                     
                           616                     
                           617                     ; NUMBER  <= 9 
02E7 02C2                  618                     ADD AL, DL ;ADD row*3 NO TO COL NUMBER
02E9 8AD8                  619                     MOV BL,AL
02EB 32FF                  620                     XOR BH,BH
                           621                     ;Bl CONTAINS iNDEX OF ARRAY WITH CURRENT KEY
                           622             ;; | SEEK==0 = ADD_TO_BUFFER
                           623             ;; | BUFFER[SEEK]== BL = ADD_TO_BUFFER
                           624             ;; | ELSE = (ADD_TO_BUFFER) & (SEEK 0) AKA RESET
                           625     
02ED 5A                    626                     pop dx
02EE 58                    627                     pop ax
02EF CB                    628     RET
                           629     KBD_PROCESS             ENDP
                           630     
02F0                       631     KEYBOARD2 PROC FAR
                           632     
02F0 52                    633                     PUSH    DX
02F1 51                    634                     PUSH    CX
02F2 53                    635                     PUSH    BX
02F3 50                    636                     PUSH    AX
                           637                     
                           638     
02F4                       639     INIT2:          
                           640                     
                           641                     
02F4 B1F7                  642                     MOV CL, 0F7H    ;STORES OUTPUT FOR ROW COUNTER;
                           643                     ;MOV AL,0FEH ; 1110 1111
02F6 B500                  644                     MOV CH, 0H      ;set row counter
02F8 882E5E00              645                     MOV DS:KBD_ROW_COUNTER2,CH
02FC 880E5F00              646                     MOV DS:KBD_OUTPUT2, CL
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE   14


LOC  OBJ                  LINE     SOURCE

                           647             
                           648                     ;call far ptr print_char
0300 EB0490                649                     jmp next_row2
0303                       650     hacky_shit:
0303 E98500                651                     jmp exit_kbd2
                           652                     
0306                       653     NEXT_ROW2:
0306 A05E00                654                     MOV AL,DS:KBD_ROW_COUNTER2
                           655             
                           656     
0309 3C04                  657                     CMP AL,04
030B 7DF6                  658                     JGE hacky_shit
030D 8A0E5F00              659                     MOV CL,DS:KBD_OUTPUT2 
0311 D0C1                  660                     ROL CL, 01H       ;rotate AL to ground next row/ al HAS 8 BITS. so mu
                                   st JMP BACK TO WAIT
                           661     
                           662                     ;MOV CH, AL     ;save data byte to ground next row ;WAT?
0313 8AC1                  663                     MOV AL,CL
0315 BA8200                664                     MOV DX, PORTC   ;port C address to DX; 
0318 EE                    665                     OUT DX, AL      ;give positive logic to one of the rows
0319 A25F00                666                     MOV DS:KBD_OUTPUT2, AL  
                           667             ;add al,48
                           668                     ;call far ptr print_char
031C BA8100                669                     MOV DX, PORTB   ;port B address to DX  
031F EC                    670                     IN  AL,DX       ;read input port for key closure
                           671                     
                           672                     
                           673                     ;mov al,101b; change later
                           674                     ;call far ptr print_char
0320 2438                  675                     AND AL, 38H     ;Mask D4-D7  00xx x000
0322 C0E803                676                     SHR AL,03
0325 3C07                  677                     CMP AL,07H
0327 745B                  678                     JE RETPOINT2
                           679                     ;ERROR CHECK
0329 3C06                  680                     CMP AL,0110B
032B 740B                  681                     JE VALIDATED2
032D 3C05                  682                     CMP AL,0101B
032F 7407                  683                     JE VALIDATED2
0331 3C03                  684                     CMP AL,011B
0333 7403                  685                     JE VALIDATED2
0335 EB4D90                686                     JMP RETPOINT2
                           687                     
0338                       688     VALIDATED2:             
0338 9A9003----     R      689                     CALL FAR PTR KBD_PROCESS2
                           690                     ;Bl CONTAINS iNDEX OF ARRAY WITH CURRENT KEY
                           691             ;; | SEEK==0 = ADD_TO_BUFFER
                           692             ;; | BUFFER[SEEK]== BL = ADD_TO_BUFFER
                           693             ;; | ELSE = (ADD_TO_BUFFER) & (SEEK 0) AKA RESET
                           694                     ;JMP NUMBERS
                           695     
033D                       696     NUMBERS2:
033D 32FF                  697                     XOR BH, BH
033F 8A473A                698                     MOV AL,DS:array2[BX] ; Stores character in AL (?)
0342 32E4                  699                     XOR AH,AH
                           700                     ;CALL   FAR PTR PRINT_CHAR
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE   15


LOC  OBJ                  LINE     SOURCE

                           701                     
0344 8A0ECE00              702             MOV CL, DS:KBD_BUFFER_SEEK2
0348 80F900                703             CMP CL,0H
034B 740E                  704             JZ ADD_TO_BUFFER2
                           705                                     
034D 8A0ECF00              706             MOV CL, KBD_BUFFER2
                           707                     ;COMPARE WITH VALUE AT SEEK
0351 3AC8                  708             CMP CL,AL
0353 7406                  709                     JZ  ADD_TO_BUFFER2
                           710                     
0355 32C9                  711                     XOR CL,CL
0357 880ECE00              712                     MOV DS:KBD_BUFFER_SEEK2, CL
                           713                                     
                           714     
035B                       715     ADD_TO_BUFFER2:
                           716             ;;PUT AL INTO SI SO WE CAN PUT CURRENT CHAR IN THE BUFFER 
035B 32ED                  717                     XOR CH,CH
035D 8BF1                  718                     MOV SI,CX
035F 8884CF00              719                     MOV DS:KBD_BUFFER2[SI],AL
0363 FE06CE00              720                     INC DS:KBD_BUFFER_SEEK2
                           721     
0367 B98813                722                     mov cx, 5000
036A                       723     Debounce2:
036A 90                    724                     nop
036B E2FD                  725                     loop debounce2
036D                       726     CHECKER_SEEK2:
036D 8A0ECE00              727                     MOV CL, DS:KBD_BUFFER_SEEK2
0371 80F909                728                     CMP CL,KBD_BUFFER_LEN2
                           729                     ;ADD CL,48
                           730                     ;MOV AL,CL
                           731                     ;CALL FAR PTR PRINT_CHAR
                           732                     
0374 750E                  733                     JNE RETPOINT2
                           734                     ;RESET KBD_BUFFER_SEEK
                           735                     ;AL CONTAINS CHAR
0376 A26000                736                     MOV DS:KBD_INPUT2, AL
0379 9A0000----     E      737                     CALL    FAR PTR PRINT_CHAR
                           738             ;;      CALL FAR PTR ADD_LED_BUFFER
037E 32C9                  739                     XOR CL,CL
                           740                     ;BUFFER_SEEK IS RESET
0380 880ECE00              741                     MOV DS:KBD_BUFFER_SEEK2, CL
0384                       742     RETPOINT2:      
0384 FE065E00              743             INC DS:KBD_ROW_COUNTER2
                           744             
0388 E97BFF                745             JMP NEXT_ROW2
                           746                     
038B                       747     exit_kbd2:      
038B 58                    748             POP AX
038C 5B                    749             POP BX
038D 59                    750             POP CX
038E 5A                    751             POP DX
038F CB                    752             RET
                           753     KEYBOARD2 ENDP
                           754     
0390                       755     KBD_PROCESS2            PROC    FAR
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE   16


LOC  OBJ                  LINE     SOURCE

0390 50                    756                     push ax
0391 52                    757                     push dx
                           758                     ;0000 0101 => 1111 1010 => 0000 0010  => 0 , 1, 10   
0392 F6D0                  759                     NOT AL
0394 2407                  760                     AND AL, 07H; MASK OTHER BLOODY BITS OMGOMGOMG
0396 D0E8                  761                     SHR AL,01 ; DIVIDE AL BY 2. TO GET COL NUMBER
0398 8AD0                  762                     MOV DL,AL ; TEMP STORE AL IE PORTB INPUT AKA COL NUMBER
                           763                     
039A A05E00                764                     mov Al,DS:KBD_ROW_COUNTER2 ; ROW COUNT MOVED TO AL
039D B603                  765                     MOV DH,03 ; TO MULTIPLY BY 3
                           766                     ;MULTIPLY THE FUCKER
039F F6E6                  767                     MUL DH
                           768                     ; RESULT IN AX
                           769                     
                           770                     
                           771                     ; NUMBER  <= 9 
03A1 02C2                  772                     ADD AL, DL ;ADD row*3 NO TO COL NUMBER
03A3 8AD8                  773                     MOV BL,AL
03A5 32FF                  774                     XOR BH,BH
                           775                     ;Bl CONTAINS iNDEX OF ARRAY WITH CURRENT KEY
                           776             ;; | SEEK==0 = ADD_TO_BUFFER
                           777             ;; | BUFFER[SEEK]== BL = ADD_TO_BUFFER
                           778             ;; | ELSE = (ADD_TO_BUFFER) & (SEEK 0) AKA RESET
                           779     
03A7 5A                    780                     pop dx
03A8 58                    781                     pop ax
03A9 CB                    782     RET
                           783     KBD_PROCESS2            ENDP
                           784             
03AA                       785     TIMER2_ACTION   PROC    FAR
03AA 50                    786                     PUSH    AX
03AB 1E                    787                     PUSH    DS
03AC 53                    788                     PUSH    BX
03AD 51                    789                     PUSH    CX
                           790     
                           791                     
                           792     ;CALL FAR PTR DISPLAY_BCD
                           793     ;CALL FAR PTR KEYBOARD  
03AE 9AD003----     R      794     CALL FAR PTR DISPLAY_LED
                           795     ;CALL FAR PTR ADD_LED_BUFFER
03B3 FE0E1700              796     DEC     DS:T_COUNT
03B7 7512                  797                     JNZ     T_NEXT1
03B9 A01800                798                     MOV     AL,DS:T_COUNT_SET
03BC A21700                799                     MOV     DS:T_COUNT,AL
                           800     
03BF B91400                801                     MOV     CX,20
03C2 BB0000                802                     MOV     BX,0H
03C5                       803     T_NEXT0:
03C5 8A4701                804                     MOV     AL,DS:TIMER0_MESS[BX]
                           805             
03C8 43                    806                     INC     BX
                           807             ;;              CALL    FAR PTR PRINT_CHAR
03C9 E2FA                  808                     LOOP    T_NEXT0
                           809     ;       
03CB                       810     T_NEXT1:
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE   17


LOC  OBJ                  LINE     SOURCE

                           811     
                           812     
03CB 59                    813                     POP     CX
03CC 5B                    814                     POP     BX
03CD 1F                    815                     POP     DS
03CE 58                    816                     POP     AX
03CF CB                    817                     RET
                           818     TIMER2_ACTION   ENDP
                           819     
03D0                       820     DISPLAY_LED     PROC    FAR
03D0 50                    821             PUSH AX
03D1 53                    822             PUSH BX
03D2 51                    823             PUSH CX
03D3 52                    824             PUSH DX
                           825             ; CONVERTS CUR_LED TO SIGNAL
03D4 8A1E5600              826             MOV BL, DS:CUR_LED
03D8 B0FE                  827             MOV AL,0FEH
03DA 8ACB                  828             MOV CL, BL
03DC D2C0                  829             ROL AL,CL
                           830             
03DE BA0001                831             MOV DX, LED_SELECT
03E1 EE                    832             OUT DX, AL
                           833             
03E2 32FF                  834             XOR BH,BH
03E4 8A4750                835             MOV AL, DS:LED_BUFFER[BX]
03E7 BA8001                836             MOV DX, LED_OUTPUT
03EA EE                    837             OUT DX,AL
                           838     
03EB B99001                839             MOV CX, 400
03EE                       840     SUSTAIN:        
                           841             
03EE 90                    842             NOP
03EF E2FD                  843             LOOP SUSTAIN
                           844             
                           845     ; CLEAR THE FUCKER
03F1 B000                  846             MOV AL, 0H
03F3 BA8001                847             MOV DX, LED_OUTPUT
03F6 EE                    848             OUT DX, AL
                           849             
03F7 A05600                850             MOV AL, DS:CUR_LED
03FA 3C05                  851             CMP AL, 5
03FC 7D07                  852             JGE RESTORE
03FE FE065600              853             INC DS:CUR_LED
0402 EB0690                854             JMP EXIT
0405                       855     RESTORE:
0405 32C0                  856             XOR AL,AL
0407 A25600                857             MOV DS:CUR_LED, AL
                           858             
040A                       859     EXIT:
040A 5A                    860             POP DX
040B 59                    861             POP CX
040C 5B                    862             POP BX
040D 58                    863             POP AX
040E CB                    864             RET
                           865     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE   18


LOC  OBJ                  LINE     SOURCE

                           866     DISPLAY_LED ENDP
                           867     
040F                       868     DISPLAY_PRICE_LED PROC FAR
040F 50                    869             PUSH AX
0410 53                    870             PUSH BX
0411 51                    871             PUSH CX
0412 52                    872             PUSH DX
0413 B90600                873             MOV CX, PRICE_LEN
0416 BB0000                874             MOV BX,0
                           875      
0419                       876     LOOP_DISP_LED:
0419 8A477C                877             MOV AL, DS:CUR_PRICE[BX]
041C 2C30                  878             SUB AL,48
041E 9AA504----     R      879             CALL FAR PTR BCD_TO_7SEG
0423 884750                880             MOV DS:LED_BUFFER[BX], AL
0426 43                    881             INC BX
0427 E2F0                  882             LOOP LOOP_DISP_LED
                           883             
                           884             
0429 5A                    885             POP DX
042A 59                    886             POP CX
042B 5B                    887             POP BX
042C 58                    888             POP AX
042D CB                    889             RET
                           890     DISPLAY_PRICE_LED ENDP
042E                       891     ADD_LED_BUFFER  PROC    FAR
042E 50                    892             PUSH AX
042F 53                    893             PUSH BX
0430 51                    894             PUSH CX
0431 52                    895             PUSH DX
0432 A05D00                896             MOV AL, DS:LED_CURSOR
0435 3C06                  897             CMP AL, 06
0437 7C08                  898             JL INCREMENT
0439 32C0                  899             XOR AL, AL
043B A25D00                900             MOV DS:LED_CURSOR,AL
043E EB0590                901             JMP DONE_INC
0441                       902     INCREMENT:
                           903             ;MOV AL, DS:KBD_INPUT
                           904             ;CMP AL, '*'
                           905             ;JNE DONE_INC
0441 FE065D00              906             INC DS:LED_CURSOR
                           907             ;JMP ENDING
0445                       908     DONE_INC:       
0445 8A1E5B00              909             MOV BL, DS:KBD_INPUT
                           910             ;CONVERT ASCII TO NUMBER
                           911             
0449 80EB30                912             SUB BL, 48
044C 32FF                  913             XOR BH, BH
044E 8A4746                914             MOV AL, DS:BCD[BX]
0451 8A1E5D00              915             MOV BL, DS:LED_CURSOR
0455 32FF                  916             XOR BH,BH
0457 884750                917             MOV DS:LED_BUFFER[BX],AL
045A                       918     ENDING: 
045A 5A                    919             POP DX
045B 59                    920             POP CX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE   19


LOC  OBJ                  LINE     SOURCE

045C 5B                    921             POP BX
045D 58                    922             POP AX
045E CB                    923             RET
                           924     ADD_LED_BUFFER  ENDP
                           925     
045F                       926     CLEAR_LED       PROC    FAR
045F 50                    927             PUSH AX
0460 53                    928             PUSH BX
0461 51                    929             PUSH CX
                           930             ;; LEDS DISPLAY -
0462 B07F                  931             MOV AL, 07fH
0464 33DB                  932             XOR BX, BX
0466 B90600                933             MOV CX, 06
0469                       934     CLEAR_START:
0469 884750                935             MOV DS:LED_BUFFER[BX], AL
046C 43                    936             INC BX
046D E2FA                  937             LOOP CLEAR_START
                           938     
046F 59                    939             POP CX
0470 5B                    940             POP BX
0471 58                    941             POP AX
0472 CB                    942             RET
                           943     CLEAR_LED       ENDP
                           944     
0473                       945     MAKE_PACKET     PROC    FAR
0473 50                    946             PUSH AX
0474 53                    947             PUSH BX
0475 51                    948             PUSH CX
0476 52                    949             PUSH DX
0477 56                    950             PUSH SI
0478 B90800                951             MOV CX,BARCODE_LEN
047B 32FF                  952             XOR BH,BH
047D B301                  953             MOV BL, 01
047F BE0000                954             MOV SI,0
0482                       955     BARCODE_LOOP:
0482 8A848F00              956             MOV AL, DS:BARCODE_BUFFER[SI]
0486 884761                957             MOV DS:BARCODE[BX],AL
0489 43                    958             INC BX
048A 46                    959             INC SI
048B E2F5                  960             LOOP BARCODE_LOOP
                           961             
048D 43                    962             INC BX
                           963             ; FOR : BETWEEN BARCODE & PRICE
                           964             
048E B90400                965             MOV CX, QUANTITY_LEN
0491 BE0000                966             MOV SI,0
0494                       967     QUANTITY_LOOP:
0494 8A84C200              968             MOV AL, DS:QUANTITY_BUFFER[SI]
0498 884761                969             MOV DS:BARCODE[BX],AL
049B 43                    970             INC BX
049C 46                    971             INC SI
049D E2F5                  972             LOOP QUANTITY_LOOP
                           973     
049F 5E                    974             POP SI
04A0 5A                    975             POP DX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:40:45  11/30/;2  PAGE   20


LOC  OBJ                  LINE     SOURCE

04A1 59                    976             POP CX
04A2 5B                    977             POP BX
04A3 58                    978             POP AX
04A4 CB                    979             RET
                           980     MAKE_PACKET     ENDP
                           981             
                           982     
                           983     ;EXPECTS A 4BIT BCD DIGIT IN AL. RETURNS THE 7SEG CODE IN AL FOR THAT DIGIT     
04A5                       984     BCD_TO_7SEG     PROC    FAR
04A5 53                    985             PUSH BX
                           986     
                           987             ;; STORE AL TEMPORARILY IN BL
04A6 8AD8                  988             MOV BL,AL
                           989             
04A8 32FF                  990             XOR BH,BH
                           991             ;; GET THE BLTH INDEX OF THE BCD ARRAY IN DATA_SEG
04AA 8A4746                992             MOV AL,DS:BCD[BX]
04AD 5B                    993             POP BX
04AE CB                    994             RET
                           995     BCD_TO_7SEG     ENDP    
                           996     
04AF                       997     PRINT_BARCODE_BUFFER PROC FAR
04AF 50                    998             PUSH AX
04B0 53                    999             PUSH BX
04B1 51                   1000             PUSH CX
04B2 B055                 1001             MOV AL, 'U'
04B4 9A0000----     E     1002             CALL FAR PTR PRINT_CHAR
04B9 B90800               1003             MOV CX, BARCODE_LEN
04BC BB0000               1004             MOV BX,0
04BF                      1005     LOOP_BB:
04BF 8A878F00             1006             MOV AL, DS:BARCODE_BUFFER[BX]
04C3 9A0000----     E     1007             CALL FAR PTR PRINT_CHAR
04C8 43                   1008             INC BX
04C9 E2F4                 1009             LOOP LOOP_BB
                          1010     
04CB 59                   1011             POP CX
04CC 5B                   1012             POP BX
04CD 58                   1013             POP AX
04CE CB                   1014             RET
                          1015     PRINT_BARCODE_BUFFER ENDP
                          1016     
----                      1017     CODE_SEG        ENDS
                          1018     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
