8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE TIMER
OBJECT MODULE PLACED IN KSN.OBJ
ASSEMBLER INVOKED BY:  F:\ASM86.EXE KSN.ASM


LOC  OBJ                  LINE     SOURCE

                             1 +1  $MOD186
                             2 +1  $EP
                             3     NAME TIMER
                             4     ; Main program for uPD70208 microcomputer system
                             5     ;
                             6     ; US, WE WROTE IT BITCHES! hey Colin, TTT, and uncle! ;)
                             7     ; =========================================================================
                             8     ; 1 KEYBOARD VERSION (TESTING ONLY)
                             9     public  serial_rec_action, timer2_action
                            10     extrn   print_char:far, print_2hex:far, iodefine:far
                            11     extrn   set_timer2:far
  0080                      12     PORTA           equ 080h
  0081                      13     PORTB           EQU 081H
  0082                      14     PORTC           EQU 082H
  0083                      15     CWR             EQU 083H
  0100                      16     LED_SELECT      EQU     0100H
  0180                      17     LED_OUTPUT      EQU     0180H 
  FFA4                      18     PCSBA           EQU    0FFA4H ; Peripheral Chip Select Base Address
  FFA8                      19     MPCS            EQU    0FFA8H ; MMCS and PCS Alter Control Register
  000B                      20     KBD_BUFFER_LEN  EQU             11
  0009                      21     KBD_BUFFER_LEN2 EQU             9
  0001                      22     KBD_NEW EQU 01H
  0002                      23     KBD_STALE       EQU     02H
                            24     
  0008                      25     BARCODE_LEN     EQU     08
  0004                      26     QUANTITY_LEN    EQU     04
  0000                      27     NET_READY EQU 0
  0001                      28     NET_PREADDR_BUFFERING EQU 1
  0002                      29     NET_ADDR_RECIEVING EQU 2
  0003                      30     NET_SELECTED EQU 3
  0004                      31     NET_BUFFERING EQU 4
  0002                      32     ADDR_LEN EQU 2
  004E                      33     NACK    EQU     'N'
  0060                      34     NET_PREADDR_CHAR EQU '`'
  0003                      35     NET_PREADDR_LEN  EQU 3
  000F                      36     NET_PAYLOAD_LEN  EQU 15
                            37             ;; PRICE_LEN NEEDS TO TAKE ACCOUNT OF . 
  0006                      38     PRICE_LEN EQU 6
  0001                      39     PRICE_NEW EQU 01
  0002                      40     PRICE_STALE EQU 02
  0000                      41     CASHIER_READY EQU 0
  0001                      42     CASHIER_START_TRANSACTION EQU 1
  0002                      43     CASHIER_RECV_BARCODE EQU 2
  0004                      44     CASHIER_RECV_QUANTITY  EQU 4
  0005                      45     CASHIER_GET_PRICE       EQU 5
  0006                      46     CASHIER_DISPLAY_PRICE   EQU 6
  0007                      47     CASHIER_EOT_PROMPT      EQU 7
  0008                      48     CASHIER_EOT     EQU     8
                            49     
----                        50     STACK_SEG       SEGMENT
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE    2


LOC  OBJ                  LINE     SOURCE

0000 (256                   51                     DB      256 DUP(?)
     ??
     )
0100                        52             TOS     LABEL   WORD
----                        53     STACK_SEG       ENDS
                            54     
                            55     
----                        56     DATA_SEG        SEGMENT
                            57     
0000 00                     58             CASHIER_STATE   DB      CASHIER_READY
0001 0A                     59             TIMER0_MESS     DB      10,13,'TIMER2 INTERRUPT    '
0002 0D
0003 54494D45523220
     494E5445525255
     505420202020
0017 2F                     60             T_COUNT         DB      2FH
0018 2F                     61             T_COUNT_SET     DB      2FH
0019 0A                     62             REC_MESS        DB      10,13,'Period of timer0 = '  
001A 0D
001B 506572696F6420
     6F662074696D65
     7230203D20
002E 31                     63             array       DB      '1','2','3','4','5','6','7','8','9','*','0','#'
002F 32
0030 33
0031 34
0032 35
0033 36
0034 37
0035 38
0036 39
0037 2A
0038 30
0039 23
003A 41                     64             ARRAY2      DB      'A','B','C','D','E','F','G','H','I','J','K','L' 
003B 42
003C 43
003D 44
003E 45
003F 46
0040 47
0041 48
0042 49
0043 4A
0044 4B
0045 4C
0046 3F                     65             BCD         DB  3FH,06H,5BH,4FH,66H,6DH,7DH,07H,7FH,06FH
0047 06
0048 5B
0049 4F
004A 66
004B 6D
004C 7D
004D 07
004E 7F
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE    3


LOC  OBJ                  LINE     SOURCE

004F 6F
0050 3F                     66             LED_BUFFER      DB      3fh,06h,5bh,4fh,66h,6dh
0051 06
0052 5B
0053 4F
0054 66
0055 6D
0056 00                     67             CUR_LED         DB      0H
0057 3412                   68             DISPLAY_NUM     DW      1234H
0059 (20                    69             KBD_BUFFER      DB      20 DUP(?)
     ??
     )
006D 00                     70             KBD_BUFFER_SEEK DB      0H
                            71                     
006E 00                     72             KBD_ROW_COUNTER DB      0H
                            73             ;USED TO OUTPUT TO KBD
006F 00                     74             KBD_OUTPUT      DB      0H
                            75             
                            76             ; CONTAINS KEYBOARD INPUT ASCII CHARS
0070 00                     77             KBD_INPUT       DB      0H
0071 02                     78             KBD_LATCH       DB      KBD_STALE
0072 00                     79             LED_CURSOR      DB      0H
0073 00                     80             KBD_ROW_COUNTER2 DB     0H
0074 00                     81             KBD_OUTPUT2      DB     0H
0075 (20                    82             KBD_BUFFER2     DB      20 DUP(?)
     ??
     )
0089 00                     83             KBD_BUFFER_SEEK2  DB      0H
008A 00                     84             KBD_INPUT2      DB      0H
                            85         
                            86             
                            87     ;=========================================================================
                            88     ;Port B of the 8255 is used as the input port for the keybad
                            89     ;Port C is used as the output and grounds the rows one by one
                            90     ;=========================================================================
                            91             ;; THIS IS  THE PACKET TRANSMITTED. SET LENGTH IN NET_PAYLOAD_LEN
008B 21313832343333         92             BARCODE     DB  '!18243337:0012#'
     33373A30303132
     23
                            93             
009A 0A                     94             RECV_MESS       DB      10,13,'PRICE RECV'
009B 0D
009C 50524943452052
     454356
00A6 (8                     95             CUR_PRICE       DB      8 DUP(?)
     ??
     )
00AE 02                     96             CUR_PRICE_LATCH DB      PRICE_STALE
00AF 00                     97             CUR_INDEX       DB      0
00B0 00                     98             NET_STATE       DB      0
00B1 6261                   99             ADDRESS         DW      'ab'
00B3 00                    100             ADDR_INCOM_COUNT      DB      0
00B4 00                    101             ADDR_COUNT      DB      0
00B5 (4                    102             ADDR_BUFFER     DB      4 DUP(?)
     ??
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE    4


LOC  OBJ                  LINE     SOURCE

     )
                           103             
                           104             ;; network state machine:
                           105             ;; READY
                           106             ;;  |
                           107             ;; ` -> NET_PREADDR_BUFFERING
                           108             ;; ``` -> NET_ADDR_RECIEVING (A)
                           109             ;; 0023H
                           110             ;;      |
                           111             ;;     /  \
                           112             ;; myaddr?  return READY + NACK
                           113             ;;   |
                           114             ;;  NET_SELECTED (transmit BARCODE+ Quantity)
                           115             ;;   |
                           116             ;;  NET_BUFFERING -> '1'*PRICE_LEN -> CUR_PRICE UPDATED ->ACK CUR_PRICE
                           117             ;; return READY
00B9 (50                   118             BARCODE_BUFFER  DB      50 DUP(?)
     ??
     )
00EB 00                    119             BARCODE_SEEK    DB      0H
00EC (10                   120             QUANTITY_BUFFER DB      10 DUP(?)
     ??
     )
00F6 00                    121             QUANTITY_SEEK   DB      0H
                           122     
----                       123     DATA_SEG        ENDS
                           124     
                           125     
----                       126     CODE_SEG        SEGMENT
                           127     
                           128             PUBLIC          START
                           129     
                           130     ASSUME  CS:CODE_SEG, SS:STACK_SEG, DS:DATA_SEG
                           131     
0000                       132     START:
                           133      ; Initialize MPCS to MAP peripheral to IO address
0000 BAA8FF                134              MOV DX, MPCS
0003 B88300                135              MOV AX, 0083H
0006 EE                    136              OUT DX, AL
                           137     ; PCSBA initial, set the serial port start from 00H
0007 BAA4FF                138              MOV DX, PCSBA
000A B80300                139              MOV AX, 0003H ; Peripheral starting address 00H no READY, No Waits
000D EE                    140              OUT DX, AL
                           141     
                           142     ;initialize stack area
000E B8----         R      143                     MOV     AX,STACK_SEG            
0011 8ED0                  144                     MOV     SS,AX
0013 368B260001            145                     MOV     SP,TOS
                           146     ;Initialise data segment
0018 B8----         R      147                     MOV AX,DATA_SEG
001B 8ED8                  148                     MOV DS,AX
                           149     
                           150     ; Initialize the on-chip pheripherals
001D 9A0000----     E      151                     CALL FAR PTR IODEFINE
                           152                     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE    5


LOC  OBJ                  LINE     SOURCE

                           153     
                           154     
                           155     ; ^^^^^^^^^^^^^^^^^  Start of User Main Routine  ^^^^^^^^^^^^^^^^^^
                           156        
0022 B082                  157     MOV AL, 82H       ;mode 0, A - out, B-in ;changed value of CW from 82H
0024 BA8300                158                     MOV DX, CWR
0027 EE                    159                     OUT DX, AL      ;send the control word
0028 B300                  160                     MOV BL, 00H     ;initialize BL for key code
002A 33C0                  161                     XOR AX, AX      ;clear ax flags
002C BA8200                162                     MOV DX, PORTC  ;port C address to DX
002F EE                    163                     OUT DX, AL      ;ground all rows
                           164                     
                           165     
                           166     
                           167        
                           168     ;code
0030 9A0000----     E      169      call set_timer2
0035 FB                    170                     STI
                           171     
0036                       172     NEXT:
                           173            ; MOV AX,DS:DISPLAY_NUM
                           174             
                           175             ;INC DS:CUR_LED
                           176             ;CALL FAR PTR KEYBOARD2
0036 9A1B02----     R      177             CALL FAR PTR KEYBOARD
003B 9ADF02----     R      178             call far ptr keyboard2
0040 9A4700----     R      179             CALL FAR PTR CASHIER_STATE_M 
                           180             
                           181             
0045 EBEF                  182      JMP NEXT
                           183     
                           184     ; ^^^^^^^^^^^^^^^ End of User main routine ^^^^^^^^^^^^^^^^^^^^^^^^^
                           185     
  0041                     186     TRIGGER_START_T EQU     'A'
  0044                     187     TRIGGER_BARCODE EQU 'D'
  0045                     188     TRIGGER_QUANTITY EQU    'E'
0047                       189     CASHIER_STATE_M         PROC    FAR
0047 50                    190             PUSH AX
0048 53                    191             PUSH BX
0049 51                    192             PUSH CX
004A 52                    193             PUSH DX
004B A00000                194             MOV AL, DS:CASHIER_STATE
004E 3C00                  195             CMP AL, CASHIER_READY
0050 7420                  196             JE C_READY_HANDLE
                           197             
0052 3C01                  198             CMP AL, CASHIER_START_TRANSACTION
0054 742E                  199                     JE C_START_T_HANDLE
                           200             
0056 3C02                  201             CMP AL, CASHIER_RECV_BARCODE
0058 7443                  202                     JE C_RECV_BARCODE
                           203     
005A 3C04                  204             CMP AL, CASHIER_RECV_QUANTITY
005C 7411                  205                      JE HACKY_RECV_QUANTITY      
                           206     
005E 3C05                  207             CMP AL, CASHIER_GET_PRICE
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE    6


LOC  OBJ                  LINE     SOURCE

0060 7407                  208                      JE HACKY_GET_PRICE
                           209     
0062 3C06                  210             CMP AL, CASHIER_DISPLAY_PRICE
0064 7406                  211             JE HACKY_DISP_PRICE
                           212             
0066 E9A200                213             JMP EXIT_CASHIER_STATE
0069                       214     HACKY_GET_PRICE:
0069 E99000                215             JMP C_GET_PRICE
006C                       216     HACKY_DISP_PRICE:
006C E99700                217             JMP C_DISP_PRICE
006F                       218     HACKY_RECV_QUANTITY:
006F EB5D90                219             JMP C_RECV_QUANTITY
0072                       220     C_READY_HANDLE:
                           221             ;;      mov bl, ds:kbd_latch
                           222             ;;         cmp bl, kbd_new
                           223             ;;         jne hacky_ready
                           224     
                           225             ;;         mov ds:kbd_latch, kbd_stale 
0072 A08A00                226             mov al, ds:kbd_input2
0075 3C41                  227             CMP AL, 'A'
0077 7508                  228             JNE HACKY_READY
0079 B001                  229             MOV AL, CASHIER_START_TRANSACTION
007B A20000                230             MOV DS:CASHIER_STATE, AL
                           231            
                           232            
007E E98A00                233             JMP EXIT_CASHIER_STATE
                           234     
0081                       235     HACKY_READY:
                           236             
0081 E98700                237             JMP EXIT_CASHIER_STATE
0084                       238     C_START_T_HANDLE:
0084 9A4E04----     R      239             CALL FAR PTR CLEAR_LED
0089 B002                  240             MOV AL, CASHIER_RECV_BARCODE
008B A20000                241             MOV DS:CASHIER_STATE, AL
                           242             
008E C606720000            243             MOV DS:LED_CURSOR, 0H
0093 B073                  244             MOV AL,'s'
0095 9A0000----     E      245             CALL FAR PTR PRINT_CHAR
                           246             
009A EB6F90                247             JMP EXIT_CASHIER_STATE
                           248                     
009D                       249     C_RECV_BARCODE:
                           250             
                           251             
009D A07100                252             MOV AL, DS:KBD_LATCH
                           253       
00A0 3C01                  254             CMP AL, KBD_NEW
00A2 7527                  255             JNE EXIT_RECV_BARCODE
00A4 B063                  256             mov al, 'c'
00A6 9A0000----     E      257             call far ptr print_char
                           258             
                           259             ;; ======== ADD TO BARCODE_BUFFER
00AB A07000                260             MOV AL, DS:KBD_INPUT
00AE 8A1EEB00              261             MOV BL, DS:BARCODE_SEEK
00B2 32FF                  262             XOR BH, BH
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE    7


LOC  OBJ                  LINE     SOURCE

00B4 8887B900              263             MOV DS:BARCODE_BUFFER[BX],AL
                           264             ;;      INC BL
                           265     
                           266     
                           267             ;;         call far ptr print_char 
00B8 881EEB00              268             MOV DS:BARCODE_SEEK, BL
00BC C606710002            269             MOV DS:KBD_LATCH, KBD_STALE
                           270     
00C1 A08A00                271             MOV AL, DS:KBD_INPUT2
00C4 3C44                  272             CMP AL, TRIGGER_BARCODE
00C6 7403                  273             JE UPDATE_B_STATE
                           274             
                           275             
00C8 EB0190                276             JMP EXIT_RECV_BARCODE
                           277             
                           278             
00CB                       279     UPDATE_B_STATE:
                           280             ;;      MOV DS:CASHIER_STATE, CASHIER_RECV_QUANTITY
                           281             ;;       call far ptr PRINT_BARCODE_BUFFER 
                           282             
00CB                       283     EXIT_RECV_BARCODE:
00CB EB3E90                284             JMP EXIT_CASHIER_STATE
                           285     
00CE                       286     C_RECV_QUANTITY:
00CE A07100                287            MOV  AL,DS:KBD_LATCH
00D1 3C01                  288             CMP AL,KBD_NEW
00D3 7524                  289             JNE EXIT_RECV_QUANTITY
00D5 B071                  290             mov al, 'q'
00D7 9A0000----     E      291             call far ptr print_char
00DC A08A00                292             MOV AL,DS:KBD_INPUT2
                           293             ;; HERE TRIGGER_BARCODE IS BEING USED FOR THE QUANTITY
00DF 3C45                  294             CMP AL,TRIGGER_QUANTITY
00E1 7416                  295             JE UPDATE_C_STATE
                           296     
00E3 A07000                297             MOV AL,DS:KBD_INPUT
00E6 8A1EF600              298             MOV BL,DS:QUANTITY_SEEK
00EA 32FF                  299             XOR BH,BH
00EC 8887EC00              300             MOV DS:QUANTITY_BUFFER[BX],AL
00F0 FEC3                  301             INC BL
00F2 881EF600              302             MOV DS:QUANTITY_SEEK,BL
                           303             ;;         MOV DS:KBD_LATCH,KBD_STALE
00F6 EB0190                304             JMP EXIT_RECV_QUANTITY
                           305             
00F9                       306     UPDATE_C_STATE:
                           307     ;;; REMEMBER TO MAKE INTO A PACKET
                           308             ;;         CALL FAR PTR MAKE_PACKET
                           309             ;;     MOV DS:CASHIER_STATE,CASHIER_GET_PRICE
00F9                       310     EXIT_RECV_QUANTITY:
00F9 EB1090                311             JMP EXIT_CASHIER_STATE          
                           312             
00FC                       313     C_GET_PRICE:
00FC A0AE00                314             MOV AL, DS:CUR_PRICE_LATCH
00FF 3C01                  315             CMP AL, PRICE_NEW
0101 7500                  316             JNE EXIT_GET_PRICE
                           317             ;;         MOV DS:CASHIER_STATE, CASHIER_DISPLAY_PRICE
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE    8


LOC  OBJ                  LINE     SOURCE

                           318     
                           319           
                           320     
0103                       321     EXIT_GET_PRICE:
0103 EB0690                322             JMP EXIT_CASHIER_STATE
                           323     
0106                       324     C_DISP_PRICE:
0106 9AFD03----     R      325             CALL FAR PTR DISPLAY_PRICE_LED
                           326             ;;         MOV DS:CASHIER_STATE, CASHIER_READY
010B                       327     EXIT_CASHIER_STATE:
010B A00000                328             mov al, ds:cashier_state
010E 0430                  329             add al,48
0110 9A0000----     E      330             call far ptr print_char
0115 2C30                  331             sub al,48
0117 5A                    332             POP DX
0118 59                    333             POP CX
0119 5B                    334             POP BX
011A 58                    335             POP AX
011B CB                    336             RET
                           337             
                           338     CASHIER_STATE_M         ENDP
                           339     
011C                       340     SERIAL_REC_ACTION       PROC    FAR
011C 51                    341                     PUSH    CX
011D 53                    342                     PUSH    BX
011E 1E                    343                     PUSH    DS
                           344     
011F BB----         R      345                     MOV     BX,DATA_SEG             ;initialize data segment register
0122 8EDB                  346                     MOV     DS,BX
0124 8A1EB000              347                     MOV BL, DS:NET_STATE
0128 80FB01                348                     CMP BL, NET_PREADDR_BUFFERING
012B 744A                  349                     JZ ADDR_BUFFERING
012D 80FB02                350                     CMP BL, NET_ADDR_RECIEVING
0130 745D                  351                     JZ ADDR_RECIEVING
0132 80FB04                352                     CMP BL, NET_BUFFERING
0135 740C                  353                     JZ CALL_BUFFERING
0137 80FB03                354                     CMP BL, NET_SELECTED
013A 740F                  355                     JZ SELECTED
                           356             ;; 
013C 3C60                  357                     CMP AL, NET_PREADDR_CHAR
013E 7437                  358                     JZ ADDR_BUFFERING
                           359     
                           360             
0140 E99200                361                     JMP     S_RET
                           362             
                           363             ;;      JNE     WRONG_ADDRESS
                           364     ;               IF POLL IS SELECTING DS:ADDRESS, TRANSMIT THE BARCODE
0143                       365     CALL_BUFFERING:
0143 9AD901----     R      366                     CALL FAR PTR DATA_BUFFERING
0148 E98A00                367                     JMP S_RET
014B                       368     SELECTED:
                           369             ;; starts sending the barcode and quantity
                           370             ;;                      MOV AL, DS:CASHIER_STATE
                           371             ;;                      CMP AL, CASHIER_GET_PRICE
                           372                     ;; dON'T TRANSMIT ANYTHING UNLESS STATE IS GET_PRICE
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE    9


LOC  OBJ                  LINE     SOURCE

                           373             ;;                      JNE NOT_READY   
                           374             
014B B90F00                375                     MOV CX, NET_PAYLOAD_LEN
014E BB0000                376                     MOV BX, 0
0151                       377     START_TRANSMIT:         
0151 8A878B00              378                     MOV AL,DS:BARCODE[BX]
0155 9A0000----     E      379                     CALL FAR PTR PRINT_CHAR
015A 43                    380                     INC BX
015B E2F4                  381                     LOOP    START_TRANSMIT
                           382             ;; change state to recieving
015D C606B00004            383                     MOV DS:NET_STATE, NET_BUFFERING
0162 EB7190                384                     JMP     S_RET
0165                       385     NOT_READY:
0165 B04E                  386                     MOV AL, NACK
0167 9A0000----     E      387                     CALL FAR PTR PRINT_CHAR
016C EB6790                388                     JMP S_RET
016F                       389     WRONG_ADDRESS:          
016F 9A0000----     E      390                     CALL FAR PTR PRINT_CHAR
0174 EB5F90                391                     JMP S_RET
                           392      
0177                       393     ADDR_BUFFERING:
                           394             ;; buffers the incoming addr char '`' as by protocol
0177 FE06B300              395                     INC DS:ADDR_INCOM_COUNT
017B A0B300                396                     MOV AL, DS:ADDR_INCOM_COUNT
017E 3C03                  397                     CMP AL,NET_PREADDR_LEN
0180 750A                  398                     JNE SKIP_UPDATE
0182 C606B00002            399                     MOV DS:NET_STATE, NET_ADDR_RECIEVING
0187 B000                  400                     MOV AL, 0
0189 A2B300                401                     MOV DS:ADDR_INCOM_COUNT, AL
018C                       402     SKIP_UPDATE:    
018C EB4790                403                     JMP S_RET
                           404             
018F                       405     ADDR_RECIEVING:
                           406             ;; recives the address being broadcasted. address is only 2 bytes
018F 8A1EB400              407                     MOV BL, DS:ADDR_COUNT
0193 32FF                  408                     XOR BH, BH
0195 8887B500              409                     MOV DS:ADDR_BUFFER[BX], AL
0199 FE06B400              410                     INC DS:ADDR_COUNT
019D A0B400                411                     MOV AL, DS:ADDR_COUNT
01A0 3C02                  412                     CMP AL,ADDR_LEN
01A2 7D03                  413                     JGE ADDR_DONE
01A4 EB2F90                414                     JMP S_RET
01A7                       415     ADDR_DONE:
01A7 8A26B500              416                     MOV AH,DS:ADDR_BUFFER
01AB A0B600                417                     MOV AL,DS:ADDR_BUFFER[1]
01AE 3B06B100              418                     CMP AX,DS:ADDRESS
01B2 7414                  419                     JE ISMYADDR
                           420             ;; FOR DEV PURPOSES ONLY
01B4 B04E                  421                     MOV AL, NACK
01B6 9A0000----     E      422                     CALL FAR PTR PRINT_CHAR
                           423             ;; RESET STATE TO READY SINCE NOT MY ADDR
01BB B000                  424                     MOV AL, NET_READY
01BD A2B000                425                     MOV DS:NET_STATE, AL
01C0 32C0                  426                     XOR AL,AL
01C2 A2B400                427                     MOV DS:ADDR_COUNT, AL
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE   10


LOC  OBJ                  LINE     SOURCE

01C5 EB0E90                428                     JMP S_RET
01C8                       429     ISMYADDR:
                           430             ;; SET STATE TO SELECTED
01C8 B003                  431                     MOV AL,NET_SELECTED
01CA A2B000                432                     MOV DS:NET_STATE, AL
01CD B000                  433                     MOV AL, 0
                           434             ;; RESET ADDR_COUNT
01CF A2B400                435                     MOV DS:ADDR_COUNT, AL
01D2 E976FF                436                     JMP SELECTED
                           437     
01D5                       438     S_RET:
01D5 1F                    439                     POP     DS
01D6 5B                    440                     POP     BX
01D7 59                    441                     POP     CX
01D8 CB                    442                     RET
                           443     SERIAL_REC_ACTION       ENDP
                           444     
                           445     
01D9                       446     DATA_BUFFERING  PROC    FAR
                           447             
01D9 50                    448                     PUSH AX
01DA 53                    449                     PUSH BX
                           450             
01DB 8A1EAF00              451                     MOV BL, DS:CUR_INDEX
01DF 32FF                  452                     XOR BH,BH
01E1 8887A600              453                     MOV DS:CUR_PRICE[BX], AL
                           454                     
01E5 FEC3                  455                     INC BL
01E7 80FB06                456                     CMP BL, PRICE_LEN
01EA 7D07                  457                     JGE BUFFER_END
01EC 881EAF00              458                     MOV DS:CUR_INDEX, BL
01F0 EB2690                459                     JMP ESCAPE_PROC 
01F3                       460     BUFFER_END:
01F3 B90600                461                     MOV CX,PRICE_LEN
01F6 BB0000                462                     MOV BX, 0
01F9 8A87A600              463                     MOV AL, DS:CUR_PRICE[BX]
01FD                       464     ACK_LOOP:
01FD 8A87A600              465                     MOV AL, DS:CUR_PRICE[BX]
0201 9A0000----     E      466                     CALL FAR PTR PRINT_CHAR
0206 43                    467                     INC BX
0207 E2F4                  468                     LOOP    ACK_LOOP
0209 C606AE0001            469                     MOV DS:CUR_PRICE_LATCH, PRICE_NEW
020E C606B00000            470                     MOV DS:NET_STATE, NET_READY
0213 32C0                  471                     XOR AL,AL
0215 A2AF00                472                     MOV DS:CUR_INDEX, AL
0218                       473     ESCAPE_PROC:    
0218 5B                    474                     POP BX
0219 58                    475                     POP AX
021A CB                    476                     RET
                           477             
                           478     DATA_BUFFERING ENDP
                           479     
021B                       480     KEYBOARD PROC FAR
                           481     
021B 52                    482                     PUSH    DX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE   11


LOC  OBJ                  LINE     SOURCE

021C 51                    483                     PUSH    CX
021D 53                    484                     PUSH    BX
021E 50                    485                     PUSH    AX
                           486                     
                           487     
021F                       488     INIT:           
                           489                     
                           490                     
021F B17F                  491                     MOV CL, 07FH    ;STORES OUTPUT FOR ROW COUNTER;
                           492                     ;MOV AL,0FEH ; 1111 1110
0221 B500                  493                     MOV CH, 0H      ;set row counter
0223 882E6E00              494                     MOV DS:KBD_ROW_COUNTER,CH
0227 880E6F00              495                     MOV DS:KBD_OUTPUT, CL
022B EB0490                496                     jmp next_row
022E                       497     hacky_stuff:
022E E98F00                498                     jmp exit_kbd    
0231                       499     NEXT_ROW:
0231 A06E00                500                     MOV AL,DS:KBD_ROW_COUNTER
                           501             
0234 3C04                  502                     CMP AL,04
0236 7DF6                  503                     JGE hacky_stuff
0238 8A0E6F00              504                     MOV CL,DS:KBD_OUTPUT 
023C D0C1                  505                     ROL CL, 01H       ;rotate AL to ground next row/ al HAS 8 BITS. so mu
                                   st JMP BACK TO WAIT
                           506     
                           507                     ;MOV CH, AL     ;save data byte to ground next row ;WAT?
023E 8AC1                  508                     MOV AL,CL
0240 BA8200                509                     MOV DX, PORTC   ;port C address to DX; 
0243 EE                    510                     OUT DX, AL      ;give positive logic to one of the rows
0244 A26F00                511                     MOV DS:KBD_OUTPUT, AL   
                           512             
0247 BA8100                513                     MOV DX, PORTB   ;port B address to DX  
024A EC                    514                     IN  AL,DX       ;read input port for key closure
                           515                     
                           516                     
                           517                     ;mov al,101b; change later
024B 2407                  518                     AND AL, 07H     ;Mask D4-D7
024D 3C07                  519                     CMP AL,07H
024F 7468                  520                     JE RETPOINT
                           521                     ;ERROR CHECK
0251 3C06                  522                     CMP AL,0110B
0253 740B                  523                     JE VALIDATED
0255 3C05                  524                     CMP AL,0101B
0257 7407                  525                     JE VALIDATED
0259 3C03                  526                     CMP AL,011B
025B 7403                  527                     JE VALIDATED
025D EB5A90                528                     JMP RETPOINT
                           529                     
0260                       530     VALIDATED:              
0260 9AC502----     R      531                     CALL FAR PTR KBD_PROCESS
                           532                     ;Bl CONTAINS iNDEX OF ARRAY WITH CURRENT KEY
                           533             ;; | SEEK==0 = ADD_TO_BUFFER
                           534             ;; | BUFFER[0]== aL = ADD_TO_BUFFER
                           535             ;; | ELSE = (ADD_TO_BUFFER) & (SEEK 0) AKA RESET
                           536                     ;JMP NUMBERS
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE   12


LOC  OBJ                  LINE     SOURCE

                           537     
0265                       538     NUMBERS:
0265 32FF                  539                     XOR BH, BH
0267 8A472E                540                     MOV AL,DS:array[BX] ; Stores character in AL (?)
026A 32E4                  541                     XOR AH,AH
                           542                     ;CALL   FAR PTR PRINT_CHAR
                           543                     ; Hack to fix the * from irritating
026C 3C2A                  544                     CMP AL, '*'
026E 7425                  545                     JE Debounce
0270 8A0E6D00              546             MOV CL, DS:KBD_BUFFER_SEEK
0274 80F900                547             CMP CL,0H
0277 740E                  548             JZ ADD_TO_BUFFER
                           549     
                           550             
0279 8A0E5900              551             MOV CL, KBD_BUFFER
                           552                     ;COMPARE WITH VALUE AT first
027D 3AC8                  553             CMP CL,AL
027F 7406                  554                     JZ  ADD_TO_BUFFER
                           555                     
0281 32C9                  556                     XOR CL,CL
0283 880E6D00              557                     MOV DS:KBD_BUFFER_SEEK, CL
                           558                                     
                           559     
0287                       560     ADD_TO_BUFFER:
                           561             ;;PUT AL INTO SI SO WE CAN PUT CURRENT CHAR IN THE BUFFER 
0287 32ED                  562                     XOR CH,CH
0289 8BF1                  563                     MOV SI,CX
028B 884459                564                     MOV DS:KBD_BUFFER[SI],AL
028E FE066D00              565                     INC DS:KBD_BUFFER_SEEK
                           566     
0292 B98813                567                     mov cx, 5000
0295                       568     Debounce:
0295 90                    569                     nop
0296 E2FD                  570                     loop debounce
0298                       571     CHECKER_SEEK:
0298 8A0E6D00              572                     MOV CL, DS:KBD_BUFFER_SEEK
029C 80F90B                573                     CMP CL,KBD_BUFFER_LEN
                           574                     ;ADD CL,48
                           575                     ;MOV AL,CL
                           576                     ;CALL FAR PTR PRINT_CHAR
                           577                     
029F 7518                  578                     JNE RETPOINT
                           579                     ;RESET KBD_BUFFER_SEEK
                           580                     ;AL CONTAINS CHAR
02A1 A27000                581                     MOV DS:KBD_INPUT, AL
02A4 C606710001            582                     MOV DS:KBD_LATCH, KBD_NEW
02A9 9A0000----     E      583                     CALL    FAR PTR PRINT_CHAR
02AE 9A1D04----     R      584                     CALL FAR PTR ADD_LED_BUFFER
02B3 32C9                  585                     XOR CL,CL
                           586                     ;BUFFER_SEEK IS RESET
02B5 880E6D00              587                     MOV DS:KBD_BUFFER_SEEK, CL
02B9                       588     RETPOINT:       
02B9 FE066E00              589             INC DS:KBD_ROW_COUNTER
                           590             
02BD E971FF                591             JMP NEXT_ROW
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE   13


LOC  OBJ                  LINE     SOURCE

                           592                     
02C0                       593     exit_kbd:       
02C0 58                    594             POP AX
02C1 5B                    595             POP BX
02C2 59                    596             POP CX
02C3 5A                    597             POP DX
02C4 CB                    598             RET
                           599     KEYBOARD ENDP
                           600     
02C5                       601     KBD_PROCESS             PROC    FAR
02C5 50                    602                     push ax
02C6 52                    603                     push dx
                           604                     ;0000 0101 => 1111 1010 => 0000 0010  => 0 , 1, 10   
02C7 F6D0                  605                     NOT AL
02C9 2407                  606                     AND AL, 07H; MASK OTHER BLOODY BITS OMGOMGOMG
02CB D0E8                  607                     SHR AL,01 ; DIVIDE AL BY 2. TO GET COL NUMBER
02CD 8AD0                  608                     MOV DL,AL ; TEMP STORE AL IE PORTB INPUT AKA COL NUMBER
                           609                     
02CF A06E00                610                     mov Al,DS:KBD_ROW_COUNTER ; ROW COUNT MOVED TO AL
02D2 B603                  611                     MOV DH,03 ; TO MULTIPLY BY 3
                           612                     ;MULTIPLY THE FUCKER
02D4 F6E6                  613                     MUL DH
                           614                     ; RESULT IN AX
                           615                     
                           616                     
                           617                     ; NUMBER  <= 9 
02D6 02C2                  618                     ADD AL, DL ;ADD row*3 NO TO COL NUMBER
02D8 8AD8                  619                     MOV BL,AL
02DA 32FF                  620                     XOR BH,BH
                           621                     ;Bl CONTAINS iNDEX OF ARRAY WITH CURRENT KEY
                           622             ;; | SEEK==0 = ADD_TO_BUFFER
                           623             ;; | BUFFER[SEEK]== BL = ADD_TO_BUFFER
                           624             ;; | ELSE = (ADD_TO_BUFFER) & (SEEK 0) AKA RESET
                           625     
02DC 5A                    626                     pop dx
02DD 58                    627                     pop ax
02DE CB                    628     RET
                           629     KBD_PROCESS             ENDP
                           630     
02DF                       631     KEYBOARD2 PROC FAR
                           632     
02DF 52                    633                     PUSH    DX
02E0 51                    634                     PUSH    CX
02E1 53                    635                     PUSH    BX
02E2 50                    636                     PUSH    AX
                           637                     
                           638     
02E3                       639     INIT2:          
                           640                     
                           641                     
02E3 B1F7                  642                     MOV CL, 0F7H    ;STORES OUTPUT FOR ROW COUNTER;
                           643                     ;MOV AL,0FEH ; 1110 1111
02E5 B500                  644                     MOV CH, 0H      ;set row counter
02E7 882E7300              645                     MOV DS:KBD_ROW_COUNTER2,CH
02EB 880E7400              646                     MOV DS:KBD_OUTPUT2, CL
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE   14


LOC  OBJ                  LINE     SOURCE

                           647             
                           648                     ;call far ptr print_char
02EF EB0490                649                     jmp next_row2
02F2                       650     hacky_shit:
02F2 E98400                651                     jmp exit_kbd2
                           652                     
02F5                       653     NEXT_ROW2:
02F5 A07300                654                     MOV AL,DS:KBD_ROW_COUNTER2
                           655             
                           656     
02F8 3C04                  657                     CMP AL,04
02FA 7DF6                  658                     JGE hacky_shit
02FC 8A0E7400              659                     MOV CL,DS:KBD_OUTPUT2 
0300 D0C1                  660                     ROL CL, 01H       ;rotate AL to ground next row/ al HAS 8 BITS. so mu
                                   st JMP BACK TO WAIT
                           661     
                           662                     ;MOV CH, AL     ;save data byte to ground next row ;WAT?
0302 8AC1                  663                     MOV AL,CL
0304 BA8200                664                     MOV DX, PORTC   ;port C address to DX; 
0307 EE                    665                     OUT DX, AL      ;give positive logic to one of the rows
0308 A27400                666                     MOV DS:KBD_OUTPUT2, AL  
                           667             ;add al,48
                           668                     ;call far ptr print_char
030B BA8100                669                     MOV DX, PORTB   ;port B address to DX  
030E EC                    670                     IN  AL,DX       ;read input port for key closure
                           671                     
                           672                     
                           673                     ;mov al,101b; change later
                           674                     ;call far ptr print_char
030F 2438                  675                     AND AL, 38H     ;Mask D4-D7  00xx x000
0311 C0E803                676                     SHR AL,03
0314 3C07                  677                     CMP AL,07H
0316 745A                  678                     JE RETPOINT2
                           679                     ;ERROR CHECK
0318 3C06                  680                     CMP AL,0110B
031A 740B                  681                     JE VALIDATED2
031C 3C05                  682                     CMP AL,0101B
031E 7407                  683                     JE VALIDATED2
0320 3C03                  684                     CMP AL,011B
0322 7403                  685                     JE VALIDATED2
0324 EB4C90                686                     JMP RETPOINT2
                           687                     
0327                       688     VALIDATED2:             
0327 9A7E03----     R      689                     CALL FAR PTR KBD_PROCESS2
                           690                     ;Bl CONTAINS iNDEX OF ARRAY WITH CURRENT KEY
                           691             ;; | SEEK==0 = ADD_TO_BUFFER
                           692             ;; | BUFFER[SEEK]== BL = ADD_TO_BUFFER
                           693             ;; | ELSE = (ADD_TO_BUFFER) & (SEEK 0) AKA RESET
                           694                     ;JMP NUMBERS
                           695     
032C                       696     NUMBERS2:
032C 32FF                  697                     XOR BH, BH
032E 8A473A                698                     MOV AL,DS:array2[BX] ; Stores character in AL (?)
0331 32E4                  699                     XOR AH,AH
                           700                     ;CALL   FAR PTR PRINT_CHAR
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE   15


LOC  OBJ                  LINE     SOURCE

                           701                     
0333 8A0E8900              702             MOV CL, DS:KBD_BUFFER_SEEK2
0337 80F900                703             CMP CL,0H
033A 740E                  704             JZ ADD_TO_BUFFER2
                           705                                     
033C 8A0E7500              706             MOV CL, KBD_BUFFER2
                           707                     ;COMPARE WITH VALUE AT SEEK
0340 3AC8                  708             CMP CL,AL
0342 7406                  709                     JZ  ADD_TO_BUFFER2
                           710                     
0344 32C9                  711                     XOR CL,CL
0346 880E8900              712                     MOV DS:KBD_BUFFER_SEEK2, CL
                           713                                     
                           714     
034A                       715     ADD_TO_BUFFER2:
                           716             ;;PUT AL INTO SI SO WE CAN PUT CURRENT CHAR IN THE BUFFER 
034A 32ED                  717                     XOR CH,CH
034C 8BF1                  718                     MOV SI,CX
034E 884475                719                     MOV DS:KBD_BUFFER2[SI],AL
0351 FE068900              720                     INC DS:KBD_BUFFER_SEEK2
                           721     
0355 B98813                722                     mov cx, 5000
0358                       723     Debounce2:
0358 90                    724                     nop
0359 E2FD                  725                     loop debounce2
035B                       726     CHECKER_SEEK2:
035B 8A0E8900              727                     MOV CL, DS:KBD_BUFFER_SEEK2
035F 80F909                728                     CMP CL,KBD_BUFFER_LEN2
                           729                     ;ADD CL,48
                           730                     ;MOV AL,CL
                           731                     ;CALL FAR PTR PRINT_CHAR
                           732                     
0362 750E                  733                     JNE RETPOINT2
                           734                     ;RESET KBD_BUFFER_SEEK
                           735                     ;AL CONTAINS CHAR
0364 A28A00                736                     MOV DS:KBD_INPUT2, AL
0367 9A0000----     E      737                     CALL    FAR PTR PRINT_CHAR
                           738             ;;      CALL FAR PTR ADD_LED_BUFFER
036C 32C9                  739                     XOR CL,CL
                           740                     ;BUFFER_SEEK IS RESET
036E 880E8900              741                     MOV DS:KBD_BUFFER_SEEK2, CL
0372                       742     RETPOINT2:      
0372 FE067300              743             INC DS:KBD_ROW_COUNTER2
                           744             
0376 E97CFF                745             JMP NEXT_ROW2
                           746                     
0379                       747     exit_kbd2:      
0379 58                    748             POP AX
037A 5B                    749             POP BX
037B 59                    750             POP CX
037C 5A                    751             POP DX
037D CB                    752             RET
                           753     KEYBOARD2 ENDP
                           754     
037E                       755     KBD_PROCESS2            PROC    FAR
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE   16


LOC  OBJ                  LINE     SOURCE

037E 50                    756                     push ax
037F 52                    757                     push dx
                           758                     ;0000 0101 => 1111 1010 => 0000 0010  => 0 , 1, 10   
0380 F6D0                  759                     NOT AL
0382 2407                  760                     AND AL, 07H; MASK OTHER BLOODY BITS OMGOMGOMG
0384 D0E8                  761                     SHR AL,01 ; DIVIDE AL BY 2. TO GET COL NUMBER
0386 8AD0                  762                     MOV DL,AL ; TEMP STORE AL IE PORTB INPUT AKA COL NUMBER
                           763                     
0388 A07300                764                     mov Al,DS:KBD_ROW_COUNTER2 ; ROW COUNT MOVED TO AL
038B B603                  765                     MOV DH,03 ; TO MULTIPLY BY 3
                           766                     ;MULTIPLY THE FUCKER
038D F6E6                  767                     MUL DH
                           768                     ; RESULT IN AX
                           769                     
                           770                     
                           771                     ; NUMBER  <= 9 
038F 02C2                  772                     ADD AL, DL ;ADD row*3 NO TO COL NUMBER
0391 8AD8                  773                     MOV BL,AL
0393 32FF                  774                     XOR BH,BH
                           775                     ;Bl CONTAINS iNDEX OF ARRAY WITH CURRENT KEY
                           776             ;; | SEEK==0 = ADD_TO_BUFFER
                           777             ;; | BUFFER[SEEK]== BL = ADD_TO_BUFFER
                           778             ;; | ELSE = (ADD_TO_BUFFER) & (SEEK 0) AKA RESET
                           779     
0395 5A                    780                     pop dx
0396 58                    781                     pop ax
0397 CB                    782     RET
                           783     KBD_PROCESS2            ENDP
                           784             
0398                       785     TIMER2_ACTION   PROC    FAR
0398 50                    786                     PUSH    AX
0399 1E                    787                     PUSH    DS
039A 53                    788                     PUSH    BX
039B 51                    789                     PUSH    CX
                           790     
                           791                     
                           792     ;CALL FAR PTR DISPLAY_BCD
                           793     ;CALL FAR PTR KEYBOARD  
039C 9ABE03----     R      794     CALL FAR PTR DISPLAY_LED
                           795     ;CALL FAR PTR ADD_LED_BUFFER
03A1 FE0E1700              796     DEC     DS:T_COUNT
03A5 7512                  797                     JNZ     T_NEXT1
03A7 A01800                798                     MOV     AL,DS:T_COUNT_SET
03AA A21700                799                     MOV     DS:T_COUNT,AL
                           800     
03AD B91400                801                     MOV     CX,20
03B0 BB0000                802                     MOV     BX,0H
03B3                       803     T_NEXT0:
03B3 8A4701                804                     MOV     AL,DS:TIMER0_MESS[BX]
                           805             
03B6 43                    806                     INC     BX
                           807             ;;              CALL    FAR PTR PRINT_CHAR
03B7 E2FA                  808                     LOOP    T_NEXT0
                           809     ;       
03B9                       810     T_NEXT1:
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE   17


LOC  OBJ                  LINE     SOURCE

                           811     
                           812     
03B9 59                    813                     POP     CX
03BA 5B                    814                     POP     BX
03BB 1F                    815                     POP     DS
03BC 58                    816                     POP     AX
03BD CB                    817                     RET
                           818     TIMER2_ACTION   ENDP
                           819     
03BE                       820     DISPLAY_LED     PROC    FAR
03BE 50                    821             PUSH AX
03BF 53                    822             PUSH BX
03C0 51                    823             PUSH CX
03C1 52                    824             PUSH DX
                           825             ; CONVERTS CUR_LED TO SIGNAL
03C2 8A1E5600              826             MOV BL, DS:CUR_LED
03C6 B0FE                  827             MOV AL,0FEH
03C8 8ACB                  828             MOV CL, BL
03CA D2C0                  829             ROL AL,CL
                           830             
03CC BA0001                831             MOV DX, LED_SELECT
03CF EE                    832             OUT DX, AL
                           833             
03D0 32FF                  834             XOR BH,BH
03D2 8A4750                835             MOV AL, DS:LED_BUFFER[BX]
03D5 BA8001                836             MOV DX, LED_OUTPUT
03D8 EE                    837             OUT DX,AL
                           838     
03D9 B99001                839             MOV CX, 400
03DC                       840     SUSTAIN:        
                           841             
03DC 90                    842             NOP
03DD E2FD                  843             LOOP SUSTAIN
                           844             
                           845     ; CLEAR THE FUCKER
03DF B000                  846             MOV AL, 0H
03E1 BA8001                847             MOV DX, LED_OUTPUT
03E4 EE                    848             OUT DX, AL
                           849             
03E5 A05600                850             MOV AL, DS:CUR_LED
03E8 3C05                  851             CMP AL, 5
03EA 7D07                  852             JGE RESTORE
03EC FE065600              853             INC DS:CUR_LED
03F0 EB0690                854             JMP EXIT
03F3                       855     RESTORE:
03F3 32C0                  856             XOR AL,AL
03F5 A25600                857             MOV DS:CUR_LED, AL
                           858             
03F8                       859     EXIT:
03F8 5A                    860             POP DX
03F9 59                    861             POP CX
03FA 5B                    862             POP BX
03FB 58                    863             POP AX
03FC CB                    864             RET
                           865     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE   18


LOC  OBJ                  LINE     SOURCE

                           866     DISPLAY_LED ENDP
                           867     
03FD                       868     DISPLAY_PRICE_LED PROC FAR
03FD 50                    869             PUSH AX
03FE 53                    870             PUSH BX
03FF 51                    871             PUSH CX
0400 52                    872             PUSH DX
0401 B90600                873             MOV CX, PRICE_LEN
0404 BB0000                874             MOV BX,0
                           875      
0407                       876     LOOP_DISP_LED:
0407 8A87A600              877             MOV AL, DS:CUR_PRICE[BX]
040B 2C30                  878             SUB AL,48
040D 9A9604----     R      879             CALL FAR PTR BCD_TO_7SEG
0412 884750                880             MOV DS:LED_BUFFER[BX], AL
0415 43                    881             INC BX
0416 E2EF                  882             LOOP LOOP_DISP_LED
                           883             
                           884             
0418 5A                    885             POP DX
0419 59                    886             POP CX
041A 5B                    887             POP BX
041B 58                    888             POP AX
041C CB                    889             RET
                           890     DISPLAY_PRICE_LED ENDP
041D                       891     ADD_LED_BUFFER  PROC    FAR
041D 50                    892             PUSH AX
041E 53                    893             PUSH BX
041F 51                    894             PUSH CX
0420 52                    895             PUSH DX
0421 A07200                896             MOV AL, DS:LED_CURSOR
0424 3C06                  897             CMP AL, 06
0426 7C08                  898             JL INCREMENT
0428 32C0                  899             XOR AL, AL
042A A27200                900             MOV DS:LED_CURSOR,AL
042D EB0590                901             JMP DONE_INC
0430                       902     INCREMENT:
                           903             ;MOV AL, DS:KBD_INPUT
                           904             ;CMP AL, '*'
                           905             ;JNE DONE_INC
0430 FE067200              906             INC DS:LED_CURSOR
                           907             ;JMP ENDING
0434                       908     DONE_INC:       
0434 8A1E7000              909             MOV BL, DS:KBD_INPUT
                           910             ;CONVERT ASCII TO NUMBER
                           911             
0438 80EB30                912             SUB BL, 48
043B 32FF                  913             XOR BH, BH
043D 8A4746                914             MOV AL, DS:BCD[BX]
0440 8A1E7200              915             MOV BL, DS:LED_CURSOR
0444 32FF                  916             XOR BH,BH
0446 884750                917             MOV DS:LED_BUFFER[BX],AL
0449                       918     ENDING: 
0449 5A                    919             POP DX
044A 59                    920             POP CX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE   19


LOC  OBJ                  LINE     SOURCE

044B 5B                    921             POP BX
044C 58                    922             POP AX
044D CB                    923             RET
                           924     ADD_LED_BUFFER  ENDP
                           925     
044E                       926     CLEAR_LED       PROC    FAR
044E 50                    927             PUSH AX
044F 53                    928             PUSH BX
0450 51                    929             PUSH CX
                           930             ;; LEDS DISPLAY -
0451 B07F                  931             MOV AL, 07fH
0453 33DB                  932             XOR BX, BX
0455 B90600                933             MOV CX, 06
0458                       934     CLEAR_START:
0458 884750                935             MOV DS:LED_BUFFER[BX], AL
045B 43                    936             INC BX
045C E2FA                  937             LOOP CLEAR_START
                           938     
045E 59                    939             POP CX
045F 5B                    940             POP BX
0460 58                    941             POP AX
0461 CB                    942             RET
                           943     CLEAR_LED       ENDP
                           944     
0462                       945     MAKE_PACKET     PROC    FAR
0462 50                    946             PUSH AX
0463 53                    947             PUSH BX
0464 51                    948             PUSH CX
0465 52                    949             PUSH DX
0466 56                    950             PUSH SI
0467 B90800                951             MOV CX,BARCODE_LEN
046A 32FF                  952             XOR BH,BH
046C B301                  953             MOV BL, 01
046E BE0000                954             MOV SI,0
0471                       955     BARCODE_LOOP:
0471 8A84B900              956             MOV AL, DS:BARCODE_BUFFER[SI]
0475 88878B00              957             MOV DS:BARCODE[BX],AL
0479 43                    958             INC BX
047A 46                    959             INC SI
047B E2F4                  960             LOOP BARCODE_LOOP
                           961             
047D 43                    962             INC BX
                           963             ; FOR : BETWEEN BARCODE & PRICE
                           964             
047E B90400                965             MOV CX, QUANTITY_LEN
0481 BE0000                966             MOV SI,0
0484                       967     QUANTITY_LOOP:
0484 8A84EC00              968             MOV AL, DS:QUANTITY_BUFFER[SI]
0488 88878B00              969             MOV DS:BARCODE[BX],AL
048C 43                    970             INC BX
048D 46                    971             INC SI
048E E2F4                  972             LOOP QUANTITY_LOOP
                           973     
0490 5E                    974             POP SI
0491 5A                    975             POP DX
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    03:09:25  11/30/;2  PAGE   20


LOC  OBJ                  LINE     SOURCE

0492 59                    976             POP CX
0493 5B                    977             POP BX
0494 58                    978             POP AX
0495 CB                    979             RET
                           980     MAKE_PACKET     ENDP
                           981             
                           982     
                           983     ;EXPECTS A 4BIT BCD DIGIT IN AL. RETURNS THE 7SEG CODE IN AL FOR THAT DIGIT     
0496                       984     BCD_TO_7SEG     PROC    FAR
0496 53                    985             PUSH BX
                           986     
                           987             ;; STORE AL TEMPORARILY IN BL
0497 8AD8                  988             MOV BL,AL
                           989             
0499 32FF                  990             XOR BH,BH
                           991             ;; GET THE BLTH INDEX OF THE BCD ARRAY IN DATA_SEG
049B 8A4746                992             MOV AL,DS:BCD[BX]
049E 5B                    993             POP BX
049F CB                    994             RET
                           995     BCD_TO_7SEG     ENDP    
                           996     
04A0                       997     PRINT_BARCODE_BUFFER PROC FAR
04A0 50                    998             PUSH AX
04A1 53                    999             PUSH BX
04A2 51                   1000             PUSH CX
04A3 B055                 1001             MOV AL, 'U'
04A5 9A0000----     E     1002             CALL FAR PTR PRINT_CHAR
04AA B90800               1003             MOV CX, BARCODE_LEN
04AD BB0000               1004             MOV BX,0
04B0                      1005     LOOP_BB:
04B0 8A87B900             1006             MOV AL, DS:BARCODE_BUFFER[BX]
04B4 9A0000----     E     1007             CALL FAR PTR PRINT_CHAR
04B9 43                   1008             INC BX
04BA E2F4                 1009             LOOP LOOP_BB
                          1010     
04BC 59                   1011             POP CX
04BD 5B                   1012             POP BX
04BE 58                   1013             POP AX
04BF CB                   1014             RET
                          1015     PRINT_BARCODE_BUFFER ENDP
                          1016     
----                      1017     CODE_SEG        ENDS
                          1018     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
